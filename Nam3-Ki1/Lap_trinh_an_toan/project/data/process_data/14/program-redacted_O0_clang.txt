
./data/process_data_1/14/program-redacted_O0_clang:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <strncpy@plt-0x10>:
    1020:	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	nop    DWORD PTR [rax+0x0]

0000000000001030 <strncpy@plt>:
    1030:	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <strncpy@GLIBC_2.2.5>
    1036:	push   0x0
    103b:	jmp    1020 <_init+0x20>

0000000000001040 <strcpy@plt>:
    1040:	jmp    QWORD PTR [rip+0x2fda]        # 4020 <strcpy@GLIBC_2.2.5>
    1046:	push   0x1
    104b:	jmp    1020 <_init+0x20>

0000000000001050 <puts@plt>:
    1050:	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <puts@GLIBC_2.2.5>
    1056:	push   0x2
    105b:	jmp    1020 <_init+0x20>

0000000000001060 <printf@plt>:
    1060:	jmp    QWORD PTR [rip+0x2fca]        # 4030 <printf@GLIBC_2.2.5>
    1066:	push   0x3
    106b:	jmp    1020 <_init+0x20>

0000000000001070 <memset@plt>:
    1070:	jmp    QWORD PTR [rip+0x2fc2]        # 4038 <memset@GLIBC_2.2.5>
    1076:	push   0x4
    107b:	jmp    1020 <_init+0x20>

0000000000001080 <read@plt>:
    1080:	jmp    QWORD PTR [rip+0x2fba]        # 4040 <read@GLIBC_2.2.5>
    1086:	push   0x5
    108b:	jmp    1020 <_init+0x20>

0000000000001090 <strtol@plt>:
    1090:	jmp    QWORD PTR [rip+0x2fb2]        # 4048 <strtol@GLIBC_2.2.5>
    1096:	push   0x6
    109b:	jmp    1020 <_init+0x20>

00000000000010a0 <select@plt>:
    10a0:	jmp    QWORD PTR [rip+0x2faa]        # 4050 <select@GLIBC_2.2.5>
    10a6:	push   0x7
    10ab:	jmp    1020 <_init+0x20>

00000000000010b0 <fseek@plt>:
    10b0:	jmp    QWORD PTR [rip+0x2fa2]        # 4058 <fseek@GLIBC_2.2.5>
    10b6:	push   0x8
    10bb:	jmp    1020 <_init+0x20>

00000000000010c0 <exit@plt>:
    10c0:	jmp    QWORD PTR [rip+0x2f9a]        # 4060 <exit@GLIBC_2.2.5>
    10c6:	push   0x9
    10cb:	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000010d0 <__cxa_finalize@plt>:
    10d0:	jmp    QWORD PTR [rip+0x2f22]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10d6:	xchg   ax,ax

Disassembly of section .text:

00000000000010e0 <_start>:
    10e0:	endbr64 
    10e4:	xor    ebp,ebp
    10e6:	mov    r9,rdx
    10e9:	pop    rsi
    10ea:	mov    rdx,rsp
    10ed:	and    rsp,0xfffffffffffffff0
    10f1:	push   rax
    10f2:	push   rsp
    10f3:	xor    r8d,r8d
    10f6:	xor    ecx,ecx
    10f8:	lea    rdi,[rip+0x2a1]        # 13a0 <main>
    10ff:	call   QWORD PTR [rip+0x2ecb]        # 3fd0 <__libc_start_main@GLIBC_2.34>
    1105:	hlt    
    1106:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001110 <deregister_tm_clones>:
    1110:	lea    rdi,[rip+0x2f69]        # 4080 <__TMC_END__>
    1117:	lea    rax,[rip+0x2f62]        # 4080 <__TMC_END__>
    111e:	cmp    rax,rdi
    1121:	je     1138 <deregister_tm_clones+0x28>
    1123:	mov    rax,QWORD PTR [rip+0x2eae]        # 3fd8 <_ITM_deregisterTMCloneTable@Base>
    112a:	test   rax,rax
    112d:	je     1138 <deregister_tm_clones+0x28>
    112f:	jmp    rax
    1131:	nop    DWORD PTR [rax+0x0]
    1138:	ret    
    1139:	nop    DWORD PTR [rax+0x0]

0000000000001140 <register_tm_clones>:
    1140:	lea    rdi,[rip+0x2f39]        # 4080 <__TMC_END__>
    1147:	lea    rsi,[rip+0x2f32]        # 4080 <__TMC_END__>
    114e:	sub    rsi,rdi
    1151:	mov    rax,rsi
    1154:	shr    rsi,0x3f
    1158:	sar    rax,0x3
    115c:	add    rsi,rax
    115f:	sar    rsi,1
    1162:	je     1178 <register_tm_clones+0x38>
    1164:	mov    rax,QWORD PTR [rip+0x2e85]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    116b:	test   rax,rax
    116e:	je     1178 <register_tm_clones+0x38>
    1170:	jmp    rax
    1172:	nop    WORD PTR [rax+rax*1+0x0]
    1178:	ret    
    1179:	nop    DWORD PTR [rax+0x0]

0000000000001180 <__do_global_dtors_aux>:
    1180:	endbr64 
    1184:	cmp    BYTE PTR [rip+0x2ef5],0x0        # 4080 <__TMC_END__>
    118b:	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	push   rbp
    118e:	cmp    QWORD PTR [rip+0x2e62],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1196:	mov    rbp,rsp
    1199:	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	mov    rdi,QWORD PTR [rip+0x2ece]        # 4070 <__dso_handle>
    11a2:	call   10d0 <__cxa_finalize@plt>
    11a7:	call   1110 <deregister_tm_clones>
    11ac:	mov    BYTE PTR [rip+0x2ecd],0x1        # 4080 <__TMC_END__>
    11b3:	pop    rbp
    11b4:	ret    
    11b5:	nop    DWORD PTR [rax]
    11b8:	ret    
    11b9:	nop    DWORD PTR [rax+0x0]

00000000000011c0 <frame_dummy>:
    11c0:	endbr64 
    11c4:	jmp    1140 <register_tm_clones>
    11c9:	nop    DWORD PTR [rax+0x0]

00000000000011d0 <tgetinput>:
    11d0:	push   rbp
    11d1:	mov    rbp,rsp
    11d4:	sub    rsp,0xc0
    11db:	mov    QWORD PTR [rbp-0x10],rdi
    11df:	mov    DWORD PTR [rbp-0x14],esi
    11e2:	mov    DWORD PTR [rbp-0xac],0x0
    11ec:	mov    DWORD PTR [rbp-0xb0],0x0
    11f6:	cmp    DWORD PTR [rbp-0x14],0x0
    11fa:	ja     121a <tgetinput+0x4a>
    1200:	lea    rdi,[rip+0xdfd]        # 2004 <_IO_stdin_used+0x4>
    1207:	mov    al,0x0
    1209:	call   1060 <printf@plt>
    120e:	mov    DWORD PTR [rbp-0x4],0xfffffffe
    1215:	jmp    1394 <tgetinput+0x1c4>
    121a:	jmp    121f <tgetinput+0x4f>
    121f:	lea    rax,[rbp-0x98]
    1226:	mov    QWORD PTR [rbp-0xc0],rax
    122d:	mov    DWORD PTR [rbp-0xb4],0x0
    1237:	mov    eax,DWORD PTR [rbp-0xb4]
    123d:	cmp    rax,0x10
    1241:	jae    1270 <tgetinput+0xa0>
    1247:	mov    rax,QWORD PTR [rbp-0xc0]
    124e:	mov    ecx,DWORD PTR [rbp-0xb4]
    1254:	mov    QWORD PTR [rax+rcx*8],0x0
    125c:	mov    eax,DWORD PTR [rbp-0xb4]
    1262:	add    eax,0x1
    1265:	mov    DWORD PTR [rbp-0xb4],eax
    126b:	jmp    1237 <tgetinput+0x67>
    1270:	jmp    1275 <tgetinput+0xa5>
    1275:	mov    rax,QWORD PTR [rbp-0x98]
    127c:	or     rax,0x1
    1280:	mov    QWORD PTR [rbp-0x98],rax
    1287:	mov    QWORD PTR [rbp-0xa8],0x3c
    1292:	mov    QWORD PTR [rbp-0xa0],0x0
    129d:	mov    edi,0x1
    12a2:	lea    rsi,[rbp-0x98]
    12a9:	xor    eax,eax
    12ab:	mov    ecx,eax
    12ad:	lea    r8,[rbp-0xa8]
    12b4:	mov    rdx,rcx
    12b7:	call   10a0 <select@plt>
    12bc:	mov    DWORD PTR [rbp-0xac],eax
    12c2:	cmp    DWORD PTR [rbp-0xac],0xffffffff
    12c9:	jne    12e9 <tgetinput+0x119>
    12cf:	lea    rdi,[rip+0xd58]        # 202e <_IO_stdin_used+0x2e>
    12d6:	mov    al,0x0
    12d8:	call   1060 <printf@plt>
    12dd:	mov    DWORD PTR [rbp-0x4],0xffffffff
    12e4:	jmp    1394 <tgetinput+0x1c4>
    12e9:	cmp    DWORD PTR [rbp-0xac],0x0
    12f0:	je     137f <tgetinput+0x1af>
    12f6:	mov    rsi,QWORD PTR [rbp-0x10]
    12fa:	mov    eax,DWORD PTR [rbp-0x14]
    12fd:	sub    eax,0x1
    1300:	mov    eax,eax
    1302:	mov    edx,eax
    1304:	xor    edi,edi
    1306:	call   1080 <read@plt>
    130b:	mov    DWORD PTR [rbp-0xb0],eax
    1311:	mov    rax,QWORD PTR [rbp-0x10]
    1315:	mov    ecx,DWORD PTR [rbp-0xb0]
    131b:	sub    ecx,0x1
    131e:	movsxd rcx,ecx
    1321:	movsx  eax,BYTE PTR [rax+rcx*1]
    1325:	cmp    eax,0xa
    1328:	jne    134c <tgetinput+0x17c>
    132e:	mov    eax,DWORD PTR [rbp-0xb0]
    1334:	add    eax,0xffffffff
    1337:	mov    DWORD PTR [rbp-0xb0],eax
    133d:	mov    rax,QWORD PTR [rbp-0x10]
    1341:	movsxd rcx,DWORD PTR [rbp-0xb0]
    1348:	mov    BYTE PTR [rax+rcx*1],0x0
    134c:	cmp    DWORD PTR [rbp-0xb0],0x0
    1353:	jne    1373 <tgetinput+0x1a3>
    1359:	lea    rdi,[rip+0xce9]        # 2049 <_IO_stdin_used+0x49>
    1360:	mov    al,0x0
    1362:	call   1060 <printf@plt>
    1367:	mov    DWORD PTR [rbp-0x4],0xfffffffc
    136e:	jmp    1394 <tgetinput+0x1c4>
    1373:	mov    DWORD PTR [rbp-0x4],0x0
    137a:	jmp    1394 <tgetinput+0x1c4>
    137f:	lea    rdi,[rip+0xcd3]        # 2059 <_IO_stdin_used+0x59>
    1386:	mov    al,0x0
    1388:	call   1060 <printf@plt>
    138d:	mov    DWORD PTR [rbp-0x4],0xfffffffd
    1394:	mov    eax,DWORD PTR [rbp-0x4]
    1397:	add    rsp,0xc0
    139e:	pop    rbp
    139f:	ret    

00000000000013a0 <main>:
    13a0:	push   rbp
    13a1:	mov    rbp,rsp
    13a4:	sub    rsp,0x30
    13a8:	mov    DWORD PTR [rbp-0x4],0x0
    13af:	mov    DWORD PTR [rbp-0x8],edi
    13b2:	mov    QWORD PTR [rbp-0x10],rsi
    13b6:	lea    rdi,[rbp-0x13]
    13ba:	xor    esi,esi
    13bc:	mov    edx,0x3
    13c1:	call   1070 <memset@plt>
    13c6:	lea    rdi,[rip+0xcca]        # 2097 <_IO_stdin_used+0x97>
    13cd:	call   1050 <puts@plt>
    13d2:	lea    rdi,[rip+0xcde]        # 20b7 <_IO_stdin_used+0xb7>
    13d9:	call   1050 <puts@plt>
    13de:	lea    rdi,[rip+0xcff]        # 20e4 <_IO_stdin_used+0xe4>
    13e5:	call   1050 <puts@plt>
    13ea:	lea    rdi,[rip+0xd1d]        # 210e <_IO_stdin_used+0x10e>
    13f1:	call   1050 <puts@plt>
    13f6:	lea    rdi,[rbp-0x13]
    13fa:	mov    esi,0x3
    13ff:	call   11d0 <tgetinput>
    1404:	mov    DWORD PTR [rbp-0x24],eax
    1407:	cmp    DWORD PTR [rbp-0x24],0xfffffffd
    140b:	jne    1426 <main+0x86>
    1411:	lea    rdi,[rip+0xd13]        # 212b <_IO_stdin_used+0x12b>
    1418:	mov    al,0x0
    141a:	call   1060 <printf@plt>
    141f:	xor    edi,edi
    1421:	call   10c0 <exit@plt>
    1426:	lea    rdi,[rbp-0x13]
    142a:	xor    eax,eax
    142c:	mov    esi,eax
    142e:	mov    edx,0xa
    1433:	call   1090 <strtol@plt>
    1438:	mov    QWORD PTR [rbp-0x20],rax
    143c:	cmp    rax,0x0
    1440:	jne    1457 <main+0xb7>
    1446:	lea    rdi,[rip+0xce8]        # 2135 <_IO_stdin_used+0x135>
    144d:	call   1050 <puts@plt>
    1452:	jmp    14f1 <main+0x151>
    1457:	cmp    QWORD PTR [rbp-0x20],0x1
    145c:	jne    1478 <main+0xd8>
    1462:	call   1500 <data_write>
    1467:	lea    rdi,[rip+0xce4]        # 2152 <_IO_stdin_used+0x152>
    146e:	call   1050 <puts@plt>
    1473:	jmp    14ec <main+0x14c>
    1478:	cmp    QWORD PTR [rbp-0x20],0x2
    147d:	jne    14b7 <main+0x117>
    1483:	cmp    DWORD PTR [rip+0x2c06],0x0        # 4090 <inputs>
    148a:	jne    14a1 <main+0x101>
    1490:	lea    rdi,[rip+0xcf1]        # 2188 <_IO_stdin_used+0x188>
    1497:	call   1050 <puts@plt>
    149c:	jmp    13f6 <main+0x56>
    14a1:	call   1650 <data_read>
    14a6:	lea    rdi,[rip+0xce7]        # 2194 <_IO_stdin_used+0x194>
    14ad:	call   1050 <puts@plt>
    14b2:	jmp    14e7 <main+0x147>
    14b7:	cmp    QWORD PTR [rbp-0x20],0x3
    14bc:	jne    14ca <main+0x12a>
    14c2:	xor    eax,eax
    14c4:	add    rsp,0x30
    14c8:	pop    rbp
    14c9:	ret    
    14ca:	lea    rdi,[rip+0xcf8]        # 21c9 <_IO_stdin_used+0x1c9>
    14d1:	call   1050 <puts@plt>
    14d6:	lea    rdi,[rip+0xd09]        # 21e6 <_IO_stdin_used+0x1e6>
    14dd:	call   1050 <puts@plt>
    14e2:	jmp    14e7 <main+0x147>
    14e7:	jmp    14ec <main+0x14c>
    14ec:	jmp    14f1 <main+0x151>
    14f1:	jmp    13f6 <main+0x56>
    14f6:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001500 <data_write>:
    1500:	push   rbp
    1501:	mov    rbp,rsp
    1504:	sub    rsp,0x90
    150b:	lea    rdi,[rip+0xd08]        # 221a <_IO_stdin_used+0x21a>
    1512:	mov    al,0x0
    1514:	call   1060 <printf@plt>
    1519:	lea    rdi,[rbp-0x70]
    151d:	mov    esi,0x64
    1522:	call   11d0 <tgetinput>
    1527:	mov    DWORD PTR [rbp-0x84],eax
    152d:	cmp    DWORD PTR [rbp-0x84],0xfffffffd
    1534:	jne    154f <data_write+0x4f>
    153a:	lea    rdi,[rip+0xbea]        # 212b <_IO_stdin_used+0x12b>
    1541:	mov    al,0x0
    1543:	call   1060 <printf@plt>
    1548:	xor    edi,edi
    154a:	call   10c0 <exit@plt>
    154f:	jmp    1554 <data_write+0x54>
    1554:	lea    rdi,[rip+0xcd8]        # 2233 <_IO_stdin_used+0x233>
    155b:	mov    al,0x0
    155d:	call   1060 <printf@plt>
    1562:	lea    rdi,[rbp-0x74]
    1566:	mov    esi,0x4
    156b:	call   11d0 <tgetinput>
    1570:	mov    DWORD PTR [rbp-0x84],eax
    1576:	cmp    DWORD PTR [rbp-0x84],0xfffffffd
    157d:	jne    1598 <data_write+0x98>
    1583:	lea    rdi,[rip+0xba1]        # 212b <_IO_stdin_used+0x12b>
    158a:	mov    al,0x0
    158c:	call   1060 <printf@plt>
    1591:	xor    edi,edi
    1593:	call   10c0 <exit@plt>
    1598:	lea    rdi,[rbp-0x74]
    159c:	xor    eax,eax
    159e:	mov    esi,eax
    15a0:	mov    edx,0xa
    15a5:	call   1090 <strtol@plt>
    15aa:	mov    QWORD PTR [rbp-0x80],rax
    15ae:	cmp    rax,0x0
    15b2:	jne    15c9 <data_write+0xc9>
    15b8:	lea    rdi,[rip+0xc9b]        # 225a <_IO_stdin_used+0x25a>
    15bf:	call   1050 <puts@plt>
    15c4:	jmp    15ce <data_write+0xce>
    15c9:	jmp    15d3 <data_write+0xd3>
    15ce:	jmp    1554 <data_write+0x54>
    15d3:	cmp    DWORD PTR [rip+0x2ab6],0xa        # 4090 <inputs>
    15da:	jle    15ea <data_write+0xea>
    15e0:	mov    DWORD PTR [rip+0x2aa6],0x0        # 4090 <inputs>
    15ea:	movsxd rax,DWORD PTR [rip+0x2a9f]        # 4090 <inputs>
    15f1:	lea    rdi,[rip+0x2aa8]        # 40a0 <data>
    15f8:	imul   rax,rax,0x64
    15fc:	add    rdi,rax
    15ff:	lea    rsi,[rbp-0x70]
    1603:	call   1040 <strcpy@plt>
    1608:	mov    rax,QWORD PTR [rbp-0x80]
    160c:	mov    edx,eax
    160e:	movsxd rcx,DWORD PTR [rip+0x2a7b]        # 4090 <inputs>
    1615:	lea    rax,[rip+0x2e74]        # 4490 <input_lengths>
    161c:	mov    DWORD PTR [rax+rcx*4],edx
    161f:	mov    esi,DWORD PTR [rip+0x2a6b]        # 4090 <inputs>
    1625:	add    esi,0x1
    1628:	lea    rdi,[rip+0xc48]        # 2277 <_IO_stdin_used+0x277>
    162f:	mov    al,0x0
    1631:	call   1060 <printf@plt>
    1636:	mov    eax,DWORD PTR [rip+0x2a54]        # 4090 <inputs>
    163c:	add    eax,0x1
    163f:	mov    DWORD PTR [rip+0x2a4b],eax        # 4090 <inputs>
    1645:	add    rsp,0x90
    164c:	pop    rbp
    164d:	ret    
    164e:	xchg   ax,ax

0000000000001650 <data_read>:
    1650:	push   rbp
    1651:	mov    rbp,rsp
    1654:	sub    rsp,0x90
    165b:	lea    rdi,[rbp-0x80]
    165f:	xor    esi,esi
    1661:	mov    edx,0x64
    1666:	call   1070 <memset@plt>
    166b:	lea    rdi,[rip+0xc1f]        # 2291 <_IO_stdin_used+0x291>
    1672:	mov    al,0x0
    1674:	call   1060 <printf@plt>
    1679:	lea    rdi,[rbp-0x4]
    167d:	mov    esi,0x4
    1682:	call   11d0 <tgetinput>
    1687:	mov    DWORD PTR [rbp-0x84],eax
    168d:	cmp    DWORD PTR [rbp-0x84],0xfffffffd
    1694:	jne    16af <data_read+0x5f>
    169a:	lea    rdi,[rip+0xa8a]        # 212b <_IO_stdin_used+0x12b>
    16a1:	mov    al,0x0
    16a3:	call   1060 <printf@plt>
    16a8:	xor    edi,edi
    16aa:	call   10c0 <exit@plt>
    16af:	lea    rdi,[rbp-0x4]
    16b3:	xor    eax,eax
    16b5:	mov    esi,eax
    16b7:	mov    edx,0xa
    16bc:	call   1090 <strtol@plt>
    16c1:	mov    QWORD PTR [rbp-0x10],rax
    16c5:	cmp    rax,0x0
    16c9:	jne    16fa <data_read+0xaa>
    16cf:	mov    rdi,QWORD PTR [rip+0x29a2]        # 4078 <flag>
    16d6:	call   1050 <puts@plt>
    16db:	mov    rax,QWORD PTR [rip+0x28fe]        # 3fe0 <stdin@GLIBC_2.2.5>
    16e2:	mov    rdi,QWORD PTR [rax]
    16e5:	xor    eax,eax
    16e7:	mov    esi,eax
    16e9:	mov    edx,0x2
    16ee:	call   10b0 <fseek@plt>
    16f3:	xor    edi,edi
    16f5:	call   10c0 <exit@plt>
    16fa:	mov    rax,QWORD PTR [rbp-0x10]
    16fe:	add    rax,0xffffffffffffffff
    1702:	mov    QWORD PTR [rbp-0x10],rax
    1706:	lea    rdi,[rbp-0x80]
    170a:	lea    rsi,[rip+0x298f]        # 40a0 <data>
    1711:	imul   rax,QWORD PTR [rbp-0x10],0x64
    1716:	add    rsi,rax
    1719:	mov    rcx,QWORD PTR [rbp-0x10]
    171d:	lea    rax,[rip+0x2d6c]        # 4490 <input_lengths>
    1724:	movsxd rdx,DWORD PTR [rax+rcx*4]
    1728:	call   1030 <strncpy@plt>
    172d:	lea    rdi,[rbp-0x80]
    1731:	call   1050 <puts@plt>
    1736:	add    rsp,0x90
    173d:	pop    rbp
    173e:	ret    

Disassembly of section .fini:

0000000000001740 <_fini>:
    1740:	endbr64 
    1744:	sub    rsp,0x8
    1748:	add    rsp,0x8
    174c:	ret    
