
./data/process_data_1/20/share_O3_gcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f6a]        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f6b]        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <_init+0x20>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <_init+0x20>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <_init+0x20>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <_init+0x20>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <_init+0x20>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <_init+0x20>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <_init+0x20>
    109f:	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	endbr64 
    10a4:	bnd jmp QWORD PTR [rip+0x2f4d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000010b0 <puts@plt>:
    10b0:	endbr64 
    10b4:	bnd jmp QWORD PTR [rip+0x2ee5]        # 3fa0 <puts@GLIBC_2.2.5>
    10bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010c0 <fclose@plt>:
    10c0:	endbr64 
    10c4:	bnd jmp QWORD PTR [rip+0x2edd]        # 3fa8 <fclose@GLIBC_2.2.5>
    10cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010d0 <read@plt>:
    10d0:	endbr64 
    10d4:	bnd jmp QWORD PTR [rip+0x2ed5]        # 3fb0 <read@GLIBC_2.2.5>
    10db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010e0 <__printf_chk@plt>:
    10e0:	endbr64 
    10e4:	bnd jmp QWORD PTR [rip+0x2ecd]        # 3fb8 <__printf_chk@GLIBC_2.3.4>
    10eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010f0 <setvbuf@plt>:
    10f0:	endbr64 
    10f4:	bnd jmp QWORD PTR [rip+0x2ec5]        # 3fc0 <setvbuf@GLIBC_2.2.5>
    10fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001100 <exit@plt>:
    1100:	endbr64 
    1104:	bnd jmp QWORD PTR [rip+0x2ebd]        # 3fc8 <exit@GLIBC_2.2.5>
    110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001110 <__ctype_b_loc@plt>:
    1110:	endbr64 
    1114:	bnd jmp QWORD PTR [rip+0x2eb5]        # 3fd0 <__ctype_b_loc@GLIBC_2.3>
    111b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001120 <main>:
    1120:	endbr64 
    1124:	sub    rsp,0x8
    1128:	xor    eax,eax
    112a:	call   1230 <init>
    112f:	xor    eax,eax
    1131:	add    rsp,0x8
    1135:	ret    
    1136:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001140 <_start>:
    1140:	endbr64 
    1144:	xor    ebp,ebp
    1146:	mov    r9,rdx
    1149:	pop    rsi
    114a:	mov    rdx,rsp
    114d:	and    rsp,0xfffffffffffffff0
    1151:	push   rax
    1152:	push   rsp
    1153:	xor    r8d,r8d
    1156:	xor    ecx,ecx
    1158:	lea    rdi,[rip+0xffffffffffffffc1]        # 1120 <main>
    115f:	call   QWORD PTR [rip+0x2e73]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1165:	hlt    
    1166:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001170 <deregister_tm_clones>:
    1170:	lea    rdi,[rip+0x2ea1]        # 4018 <__TMC_END__>
    1177:	lea    rax,[rip+0x2e9a]        # 4018 <__TMC_END__>
    117e:	cmp    rax,rdi
    1181:	je     1198 <deregister_tm_clones+0x28>
    1183:	mov    rax,QWORD PTR [rip+0x2e56]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    118a:	test   rax,rax
    118d:	je     1198 <deregister_tm_clones+0x28>
    118f:	jmp    rax
    1191:	nop    DWORD PTR [rax+0x0]
    1198:	ret    
    1199:	nop    DWORD PTR [rax+0x0]

00000000000011a0 <register_tm_clones>:
    11a0:	lea    rdi,[rip+0x2e71]        # 4018 <__TMC_END__>
    11a7:	lea    rsi,[rip+0x2e6a]        # 4018 <__TMC_END__>
    11ae:	sub    rsi,rdi
    11b1:	mov    rax,rsi
    11b4:	shr    rsi,0x3f
    11b8:	sar    rax,0x3
    11bc:	add    rsi,rax
    11bf:	sar    rsi,1
    11c2:	je     11d8 <register_tm_clones+0x38>
    11c4:	mov    rax,QWORD PTR [rip+0x2e25]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    11cb:	test   rax,rax
    11ce:	je     11d8 <register_tm_clones+0x38>
    11d0:	jmp    rax
    11d2:	nop    WORD PTR [rax+rax*1+0x0]
    11d8:	ret    
    11d9:	nop    DWORD PTR [rax+0x0]

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	endbr64 
    11e4:	cmp    BYTE PTR [rip+0x2e5d],0x0        # 4048 <completed.0>
    11eb:	jne    1218 <__do_global_dtors_aux+0x38>
    11ed:	push   rbp
    11ee:	cmp    QWORD PTR [rip+0x2e02],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f6:	mov    rbp,rsp
    11f9:	je     1207 <__do_global_dtors_aux+0x27>
    11fb:	mov    rdi,QWORD PTR [rip+0x2e06]        # 4008 <__dso_handle>
    1202:	call   10a0 <__cxa_finalize@plt>
    1207:	call   1170 <deregister_tm_clones>
    120c:	mov    BYTE PTR [rip+0x2e35],0x1        # 4048 <completed.0>
    1213:	pop    rbp
    1214:	ret    
    1215:	nop    DWORD PTR [rax]
    1218:	ret    
    1219:	nop    DWORD PTR [rax+0x0]

0000000000001220 <frame_dummy>:
    1220:	endbr64 
    1224:	jmp    11a0 <register_tm_clones>
    1229:	nop    DWORD PTR [rax+0x0]

0000000000001230 <init>:
    1230:	endbr64 
    1234:	sub    rsp,0x8
    1238:	mov    rdi,QWORD PTR [rip+0x2e01]        # 4040 <stderr@GLIBC_2.2.5>
    123f:	call   10c0 <fclose@plt>
    1244:	mov    rdi,QWORD PTR [rip+0x2de5]        # 4030 <stdin@GLIBC_2.2.5>
    124b:	xor    ecx,ecx
    124d:	xor    esi,esi
    124f:	mov    edx,0x2
    1254:	call   10f0 <setvbuf@plt>
    1259:	mov    rdi,QWORD PTR [rip+0x2dc0]        # 4020 <stdout@GLIBC_2.2.5>
    1260:	xor    ecx,ecx
    1262:	xor    esi,esi
    1264:	mov    edx,0x2
    1269:	add    rsp,0x8
    126d:	jmp    10f0 <setvbuf@plt>
    1272:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    127d:	nop    DWORD PTR [rax]

0000000000001280 <check>:
    1280:	endbr64 
    1284:	push   r12
    1286:	mov    r12,rdi
    1289:	push   rbp
    128a:	push   rbx
    128b:	movzx  ebx,BYTE PTR [rdi]
    128e:	test   bl,bl
    1290:	je     12d0 <check+0x50>
    1292:	mov    rbp,rdi
    1295:	jmp    12c7 <check+0x47>
    1297:	nop    WORD PTR [rax+rax*1+0x0]
    12a0:	call   1110 <__ctype_b_loc@plt>
    12a5:	mov    r8,rax
    12a8:	movsx  rax,bl
    12ac:	mov    rdx,QWORD PTR [r8]
    12af:	test   BYTE PTR [rdx+rax*2+0x1],0x4
    12b4:	jne    12bb <check+0x3b>
    12b6:	cmp    bl,0x20
    12b9:	jne    12f0 <check+0x70>
    12bb:	movzx  ebx,BYTE PTR [rbp+0x1]
    12bf:	add    rbp,0x1
    12c3:	test   bl,bl
    12c5:	je     12d0 <check+0x50>
    12c7:	cmp    bl,0xa
    12ca:	jne    12a0 <check+0x20>
    12cc:	mov    BYTE PTR [rbp+0x0],0x0
    12d0:	mov    rdx,r12
    12d3:	lea    rsi,[rip+0xd4e]        # 2028 <_IO_stdin_used+0x28>
    12da:	mov    edi,0x1
    12df:	xor    eax,eax
    12e1:	call   10e0 <__printf_chk@plt>
    12e6:	pop    rbx
    12e7:	mov    eax,0x1
    12ec:	pop    rbp
    12ed:	pop    r12
    12ef:	ret    
    12f0:	lea    rdi,[rip+0xd11]        # 2008 <_IO_stdin_used+0x8>
    12f7:	call   10b0 <puts@plt>
    12fc:	mov    edi,0x1
    1301:	call   1100 <exit@plt>
    1306:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001310 <readn>:
    1310:	endbr64 
    1314:	sub    rsp,0x8
    1318:	mov    rdx,rsi
    131b:	xor    eax,eax
    131d:	mov    rsi,rdi
    1320:	xor    edi,edi
    1322:	call   10d0 <read@plt>
    1327:	test   eax,eax
    1329:	jle    1330 <readn+0x20>
    132b:	add    rsp,0x8
    132f:	ret    
    1330:	mov    edi,0x1
    1335:	call   1100 <exit@plt>
    133a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000001340 <vul>:
    1340:	endbr64 
    1344:	ret    

Disassembly of section .fini:

0000000000001348 <_fini>:
    1348:	endbr64 
    134c:	sub    rsp,0x8
    1350:	add    rsp,0x8
    1354:	ret    
