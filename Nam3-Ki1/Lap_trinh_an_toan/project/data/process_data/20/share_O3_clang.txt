
./data/process_data_1/20/share_O3_clang:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd1]        # 3fe0 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	nop    DWORD PTR [rax+0x0]

0000000000001030 <puts@plt>:
    1030:	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <puts@GLIBC_2.2.5>
    1036:	push   0x0
    103b:	jmp    1020 <_init+0x20>

0000000000001040 <fclose@plt>:
    1040:	jmp    QWORD PTR [rip+0x2fda]        # 4020 <fclose@GLIBC_2.2.5>
    1046:	push   0x1
    104b:	jmp    1020 <_init+0x20>

0000000000001050 <printf@plt>:
    1050:	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <printf@GLIBC_2.2.5>
    1056:	push   0x2
    105b:	jmp    1020 <_init+0x20>

0000000000001060 <read@plt>:
    1060:	jmp    QWORD PTR [rip+0x2fca]        # 4030 <read@GLIBC_2.2.5>
    1066:	push   0x3
    106b:	jmp    1020 <_init+0x20>

0000000000001070 <setvbuf@plt>:
    1070:	jmp    QWORD PTR [rip+0x2fc2]        # 4038 <setvbuf@GLIBC_2.2.5>
    1076:	push   0x4
    107b:	jmp    1020 <_init+0x20>

0000000000001080 <exit@plt>:
    1080:	jmp    QWORD PTR [rip+0x2fba]        # 4040 <exit@GLIBC_2.2.5>
    1086:	push   0x5
    108b:	jmp    1020 <_init+0x20>

0000000000001090 <__ctype_b_loc@plt>:
    1090:	jmp    QWORD PTR [rip+0x2fb2]        # 4048 <__ctype_b_loc@GLIBC_2.3>
    1096:	push   0x6
    109b:	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	jmp    QWORD PTR [rip+0x2f4a]        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    10a6:	xchg   ax,ax

Disassembly of section .text:

00000000000010b0 <_start>:
    10b0:	endbr64 
    10b4:	xor    ebp,ebp
    10b6:	mov    r9,rdx
    10b9:	pop    rsi
    10ba:	mov    rdx,rsp
    10bd:	and    rsp,0xfffffffffffffff0
    10c1:	push   rax
    10c2:	push   rsp
    10c3:	xor    r8d,r8d
    10c6:	xor    ecx,ecx
    10c8:	lea    rdi,[rip+0x1c1]        # 1290 <main>
    10cf:	call   QWORD PTR [rip+0x2eeb]        # 3fc0 <__libc_start_main@GLIBC_2.34>
    10d5:	hlt    
    10d6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000010e0 <deregister_tm_clones>:
    10e0:	lea    rdi,[rip+0x2f81]        # 4068 <__TMC_END__>
    10e7:	lea    rax,[rip+0x2f7a]        # 4068 <__TMC_END__>
    10ee:	cmp    rax,rdi
    10f1:	je     1108 <deregister_tm_clones+0x28>
    10f3:	mov    rax,QWORD PTR [rip+0x2ece]        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10fa:	test   rax,rax
    10fd:	je     1108 <deregister_tm_clones+0x28>
    10ff:	jmp    rax
    1101:	nop    DWORD PTR [rax+0x0]
    1108:	ret    
    1109:	nop    DWORD PTR [rax+0x0]

0000000000001110 <register_tm_clones>:
    1110:	lea    rdi,[rip+0x2f51]        # 4068 <__TMC_END__>
    1117:	lea    rsi,[rip+0x2f4a]        # 4068 <__TMC_END__>
    111e:	sub    rsi,rdi
    1121:	mov    rax,rsi
    1124:	shr    rsi,0x3f
    1128:	sar    rax,0x3
    112c:	add    rsi,rax
    112f:	sar    rsi,1
    1132:	je     1148 <register_tm_clones+0x38>
    1134:	mov    rax,QWORD PTR [rip+0x2ead]        # 3fe8 <_ITM_registerTMCloneTable@Base>
    113b:	test   rax,rax
    113e:	je     1148 <register_tm_clones+0x38>
    1140:	jmp    rax
    1142:	nop    WORD PTR [rax+rax*1+0x0]
    1148:	ret    
    1149:	nop    DWORD PTR [rax+0x0]

0000000000001150 <__do_global_dtors_aux>:
    1150:	endbr64 
    1154:	cmp    BYTE PTR [rip+0x2f0d],0x0        # 4068 <__TMC_END__>
    115b:	jne    1188 <__do_global_dtors_aux+0x38>
    115d:	push   rbp
    115e:	cmp    QWORD PTR [rip+0x2e8a],0x0        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    1166:	mov    rbp,rsp
    1169:	je     1177 <__do_global_dtors_aux+0x27>
    116b:	mov    rdi,QWORD PTR [rip+0x2ee6]        # 4058 <__dso_handle>
    1172:	call   10a0 <__cxa_finalize@plt>
    1177:	call   10e0 <deregister_tm_clones>
    117c:	mov    BYTE PTR [rip+0x2ee5],0x1        # 4068 <__TMC_END__>
    1183:	pop    rbp
    1184:	ret    
    1185:	nop    DWORD PTR [rax]
    1188:	ret    
    1189:	nop    DWORD PTR [rax+0x0]

0000000000001190 <frame_dummy>:
    1190:	endbr64 
    1194:	jmp    1110 <register_tm_clones>
    1199:	nop    DWORD PTR [rax+0x0]

00000000000011a0 <init>:
    11a0:	push   rax
    11a1:	mov    rax,QWORD PTR [rip+0x2e50]        # 3ff8 <stderr@GLIBC_2.2.5>
    11a8:	mov    rdi,QWORD PTR [rax]
    11ab:	call   1040 <fclose@plt>
    11b0:	mov    rax,QWORD PTR [rip+0x2e21]        # 3fd8 <stdin@GLIBC_2.2.5>
    11b7:	mov    rdi,QWORD PTR [rax]
    11ba:	xor    esi,esi
    11bc:	mov    edx,0x2
    11c1:	xor    ecx,ecx
    11c3:	call   1070 <setvbuf@plt>
    11c8:	mov    rax,QWORD PTR [rip+0x2e01]        # 3fd0 <stdout@GLIBC_2.2.5>
    11cf:	mov    rdi,QWORD PTR [rax]
    11d2:	xor    esi,esi
    11d4:	mov    edx,0x2
    11d9:	xor    ecx,ecx
    11db:	pop    rax
    11dc:	jmp    1070 <setvbuf@plt>
    11e1:	cs nop WORD PTR [rax+rax*1+0x0]
    11eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011f0 <check>:
    11f0:	push   r15
    11f2:	push   r14
    11f4:	push   rbx
    11f5:	mov    r14,rdi
    11f8:	mov    r15,rdi
    11fb:	jmp    1204 <check+0x14>
    11fd:	nop    DWORD PTR [rax]
    1200:	add    r15,0x1
    1204:	movsx  rbx,BYTE PTR [r15]
    1208:	test   rbx,rbx
    120b:	je     1240 <check+0x50>
    120d:	cmp    bl,0xa
    1210:	je     123c <check+0x4c>
    1212:	call   1090 <__ctype_b_loc@plt>
    1217:	mov    rax,QWORD PTR [rax]
    121a:	test   BYTE PTR [rax+rbx*2+0x1],0x4
    121f:	jne    1200 <check+0x10>
    1221:	cmp    bl,0x20
    1224:	je     1200 <check+0x10>
    1226:	lea    rdi,[rip+0xdd7]        # 2004 <_IO_stdin_used+0x4>
    122d:	call   1030 <puts@plt>
    1232:	mov    edi,0x1
    1237:	call   1080 <exit@plt>
    123c:	mov    BYTE PTR [r15],0x0
    1240:	lea    rdi,[rip+0xddd]        # 2024 <_IO_stdin_used+0x24>
    1247:	mov    rsi,r14
    124a:	xor    eax,eax
    124c:	call   1050 <printf@plt>
    1251:	mov    eax,0x1
    1256:	pop    rbx
    1257:	pop    r14
    1259:	pop    r15
    125b:	ret    
    125c:	nop    DWORD PTR [rax+0x0]

0000000000001260 <readn>:
    1260:	push   rax
    1261:	mov    rdx,rsi
    1264:	mov    rsi,rdi
    1267:	xor    edi,edi
    1269:	xor    eax,eax
    126b:	call   1060 <read@plt>
    1270:	test   eax,eax
    1272:	jle    1276 <readn+0x16>
    1274:	pop    rax
    1275:	ret    
    1276:	mov    edi,0x1
    127b:	call   1080 <exit@plt>

0000000000001280 <vul>:
    1280:	ret    
    1281:	cs nop WORD PTR [rax+rax*1+0x0]
    128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001290 <main>:
    1290:	push   rax
    1291:	mov    rax,QWORD PTR [rip+0x2d60]        # 3ff8 <stderr@GLIBC_2.2.5>
    1298:	mov    rdi,QWORD PTR [rax]
    129b:	call   1040 <fclose@plt>
    12a0:	mov    rax,QWORD PTR [rip+0x2d31]        # 3fd8 <stdin@GLIBC_2.2.5>
    12a7:	mov    rdi,QWORD PTR [rax]
    12aa:	xor    esi,esi
    12ac:	mov    edx,0x2
    12b1:	xor    ecx,ecx
    12b3:	call   1070 <setvbuf@plt>
    12b8:	mov    rax,QWORD PTR [rip+0x2d11]        # 3fd0 <stdout@GLIBC_2.2.5>
    12bf:	mov    rdi,QWORD PTR [rax]
    12c2:	xor    esi,esi
    12c4:	mov    edx,0x2
    12c9:	xor    ecx,ecx
    12cb:	call   1070 <setvbuf@plt>
    12d0:	xor    eax,eax
    12d2:	pop    rcx
    12d3:	ret    

Disassembly of section .fini:

00000000000012d4 <_fini>:
    12d4:	endbr64 
    12d8:	sub    rsp,0x8
    12dc:	add    rsp,0x8
    12e0:	ret    
