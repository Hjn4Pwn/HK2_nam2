
./data/process_data_1/23/stringzz_O2_gcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f62]        # 3f88 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f63]        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <_init+0x20>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <_init+0x20>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <_init+0x20>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <_init+0x20>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <_init+0x20>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <_init+0x20>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <_init+0x20>
    109f:	nop
    10a0:	endbr64 
    10a4:	push   0x7
    10a9:	bnd jmp 1020 <_init+0x20>
    10af:	nop

Disassembly of section .plt.got:

00000000000010b0 <__cxa_finalize@plt>:
    10b0:	endbr64 
    10b4:	bnd jmp QWORD PTR [rip+0x2f3d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10bb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000010c0 <puts@plt>:
    10c0:	endbr64 
    10c4:	bnd jmp QWORD PTR [rip+0x2ecd]        # 3f98 <puts@GLIBC_2.2.5>
    10cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010d0 <__stack_chk_fail@plt>:
    10d0:	endbr64 
    10d4:	bnd jmp QWORD PTR [rip+0x2ec5]        # 3fa0 <__stack_chk_fail@GLIBC_2.4>
    10db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010e0 <fgets@plt>:
    10e0:	endbr64 
    10e4:	bnd jmp QWORD PTR [rip+0x2ebd]        # 3fa8 <fgets@GLIBC_2.2.5>
    10eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010f0 <malloc@plt>:
    10f0:	endbr64 
    10f4:	bnd jmp QWORD PTR [rip+0x2eb5]        # 3fb0 <malloc@GLIBC_2.2.5>
    10fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001100 <fflush@plt>:
    1100:	endbr64 
    1104:	bnd jmp QWORD PTR [rip+0x2ead]        # 3fb8 <fflush@GLIBC_2.2.5>
    110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001110 <__printf_chk@plt>:
    1110:	endbr64 
    1114:	bnd jmp QWORD PTR [rip+0x2ea5]        # 3fc0 <__printf_chk@GLIBC_2.3.4>
    111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <fopen@plt>:
    1120:	endbr64 
    1124:	bnd jmp QWORD PTR [rip+0x2e9d]        # 3fc8 <fopen@GLIBC_2.2.5>
    112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001130 <getline@plt>:
    1130:	endbr64 
    1134:	bnd jmp QWORD PTR [rip+0x2e95]        # 3fd0 <getline@GLIBC_2.2.5>
    113b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001140 <main>:
    1140:	endbr64 
    1144:	push   rbp
    1145:	lea    rdi,[rip+0xeec]        # 2038 <_IO_stdin_used+0x38>
    114c:	sub    rsp,0x20
    1150:	mov    rax,QWORD PTR fs:0x28
    1159:	mov    QWORD PTR [rsp+0x18],rax
    115e:	xor    eax,eax
    1160:	call   10c0 <puts@plt>
    1165:	lea    rsi,[rsp+0xc]
    116a:	lea    rdi,[rsp+0x10]
    116f:	mov    rdx,QWORD PTR [rip+0x2eaa]        # 4020 <stdin@GLIBC_2.2.5>
    1176:	mov    QWORD PTR [rsp+0x10],0x0
    117f:	call   1130 <getline@plt>
    1184:	mov    edi,0x80
    1189:	call   10f0 <malloc@plt>
    118e:	lea    rsi,[rip+0xe92]        # 2027 <_IO_stdin_used+0x27>
    1195:	lea    rdi,[rip+0xe8d]        # 2029 <_IO_stdin_used+0x29>
    119c:	mov    rbp,rax
    119f:	call   1120 <fopen@plt>
    11a4:	mov    esi,0x80
    11a9:	mov    rdi,rbp
    11ac:	mov    rdx,rax
    11af:	call   10e0 <fgets@plt>
    11b4:	mov    rdi,QWORD PTR [rsp+0x10]
    11b9:	call   1340 <printMessage1>
    11be:	mov    rdi,QWORD PTR [rip+0x2e4b]        # 4010 <stdout@GLIBC_2.2.5>
    11c5:	call   1100 <fflush@plt>
    11ca:	mov    rax,QWORD PTR [rsp+0x18]
    11cf:	sub    rax,QWORD PTR fs:0x28
    11d8:	jne    11e2 <main+0xa2>
    11da:	add    rsp,0x20
    11de:	xor    eax,eax
    11e0:	pop    rbp
    11e1:	ret    
    11e2:	call   10d0 <__stack_chk_fail@plt>
    11e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000011f0 <_start>:
    11f0:	endbr64 
    11f4:	xor    ebp,ebp
    11f6:	mov    r9,rdx
    11f9:	pop    rsi
    11fa:	mov    rdx,rsp
    11fd:	and    rsp,0xfffffffffffffff0
    1201:	push   rax
    1202:	push   rsp
    1203:	xor    r8d,r8d
    1206:	xor    ecx,ecx
    1208:	lea    rdi,[rip+0xffffffffffffff31]        # 1140 <main>
    120f:	call   QWORD PTR [rip+0x2dc3]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1215:	hlt    
    1216:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001220 <deregister_tm_clones>:
    1220:	lea    rdi,[rip+0x2de9]        # 4010 <stdout@GLIBC_2.2.5>
    1227:	lea    rax,[rip+0x2de2]        # 4010 <stdout@GLIBC_2.2.5>
    122e:	cmp    rax,rdi
    1231:	je     1248 <deregister_tm_clones+0x28>
    1233:	mov    rax,QWORD PTR [rip+0x2da6]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    123a:	test   rax,rax
    123d:	je     1248 <deregister_tm_clones+0x28>
    123f:	jmp    rax
    1241:	nop    DWORD PTR [rax+0x0]
    1248:	ret    
    1249:	nop    DWORD PTR [rax+0x0]

0000000000001250 <register_tm_clones>:
    1250:	lea    rdi,[rip+0x2db9]        # 4010 <stdout@GLIBC_2.2.5>
    1257:	lea    rsi,[rip+0x2db2]        # 4010 <stdout@GLIBC_2.2.5>
    125e:	sub    rsi,rdi
    1261:	mov    rax,rsi
    1264:	shr    rsi,0x3f
    1268:	sar    rax,0x3
    126c:	add    rsi,rax
    126f:	sar    rsi,1
    1272:	je     1288 <register_tm_clones+0x38>
    1274:	mov    rax,QWORD PTR [rip+0x2d75]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    127b:	test   rax,rax
    127e:	je     1288 <register_tm_clones+0x38>
    1280:	jmp    rax
    1282:	nop    WORD PTR [rax+rax*1+0x0]
    1288:	ret    
    1289:	nop    DWORD PTR [rax+0x0]

0000000000001290 <__do_global_dtors_aux>:
    1290:	endbr64 
    1294:	cmp    BYTE PTR [rip+0x2d8d],0x0        # 4028 <completed.0>
    129b:	jne    12c8 <__do_global_dtors_aux+0x38>
    129d:	push   rbp
    129e:	cmp    QWORD PTR [rip+0x2d52],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    12a6:	mov    rbp,rsp
    12a9:	je     12b7 <__do_global_dtors_aux+0x27>
    12ab:	mov    rdi,QWORD PTR [rip+0x2d56]        # 4008 <__dso_handle>
    12b2:	call   10b0 <__cxa_finalize@plt>
    12b7:	call   1220 <deregister_tm_clones>
    12bc:	mov    BYTE PTR [rip+0x2d65],0x1        # 4028 <completed.0>
    12c3:	pop    rbp
    12c4:	ret    
    12c5:	nop    DWORD PTR [rax]
    12c8:	ret    
    12c9:	nop    DWORD PTR [rax+0x0]

00000000000012d0 <frame_dummy>:
    12d0:	endbr64 
    12d4:	jmp    1250 <register_tm_clones>
    12d9:	nop    DWORD PTR [rax+0x0]

00000000000012e0 <printMessage3>:
    12e0:	endbr64 
    12e4:	push   rbp
    12e5:	mov    rbp,rdi
    12e8:	lea    rdi,[rip+0xd15]        # 2004 <_IO_stdin_used+0x4>
    12ef:	call   10c0 <puts@plt>
    12f4:	mov    rsi,rbp
    12f7:	mov    edi,0x1
    12fc:	xor    eax,eax
    12fe:	pop    rbp
    12ff:	jmp    1110 <__printf_chk@plt>
    1304:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    130f:	nop

0000000000001310 <printMessage2>:
    1310:	endbr64 
    1314:	push   rbp
    1315:	mov    rbp,rdi
    1318:	lea    rdi,[rip+0xcf7]        # 2016 <_IO_stdin_used+0x16>
    131f:	call   10c0 <puts@plt>
    1324:	lea    rdi,[rip+0xcd9]        # 2004 <_IO_stdin_used+0x4>
    132b:	call   10c0 <puts@plt>
    1330:	mov    rsi,rbp
    1333:	mov    edi,0x1
    1338:	xor    eax,eax
    133a:	pop    rbp
    133b:	jmp    1110 <__printf_chk@plt>

0000000000001340 <printMessage1>:
    1340:	endbr64 
    1344:	push   rbp
    1345:	mov    rbp,rdi
    1348:	lea    rdi,[rip+0xcd3]        # 2022 <_IO_stdin_used+0x22>
    134f:	call   10c0 <puts@plt>
    1354:	lea    rdi,[rip+0xcbb]        # 2016 <_IO_stdin_used+0x16>
    135b:	call   10c0 <puts@plt>
    1360:	lea    rdi,[rip+0xc9d]        # 2004 <_IO_stdin_used+0x4>
    1367:	call   10c0 <puts@plt>
    136c:	mov    rsi,rbp
    136f:	mov    edi,0x1
    1374:	xor    eax,eax
    1376:	pop    rbp
    1377:	jmp    1110 <__printf_chk@plt>

Disassembly of section .fini:

000000000000137c <_fini>:
    137c:	endbr64 
    1380:	sub    rsp,0x8
    1384:	add    rsp,0x8
    1388:	ret    
