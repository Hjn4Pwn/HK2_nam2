
./data/process_data_1/7/function_overwrite_O0_gcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f4a]        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f4b]        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <_init+0x20>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <_init+0x20>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <_init+0x20>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <_init+0x20>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <_init+0x20>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <_init+0x20>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <_init+0x20>
    109f:	nop
    10a0:	endbr64 
    10a4:	push   0x7
    10a9:	bnd jmp 1020 <_init+0x20>
    10af:	nop
    10b0:	endbr64 
    10b4:	push   0x8
    10b9:	bnd jmp 1020 <_init+0x20>
    10bf:	nop
    10c0:	endbr64 
    10c4:	push   0x9
    10c9:	bnd jmp 1020 <_init+0x20>
    10cf:	nop
    10d0:	endbr64 
    10d4:	push   0xa
    10d9:	bnd jmp 1020 <_init+0x20>
    10df:	nop

Disassembly of section .plt.got:

00000000000010e0 <__cxa_finalize@plt>:
    10e0:	endbr64 
    10e4:	bnd jmp QWORD PTR [rip+0x2f0d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000010f0 <puts@plt>:
    10f0:	endbr64 
    10f4:	bnd jmp QWORD PTR [rip+0x2e85]        # 3f80 <puts@GLIBC_2.2.5>
    10fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001100 <strlen@plt>:
    1100:	endbr64 
    1104:	bnd jmp QWORD PTR [rip+0x2e7d]        # 3f88 <strlen@GLIBC_2.2.5>
    110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001110 <__stack_chk_fail@plt>:
    1110:	endbr64 
    1114:	bnd jmp QWORD PTR [rip+0x2e75]        # 3f90 <__stack_chk_fail@GLIBC_2.4>
    111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <setresgid@plt>:
    1120:	endbr64 
    1124:	bnd jmp QWORD PTR [rip+0x2e6d]        # 3f98 <setresgid@GLIBC_2.2.5>
    112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001130 <printf@plt>:
    1130:	endbr64 
    1134:	bnd jmp QWORD PTR [rip+0x2e65]        # 3fa0 <printf@GLIBC_2.2.5>
    113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001140 <fgets@plt>:
    1140:	endbr64 
    1144:	bnd jmp QWORD PTR [rip+0x2e5d]        # 3fa8 <fgets@GLIBC_2.2.5>
    114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001150 <getegid@plt>:
    1150:	endbr64 
    1154:	bnd jmp QWORD PTR [rip+0x2e55]        # 3fb0 <getegid@GLIBC_2.2.5>
    115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001160 <setvbuf@plt>:
    1160:	endbr64 
    1164:	bnd jmp QWORD PTR [rip+0x2e4d]        # 3fb8 <setvbuf@GLIBC_2.2.5>
    116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001170 <fopen@plt>:
    1170:	endbr64 
    1174:	bnd jmp QWORD PTR [rip+0x2e45]        # 3fc0 <fopen@GLIBC_2.2.5>
    117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001180 <__isoc99_scanf@plt>:
    1180:	endbr64 
    1184:	bnd jmp QWORD PTR [rip+0x2e3d]        # 3fc8 <__isoc99_scanf@GLIBC_2.7>
    118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001190 <exit@plt>:
    1190:	endbr64 
    1194:	bnd jmp QWORD PTR [rip+0x2e35]        # 3fd0 <exit@GLIBC_2.2.5>
    119b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000011a0 <_start>:
    11a0:	endbr64 
    11a4:	xor    ebp,ebp
    11a6:	mov    r9,rdx
    11a9:	pop    rsi
    11aa:	mov    rdx,rsp
    11ad:	and    rsp,0xfffffffffffffff0
    11b1:	push   rax
    11b2:	push   rsp
    11b3:	xor    r8d,r8d
    11b6:	xor    ecx,ecx
    11b8:	lea    rdi,[rip+0x48a]        # 1649 <main>
    11bf:	call   QWORD PTR [rip+0x2e13]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    11c5:	hlt    
    11c6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000011d0 <deregister_tm_clones>:
    11d0:	lea    rdi,[rip+0x2e41]        # 4018 <__TMC_END__>
    11d7:	lea    rax,[rip+0x2e3a]        # 4018 <__TMC_END__>
    11de:	cmp    rax,rdi
    11e1:	je     11f8 <deregister_tm_clones+0x28>
    11e3:	mov    rax,QWORD PTR [rip+0x2df6]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    11ea:	test   rax,rax
    11ed:	je     11f8 <deregister_tm_clones+0x28>
    11ef:	jmp    rax
    11f1:	nop    DWORD PTR [rax+0x0]
    11f8:	ret    
    11f9:	nop    DWORD PTR [rax+0x0]

0000000000001200 <register_tm_clones>:
    1200:	lea    rdi,[rip+0x2e11]        # 4018 <__TMC_END__>
    1207:	lea    rsi,[rip+0x2e0a]        # 4018 <__TMC_END__>
    120e:	sub    rsi,rdi
    1211:	mov    rax,rsi
    1214:	shr    rsi,0x3f
    1218:	sar    rax,0x3
    121c:	add    rsi,rax
    121f:	sar    rsi,1
    1222:	je     1238 <register_tm_clones+0x38>
    1224:	mov    rax,QWORD PTR [rip+0x2dc5]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    122b:	test   rax,rax
    122e:	je     1238 <register_tm_clones+0x38>
    1230:	jmp    rax
    1232:	nop    WORD PTR [rax+rax*1+0x0]
    1238:	ret    
    1239:	nop    DWORD PTR [rax+0x0]

0000000000001240 <__do_global_dtors_aux>:
    1240:	endbr64 
    1244:	cmp    BYTE PTR [rip+0x2ddd],0x0        # 4028 <completed.0>
    124b:	jne    1278 <__do_global_dtors_aux+0x38>
    124d:	push   rbp
    124e:	cmp    QWORD PTR [rip+0x2da2],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1256:	mov    rbp,rsp
    1259:	je     1267 <__do_global_dtors_aux+0x27>
    125b:	mov    rdi,QWORD PTR [rip+0x2da6]        # 4008 <__dso_handle>
    1262:	call   10e0 <__cxa_finalize@plt>
    1267:	call   11d0 <deregister_tm_clones>
    126c:	mov    BYTE PTR [rip+0x2db5],0x1        # 4028 <completed.0>
    1273:	pop    rbp
    1274:	ret    
    1275:	nop    DWORD PTR [rax]
    1278:	ret    
    1279:	nop    DWORD PTR [rax+0x0]

0000000000001280 <frame_dummy>:
    1280:	endbr64 
    1284:	jmp    1200 <register_tm_clones>

0000000000001289 <calculate_story_score>:
    1289:	endbr64 
    128d:	push   rbp
    128e:	mov    rbp,rsp
    1291:	mov    QWORD PTR [rbp-0x18],rdi
    1295:	mov    QWORD PTR [rbp-0x20],rsi
    1299:	mov    DWORD PTR [rbp-0xc],0x0
    12a0:	mov    QWORD PTR [rbp-0x8],0x0
    12a8:	jmp    12c3 <calculate_story_score+0x3a>
    12aa:	mov    rdx,QWORD PTR [rbp-0x18]
    12ae:	mov    rax,QWORD PTR [rbp-0x8]
    12b2:	add    rax,rdx
    12b5:	movzx  eax,BYTE PTR [rax]
    12b8:	movsx  eax,al
    12bb:	add    DWORD PTR [rbp-0xc],eax
    12be:	add    QWORD PTR [rbp-0x8],0x1
    12c3:	mov    rax,QWORD PTR [rbp-0x8]
    12c7:	cmp    rax,QWORD PTR [rbp-0x20]
    12cb:	jb     12aa <calculate_story_score+0x21>
    12cd:	mov    eax,DWORD PTR [rbp-0xc]
    12d0:	pop    rbp
    12d1:	ret    

00000000000012d2 <easy_checker>:
    12d2:	endbr64 
    12d6:	push   rbp
    12d7:	mov    rbp,rsp
    12da:	sub    rsp,0x70
    12de:	mov    QWORD PTR [rbp-0x68],rdi
    12e2:	mov    QWORD PTR [rbp-0x70],rsi
    12e6:	mov    rax,QWORD PTR fs:0x28
    12ef:	mov    QWORD PTR [rbp-0x8],rax
    12f3:	xor    eax,eax
    12f5:	mov    rdx,QWORD PTR [rbp-0x70]
    12f9:	mov    rax,QWORD PTR [rbp-0x68]
    12fd:	mov    rsi,rdx
    1300:	mov    rdi,rax
    1303:	call   1289 <calculate_story_score>
    1308:	cmp    eax,0x539
    130d:	jne    13db <easy_checker+0x109>
    1313:	mov    QWORD PTR [rbp-0x50],0x0
    131b:	mov    QWORD PTR [rbp-0x48],0x0
    1323:	mov    QWORD PTR [rbp-0x40],0x0
    132b:	mov    QWORD PTR [rbp-0x38],0x0
    1333:	mov    QWORD PTR [rbp-0x30],0x0
    133b:	mov    QWORD PTR [rbp-0x28],0x0
    1343:	mov    QWORD PTR [rbp-0x20],0x0
    134b:	mov    QWORD PTR [rbp-0x18],0x0
    1353:	lea    rax,[rip+0xcae]        # 2008 <_IO_stdin_used+0x8>
    135a:	mov    rsi,rax
    135d:	lea    rax,[rip+0xca6]        # 200a <_IO_stdin_used+0xa>
    1364:	mov    rdi,rax
    1367:	call   1170 <fopen@plt>
    136c:	mov    QWORD PTR [rbp-0x58],rax
    1370:	cmp    QWORD PTR [rbp-0x58],0x0
    1375:	jne    13a9 <easy_checker+0xd7>
    1377:	lea    rax,[rip+0xc95]        # 2013 <_IO_stdin_used+0x13>
    137e:	mov    rdx,rax
    1381:	lea    rax,[rip+0xca0]        # 2028 <_IO_stdin_used+0x28>
    1388:	mov    rsi,rax
    138b:	lea    rax,[rip+0xccb]        # 205d <_IO_stdin_used+0x5d>
    1392:	mov    rdi,rax
    1395:	mov    eax,0x0
    139a:	call   1130 <printf@plt>
    139f:	mov    edi,0x0
    13a4:	call   1190 <exit@plt>
    13a9:	mov    rdx,QWORD PTR [rbp-0x58]
    13ad:	lea    rax,[rbp-0x50]
    13b1:	mov    esi,0x40
    13b6:	mov    rdi,rax
    13b9:	call   1140 <fgets@plt>
    13be:	lea    rax,[rip+0xc9e]        # 2063 <_IO_stdin_used+0x63>
    13c5:	mov    rdi,rax
    13c8:	call   10f0 <puts@plt>
    13cd:	lea    rax,[rbp-0x50]
    13d1:	mov    rdi,rax
    13d4:	call   10f0 <puts@plt>
    13d9:	jmp    13ef <easy_checker+0x11d>
    13db:	lea    rax,[rip+0xc9f]        # 2081 <_IO_stdin_used+0x81>
    13e2:	mov    rdi,rax
    13e5:	mov    eax,0x0
    13ea:	call   1130 <printf@plt>
    13ef:	nop
    13f0:	mov    rax,QWORD PTR [rbp-0x8]
    13f4:	sub    rax,QWORD PTR fs:0x28
    13fd:	je     1404 <easy_checker+0x132>
    13ff:	call   1110 <__stack_chk_fail@plt>
    1404:	leave  
    1405:	ret    

0000000000001406 <hard_checker>:
    1406:	endbr64 
    140a:	push   rbp
    140b:	mov    rbp,rsp
    140e:	sub    rsp,0x70
    1412:	mov    QWORD PTR [rbp-0x68],rdi
    1416:	mov    QWORD PTR [rbp-0x70],rsi
    141a:	mov    rax,QWORD PTR fs:0x28
    1423:	mov    QWORD PTR [rbp-0x8],rax
    1427:	xor    eax,eax
    1429:	mov    rdx,QWORD PTR [rbp-0x70]
    142d:	mov    rax,QWORD PTR [rbp-0x68]
    1431:	mov    rsi,rdx
    1434:	mov    rdi,rax
    1437:	call   1289 <calculate_story_score>
    143c:	cmp    eax,0xcc07c9
    1441:	jne    150f <hard_checker+0x109>
    1447:	mov    QWORD PTR [rbp-0x50],0x0
    144f:	mov    QWORD PTR [rbp-0x48],0x0
    1457:	mov    QWORD PTR [rbp-0x40],0x0
    145f:	mov    QWORD PTR [rbp-0x38],0x0
    1467:	mov    QWORD PTR [rbp-0x30],0x0
    146f:	mov    QWORD PTR [rbp-0x28],0x0
    1477:	mov    QWORD PTR [rbp-0x20],0x0
    147f:	mov    QWORD PTR [rbp-0x18],0x0
    1487:	lea    rax,[rip+0xb7a]        # 2008 <_IO_stdin_used+0x8>
    148e:	mov    rsi,rax
    1491:	lea    rax,[rip+0xb72]        # 200a <_IO_stdin_used+0xa>
    1498:	mov    rdi,rax
    149b:	call   1170 <fopen@plt>
    14a0:	mov    QWORD PTR [rbp-0x58],rax
    14a4:	cmp    QWORD PTR [rbp-0x58],0x0
    14a9:	jne    14dd <hard_checker+0xd7>
    14ab:	lea    rax,[rip+0xb61]        # 2013 <_IO_stdin_used+0x13>
    14b2:	mov    rdx,rax
    14b5:	lea    rax,[rip+0xb6c]        # 2028 <_IO_stdin_used+0x28>
    14bc:	mov    rsi,rax
    14bf:	lea    rax,[rip+0xb97]        # 205d <_IO_stdin_used+0x5d>
    14c6:	mov    rdi,rax
    14c9:	mov    eax,0x0
    14ce:	call   1130 <printf@plt>
    14d3:	mov    edi,0x0
    14d8:	call   1190 <exit@plt>
    14dd:	mov    rdx,QWORD PTR [rbp-0x58]
    14e1:	lea    rax,[rbp-0x50]
    14e5:	mov    esi,0x40
    14ea:	mov    rdi,rax
    14ed:	call   1140 <fgets@plt>
    14f2:	lea    rax,[rip+0xba7]        # 20a0 <_IO_stdin_used+0xa0>
    14f9:	mov    rdi,rax
    14fc:	call   10f0 <puts@plt>
    1501:	lea    rax,[rbp-0x50]
    1505:	mov    rdi,rax
    1508:	call   10f0 <puts@plt>
    150d:	jmp    1523 <hard_checker+0x11d>
    150f:	lea    rax,[rip+0xb6b]        # 2081 <_IO_stdin_used+0x81>
    1516:	mov    rdi,rax
    1519:	mov    eax,0x0
    151e:	call   1130 <printf@plt>
    1523:	nop
    1524:	mov    rax,QWORD PTR [rbp-0x8]
    1528:	sub    rax,QWORD PTR fs:0x28
    1531:	je     1538 <hard_checker+0x132>
    1533:	call   1110 <__stack_chk_fail@plt>
    1538:	leave  
    1539:	ret    

000000000000153a <vuln>:
    153a:	endbr64 
    153e:	push   rbp
    153f:	mov    rbp,rsp
    1542:	push   rbx
    1543:	sub    rsp,0xa8
    154a:	mov    rax,QWORD PTR fs:0x28
    1553:	mov    QWORD PTR [rbp-0x18],rax
    1557:	xor    eax,eax
    1559:	lea    rax,[rip+0xb68]        # 20c8 <_IO_stdin_used+0xc8>
    1560:	mov    rdi,rax
    1563:	mov    eax,0x0
    1568:	call   1130 <printf@plt>
    156d:	lea    rax,[rbp-0xa0]
    1574:	mov    rsi,rax
    1577:	lea    rax,[rip+0xb86]        # 2104 <_IO_stdin_used+0x104>
    157e:	mov    rdi,rax
    1581:	mov    eax,0x0
    1586:	call   1180 <__isoc99_scanf@plt>
    158b:	lea    rax,[rip+0xb7e]        # 2110 <_IO_stdin_used+0x110>
    1592:	mov    rdi,rax
    1595:	call   10f0 <puts@plt>
    159a:	lea    rdx,[rbp-0xa4]
    15a1:	lea    rax,[rbp-0xa8]
    15a8:	mov    rsi,rax
    15ab:	lea    rax,[rip+0xbb1]        # 2163 <_IO_stdin_used+0x163>
    15b2:	mov    rdi,rax
    15b5:	mov    eax,0x0
    15ba:	call   1180 <__isoc99_scanf@plt>
    15bf:	mov    eax,DWORD PTR [rbp-0xa8]
    15c5:	cmp    eax,0x9
    15c8:	jg     1606 <vuln+0xcc>
    15ca:	mov    eax,DWORD PTR [rbp-0xa8]
    15d0:	cdqe   
    15d2:	lea    rdx,[rax*4+0x0]
    15da:	lea    rax,[rip+0x2a5f]        # 4040 <fun>
    15e1:	mov    ecx,DWORD PTR [rdx+rax*1]
    15e4:	mov    edx,DWORD PTR [rbp-0xa4]
    15ea:	mov    eax,DWORD PTR [rbp-0xa8]
    15f0:	add    ecx,edx
    15f2:	cdqe   
    15f4:	lea    rdx,[rax*4+0x0]
    15fc:	lea    rax,[rip+0x2a3d]        # 4040 <fun>
    1603:	mov    DWORD PTR [rdx+rax*1],ecx
    1606:	mov    rbx,QWORD PTR [rip+0x2a03]        # 4010 <check>
    160d:	lea    rax,[rbp-0xa0]
    1614:	mov    rdi,rax
    1617:	call   1100 <strlen@plt>
    161c:	mov    rdx,rax
    161f:	lea    rax,[rbp-0xa0]
    1626:	mov    rsi,rdx
    1629:	mov    rdi,rax
    162c:	call   rbx
    162e:	nop
    162f:	mov    rax,QWORD PTR [rbp-0x18]
    1633:	sub    rax,QWORD PTR fs:0x28
    163c:	je     1643 <vuln+0x109>
    163e:	call   1110 <__stack_chk_fail@plt>
    1643:	mov    rbx,QWORD PTR [rbp-0x8]
    1647:	leave  
    1648:	ret    

0000000000001649 <main>:
    1649:	endbr64 
    164d:	push   rbp
    164e:	mov    rbp,rsp
    1651:	sub    rsp,0x20
    1655:	mov    DWORD PTR [rbp-0x14],edi
    1658:	mov    QWORD PTR [rbp-0x20],rsi
    165c:	mov    rax,QWORD PTR [rip+0x29bd]        # 4020 <stdout@GLIBC_2.2.5>
    1663:	mov    ecx,0x0
    1668:	mov    edx,0x2
    166d:	mov    esi,0x0
    1672:	mov    rdi,rax
    1675:	call   1160 <setvbuf@plt>
    167a:	call   1150 <getegid@plt>
    167f:	mov    DWORD PTR [rbp-0x4],eax
    1682:	mov    edx,DWORD PTR [rbp-0x4]
    1685:	mov    ecx,DWORD PTR [rbp-0x4]
    1688:	mov    eax,DWORD PTR [rbp-0x4]
    168b:	mov    esi,ecx
    168d:	mov    edi,eax
    168f:	mov    eax,0x0
    1694:	call   1120 <setresgid@plt>
    1699:	mov    eax,0x0
    169e:	call   153a <vuln>
    16a3:	mov    eax,0x0
    16a8:	leave  
    16a9:	ret    

Disassembly of section .fini:

00000000000016ac <_fini>:
    16ac:	endbr64 
    16b0:	sub    rsp,0x8
    16b4:	add    rsp,0x8
    16b8:	ret    
