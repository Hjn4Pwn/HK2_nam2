
./data/process_data_1/7/function_overwrite_O0_clang:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <strlen@plt-0x10>:
    1020:	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	nop    DWORD PTR [rax+0x0]

0000000000001030 <strlen@plt>:
    1030:	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <strlen@GLIBC_2.2.5>
    1036:	push   0x0
    103b:	jmp    1020 <_init+0x20>

0000000000001040 <setresgid@plt>:
    1040:	jmp    QWORD PTR [rip+0x2fda]        # 4020 <setresgid@GLIBC_2.2.5>
    1046:	push   0x1
    104b:	jmp    1020 <_init+0x20>

0000000000001050 <printf@plt>:
    1050:	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <printf@GLIBC_2.2.5>
    1056:	push   0x2
    105b:	jmp    1020 <_init+0x20>

0000000000001060 <memset@plt>:
    1060:	jmp    QWORD PTR [rip+0x2fca]        # 4030 <memset@GLIBC_2.2.5>
    1066:	push   0x3
    106b:	jmp    1020 <_init+0x20>

0000000000001070 <fgets@plt>:
    1070:	jmp    QWORD PTR [rip+0x2fc2]        # 4038 <fgets@GLIBC_2.2.5>
    1076:	push   0x4
    107b:	jmp    1020 <_init+0x20>

0000000000001080 <getegid@plt>:
    1080:	jmp    QWORD PTR [rip+0x2fba]        # 4040 <getegid@GLIBC_2.2.5>
    1086:	push   0x5
    108b:	jmp    1020 <_init+0x20>

0000000000001090 <setvbuf@plt>:
    1090:	jmp    QWORD PTR [rip+0x2fb2]        # 4048 <setvbuf@GLIBC_2.2.5>
    1096:	push   0x6
    109b:	jmp    1020 <_init+0x20>

00000000000010a0 <fopen@plt>:
    10a0:	jmp    QWORD PTR [rip+0x2faa]        # 4050 <fopen@GLIBC_2.2.5>
    10a6:	push   0x7
    10ab:	jmp    1020 <_init+0x20>

00000000000010b0 <__isoc99_scanf@plt>:
    10b0:	jmp    QWORD PTR [rip+0x2fa2]        # 4058 <__isoc99_scanf@GLIBC_2.7>
    10b6:	push   0x8
    10bb:	jmp    1020 <_init+0x20>

00000000000010c0 <exit@plt>:
    10c0:	jmp    QWORD PTR [rip+0x2f9a]        # 4060 <exit@GLIBC_2.2.5>
    10c6:	push   0x9
    10cb:	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000010d0 <__cxa_finalize@plt>:
    10d0:	jmp    QWORD PTR [rip+0x2f22]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10d6:	xchg   ax,ax

Disassembly of section .text:

00000000000010e0 <_start>:
    10e0:	endbr64 
    10e4:	xor    ebp,ebp
    10e6:	mov    r9,rdx
    10e9:	pop    rsi
    10ea:	mov    rdx,rsp
    10ed:	and    rsp,0xfffffffffffffff0
    10f1:	push   rax
    10f2:	push   rsp
    10f3:	xor    r8d,r8d
    10f6:	xor    ecx,ecx
    10f8:	lea    rdi,[rip+0x3a1]        # 14a0 <main>
    10ff:	call   QWORD PTR [rip+0x2ecb]        # 3fd0 <__libc_start_main@GLIBC_2.34>
    1105:	hlt    
    1106:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001110 <deregister_tm_clones>:
    1110:	lea    rdi,[rip+0x2f69]        # 4080 <__TMC_END__>
    1117:	lea    rax,[rip+0x2f62]        # 4080 <__TMC_END__>
    111e:	cmp    rax,rdi
    1121:	je     1138 <deregister_tm_clones+0x28>
    1123:	mov    rax,QWORD PTR [rip+0x2eae]        # 3fd8 <_ITM_deregisterTMCloneTable@Base>
    112a:	test   rax,rax
    112d:	je     1138 <deregister_tm_clones+0x28>
    112f:	jmp    rax
    1131:	nop    DWORD PTR [rax+0x0]
    1138:	ret    
    1139:	nop    DWORD PTR [rax+0x0]

0000000000001140 <register_tm_clones>:
    1140:	lea    rdi,[rip+0x2f39]        # 4080 <__TMC_END__>
    1147:	lea    rsi,[rip+0x2f32]        # 4080 <__TMC_END__>
    114e:	sub    rsi,rdi
    1151:	mov    rax,rsi
    1154:	shr    rsi,0x3f
    1158:	sar    rax,0x3
    115c:	add    rsi,rax
    115f:	sar    rsi,1
    1162:	je     1178 <register_tm_clones+0x38>
    1164:	mov    rax,QWORD PTR [rip+0x2e85]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    116b:	test   rax,rax
    116e:	je     1178 <register_tm_clones+0x38>
    1170:	jmp    rax
    1172:	nop    WORD PTR [rax+rax*1+0x0]
    1178:	ret    
    1179:	nop    DWORD PTR [rax+0x0]

0000000000001180 <__do_global_dtors_aux>:
    1180:	endbr64 
    1184:	cmp    BYTE PTR [rip+0x2ef5],0x0        # 4080 <__TMC_END__>
    118b:	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	push   rbp
    118e:	cmp    QWORD PTR [rip+0x2e62],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1196:	mov    rbp,rsp
    1199:	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	mov    rdi,QWORD PTR [rip+0x2ece]        # 4070 <__dso_handle>
    11a2:	call   10d0 <__cxa_finalize@plt>
    11a7:	call   1110 <deregister_tm_clones>
    11ac:	mov    BYTE PTR [rip+0x2ecd],0x1        # 4080 <__TMC_END__>
    11b3:	pop    rbp
    11b4:	ret    
    11b5:	nop    DWORD PTR [rax]
    11b8:	ret    
    11b9:	nop    DWORD PTR [rax+0x0]

00000000000011c0 <frame_dummy>:
    11c0:	endbr64 
    11c4:	jmp    1140 <register_tm_clones>
    11c9:	nop    DWORD PTR [rax+0x0]

00000000000011d0 <calculate_story_score>:
    11d0:	push   rbp
    11d1:	mov    rbp,rsp
    11d4:	mov    QWORD PTR [rbp-0x8],rdi
    11d8:	mov    QWORD PTR [rbp-0x10],rsi
    11dc:	mov    DWORD PTR [rbp-0x14],0x0
    11e3:	mov    QWORD PTR [rbp-0x20],0x0
    11eb:	mov    rax,QWORD PTR [rbp-0x20]
    11ef:	cmp    rax,QWORD PTR [rbp-0x10]
    11f3:	jae    121c <calculate_story_score+0x4c>
    11f9:	mov    rax,QWORD PTR [rbp-0x8]
    11fd:	mov    rcx,QWORD PTR [rbp-0x20]
    1201:	movsx  eax,BYTE PTR [rax+rcx*1]
    1205:	add    eax,DWORD PTR [rbp-0x14]
    1208:	mov    DWORD PTR [rbp-0x14],eax
    120b:	mov    rax,QWORD PTR [rbp-0x20]
    120f:	add    rax,0x1
    1213:	mov    QWORD PTR [rbp-0x20],rax
    1217:	jmp    11eb <calculate_story_score+0x1b>
    121c:	mov    eax,DWORD PTR [rbp-0x14]
    121f:	pop    rbp
    1220:	ret    
    1221:	cs nop WORD PTR [rax+rax*1+0x0]
    122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001230 <easy_checker>:
    1230:	push   rbp
    1231:	mov    rbp,rsp
    1234:	sub    rsp,0x60
    1238:	mov    QWORD PTR [rbp-0x8],rdi
    123c:	mov    QWORD PTR [rbp-0x10],rsi
    1240:	mov    rdi,QWORD PTR [rbp-0x8]
    1244:	mov    rsi,QWORD PTR [rbp-0x10]
    1248:	call   11d0 <calculate_story_score>
    124d:	cmp    eax,0x539
    1252:	jne    12e4 <easy_checker+0xb4>
    1258:	lea    rdi,[rbp-0x50]
    125c:	xor    esi,esi
    125e:	mov    edx,0x40
    1263:	call   1060 <memset@plt>
    1268:	lea    rdi,[rip+0xd95]        # 2004 <_IO_stdin_used+0x4>
    126f:	lea    rsi,[rip+0xdd0]        # 2046 <_IO_stdin_used+0x46>
    1276:	call   10a0 <fopen@plt>
    127b:	mov    QWORD PTR [rbp-0x58],rax
    127f:	cmp    QWORD PTR [rbp-0x58],0x0
    1284:	jne    12ad <easy_checker+0x7d>
    128a:	lea    rdi,[rip+0xd7c]        # 200d <_IO_stdin_used+0xd>
    1291:	lea    rsi,[rip+0xd7b]        # 2013 <_IO_stdin_used+0x13>
    1298:	lea    rdx,[rip+0xda9]        # 2048 <_IO_stdin_used+0x48>
    129f:	mov    al,0x0
    12a1:	call   1050 <printf@plt>
    12a6:	xor    edi,edi
    12a8:	call   10c0 <exit@plt>
    12ad:	lea    rdi,[rbp-0x50]
    12b1:	mov    rdx,QWORD PTR [rbp-0x58]
    12b5:	mov    esi,0x40
    12ba:	call   1070 <fgets@plt>
    12bf:	lea    rdi,[rip+0xd97]        # 205d <_IO_stdin_used+0x5d>
    12c6:	mov    al,0x0
    12c8:	call   1050 <printf@plt>
    12cd:	lea    rsi,[rbp-0x50]
    12d1:	lea    rdi,[rip+0xda4]        # 207c <_IO_stdin_used+0x7c>
    12d8:	mov    al,0x0
    12da:	call   1050 <printf@plt>
    12df:	jmp    12f2 <easy_checker+0xc2>
    12e4:	lea    rdi,[rip+0xd95]        # 2080 <_IO_stdin_used+0x80>
    12eb:	mov    al,0x0
    12ed:	call   1050 <printf@plt>
    12f2:	add    rsp,0x60
    12f6:	pop    rbp
    12f7:	ret    
    12f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001300 <hard_checker>:
    1300:	push   rbp
    1301:	mov    rbp,rsp
    1304:	sub    rsp,0x60
    1308:	mov    QWORD PTR [rbp-0x8],rdi
    130c:	mov    QWORD PTR [rbp-0x10],rsi
    1310:	mov    rdi,QWORD PTR [rbp-0x8]
    1314:	mov    rsi,QWORD PTR [rbp-0x10]
    1318:	call   11d0 <calculate_story_score>
    131d:	cmp    eax,0xcc07c9
    1322:	jne    13b4 <hard_checker+0xb4>
    1328:	lea    rdi,[rbp-0x50]
    132c:	xor    esi,esi
    132e:	mov    edx,0x40
    1333:	call   1060 <memset@plt>
    1338:	lea    rdi,[rip+0xcc5]        # 2004 <_IO_stdin_used+0x4>
    133f:	lea    rsi,[rip+0xd00]        # 2046 <_IO_stdin_used+0x46>
    1346:	call   10a0 <fopen@plt>
    134b:	mov    QWORD PTR [rbp-0x58],rax
    134f:	cmp    QWORD PTR [rbp-0x58],0x0
    1354:	jne    137d <hard_checker+0x7d>
    135a:	lea    rdi,[rip+0xcac]        # 200d <_IO_stdin_used+0xd>
    1361:	lea    rsi,[rip+0xcab]        # 2013 <_IO_stdin_used+0x13>
    1368:	lea    rdx,[rip+0xcd9]        # 2048 <_IO_stdin_used+0x48>
    136f:	mov    al,0x0
    1371:	call   1050 <printf@plt>
    1376:	xor    edi,edi
    1378:	call   10c0 <exit@plt>
    137d:	lea    rdi,[rbp-0x50]
    1381:	mov    rdx,QWORD PTR [rbp-0x58]
    1385:	mov    esi,0x40
    138a:	call   1070 <fgets@plt>
    138f:	lea    rdi,[rip+0xd04]        # 209a <_IO_stdin_used+0x9a>
    1396:	mov    al,0x0
    1398:	call   1050 <printf@plt>
    139d:	lea    rsi,[rbp-0x50]
    13a1:	lea    rdi,[rip+0xcd4]        # 207c <_IO_stdin_used+0x7c>
    13a8:	mov    al,0x0
    13aa:	call   1050 <printf@plt>
    13af:	jmp    13c2 <hard_checker+0xc2>
    13b4:	lea    rdi,[rip+0xcc5]        # 2080 <_IO_stdin_used+0x80>
    13bb:	mov    al,0x0
    13bd:	call   1050 <printf@plt>
    13c2:	add    rsp,0x60
    13c6:	pop    rbp
    13c7:	ret    
    13c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000013d0 <vuln>:
    13d0:	push   rbp
    13d1:	mov    rbp,rsp
    13d4:	sub    rsp,0xa0
    13db:	lea    rdi,[rip+0xcdb]        # 20bd <_IO_stdin_used+0xbd>
    13e2:	mov    al,0x0
    13e4:	call   1050 <printf@plt>
    13e9:	lea    rsi,[rbp-0x80]
    13ed:	lea    rdi,[rip+0xd05]        # 20f9 <_IO_stdin_used+0xf9>
    13f4:	mov    al,0x0
    13f6:	call   10b0 <__isoc99_scanf@plt>
    13fb:	lea    rdi,[rip+0xcfd]        # 20ff <_IO_stdin_used+0xff>
    1402:	mov    al,0x0
    1404:	call   1050 <printf@plt>
    1409:	lea    rdi,[rip+0xd43]        # 2153 <_IO_stdin_used+0x153>
    1410:	lea    rsi,[rbp-0x84]
    1417:	lea    rdx,[rbp-0x88]
    141e:	mov    al,0x0
    1420:	call   10b0 <__isoc99_scanf@plt>
    1425:	cmp    DWORD PTR [rbp-0x84],0xa
    142c:	jge    1453 <vuln+0x83>
    1432:	mov    edx,DWORD PTR [rbp-0x88]
    1438:	movsxd rcx,DWORD PTR [rbp-0x84]
    143f:	lea    rax,[rip+0x2c4a]        # 4090 <fun>
    1446:	add    edx,DWORD PTR [rax+rcx*4]
    1449:	lea    rax,[rip+0x2c40]        # 4090 <fun>
    1450:	mov    DWORD PTR [rax+rcx*4],edx
    1453:	mov    rax,QWORD PTR [rip+0x2c1e]        # 4078 <check>
    145a:	mov    QWORD PTR [rbp-0x90],rax
    1461:	lea    rax,[rbp-0x80]
    1465:	mov    QWORD PTR [rbp-0x98],rax
    146c:	lea    rdi,[rbp-0x80]
    1470:	call   1030 <strlen@plt>
    1475:	mov    rdi,QWORD PTR [rbp-0x98]
    147c:	mov    rsi,rax
    147f:	mov    rax,QWORD PTR [rbp-0x90]
    1486:	call   rax
    1488:	add    rsp,0xa0
    148f:	pop    rbp
    1490:	ret    
    1491:	cs nop WORD PTR [rax+rax*1+0x0]
    149b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000014a0 <main>:
    14a0:	push   rbp
    14a1:	mov    rbp,rsp
    14a4:	sub    rsp,0x20
    14a8:	mov    DWORD PTR [rbp-0x4],0x0
    14af:	mov    DWORD PTR [rbp-0x8],edi
    14b2:	mov    QWORD PTR [rbp-0x10],rsi
    14b6:	mov    rax,QWORD PTR [rip+0x2b23]        # 3fe0 <stdout@GLIBC_2.2.5>
    14bd:	mov    rdi,QWORD PTR [rax]
    14c0:	xor    eax,eax
    14c2:	mov    ecx,eax
    14c4:	mov    edx,0x2
    14c9:	mov    rsi,rcx
    14cc:	call   1090 <setvbuf@plt>
    14d1:	call   1080 <getegid@plt>
    14d6:	mov    DWORD PTR [rbp-0x14],eax
    14d9:	mov    edi,DWORD PTR [rbp-0x14]
    14dc:	mov    esi,DWORD PTR [rbp-0x14]
    14df:	mov    edx,DWORD PTR [rbp-0x14]
    14e2:	mov    al,0x0
    14e4:	call   1040 <setresgid@plt>
    14e9:	call   13d0 <vuln>
    14ee:	xor    eax,eax
    14f0:	add    rsp,0x20
    14f4:	pop    rbp
    14f5:	ret    

Disassembly of section .fini:

00000000000014f8 <_fini>:
    14f8:	endbr64 
    14fc:	sub    rsp,0x8
    1500:	add    rsp,0x8
    1504:	ret    
