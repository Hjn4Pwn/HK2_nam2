
./data/process_data_1/7/function_overwrite_O1_gcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f4a]        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f4b]        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <_init+0x20>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <_init+0x20>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <_init+0x20>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <_init+0x20>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <_init+0x20>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <_init+0x20>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <_init+0x20>
    109f:	nop
    10a0:	endbr64 
    10a4:	push   0x7
    10a9:	bnd jmp 1020 <_init+0x20>
    10af:	nop
    10b0:	endbr64 
    10b4:	push   0x8
    10b9:	bnd jmp 1020 <_init+0x20>
    10bf:	nop
    10c0:	endbr64 
    10c4:	push   0x9
    10c9:	bnd jmp 1020 <_init+0x20>
    10cf:	nop
    10d0:	endbr64 
    10d4:	push   0xa
    10d9:	bnd jmp 1020 <_init+0x20>
    10df:	nop

Disassembly of section .plt.got:

00000000000010e0 <__cxa_finalize@plt>:
    10e0:	endbr64 
    10e4:	bnd jmp QWORD PTR [rip+0x2f0d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000010f0 <puts@plt>:
    10f0:	endbr64 
    10f4:	bnd jmp QWORD PTR [rip+0x2e85]        # 3f80 <puts@GLIBC_2.2.5>
    10fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001100 <strlen@plt>:
    1100:	endbr64 
    1104:	bnd jmp QWORD PTR [rip+0x2e7d]        # 3f88 <strlen@GLIBC_2.2.5>
    110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001110 <__stack_chk_fail@plt>:
    1110:	endbr64 
    1114:	bnd jmp QWORD PTR [rip+0x2e75]        # 3f90 <__stack_chk_fail@GLIBC_2.4>
    111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <setresgid@plt>:
    1120:	endbr64 
    1124:	bnd jmp QWORD PTR [rip+0x2e6d]        # 3f98 <setresgid@GLIBC_2.2.5>
    112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001130 <fgets@plt>:
    1130:	endbr64 
    1134:	bnd jmp QWORD PTR [rip+0x2e65]        # 3fa0 <fgets@GLIBC_2.2.5>
    113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001140 <getegid@plt>:
    1140:	endbr64 
    1144:	bnd jmp QWORD PTR [rip+0x2e5d]        # 3fa8 <getegid@GLIBC_2.2.5>
    114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001150 <__printf_chk@plt>:
    1150:	endbr64 
    1154:	bnd jmp QWORD PTR [rip+0x2e55]        # 3fb0 <__printf_chk@GLIBC_2.3.4>
    115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001160 <setvbuf@plt>:
    1160:	endbr64 
    1164:	bnd jmp QWORD PTR [rip+0x2e4d]        # 3fb8 <setvbuf@GLIBC_2.2.5>
    116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001170 <fopen@plt>:
    1170:	endbr64 
    1174:	bnd jmp QWORD PTR [rip+0x2e45]        # 3fc0 <fopen@GLIBC_2.2.5>
    117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001180 <__isoc99_scanf@plt>:
    1180:	endbr64 
    1184:	bnd jmp QWORD PTR [rip+0x2e3d]        # 3fc8 <__isoc99_scanf@GLIBC_2.7>
    118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001190 <exit@plt>:
    1190:	endbr64 
    1194:	bnd jmp QWORD PTR [rip+0x2e35]        # 3fd0 <exit@GLIBC_2.2.5>
    119b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000011a0 <_start>:
    11a0:	endbr64 
    11a4:	xor    ebp,ebp
    11a6:	mov    r9,rdx
    11a9:	pop    rsi
    11aa:	mov    rdx,rsp
    11ad:	and    rsp,0xfffffffffffffff0
    11b1:	push   rax
    11b2:	push   rsp
    11b3:	xor    r8d,r8d
    11b6:	xor    ecx,ecx
    11b8:	lea    rdi,[rip+0x3dc]        # 159b <main>
    11bf:	call   QWORD PTR [rip+0x2e13]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    11c5:	hlt    
    11c6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000011d0 <deregister_tm_clones>:
    11d0:	lea    rdi,[rip+0x2e41]        # 4018 <__TMC_END__>
    11d7:	lea    rax,[rip+0x2e3a]        # 4018 <__TMC_END__>
    11de:	cmp    rax,rdi
    11e1:	je     11f8 <deregister_tm_clones+0x28>
    11e3:	mov    rax,QWORD PTR [rip+0x2df6]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    11ea:	test   rax,rax
    11ed:	je     11f8 <deregister_tm_clones+0x28>
    11ef:	jmp    rax
    11f1:	nop    DWORD PTR [rax+0x0]
    11f8:	ret    
    11f9:	nop    DWORD PTR [rax+0x0]

0000000000001200 <register_tm_clones>:
    1200:	lea    rdi,[rip+0x2e11]        # 4018 <__TMC_END__>
    1207:	lea    rsi,[rip+0x2e0a]        # 4018 <__TMC_END__>
    120e:	sub    rsi,rdi
    1211:	mov    rax,rsi
    1214:	shr    rsi,0x3f
    1218:	sar    rax,0x3
    121c:	add    rsi,rax
    121f:	sar    rsi,1
    1222:	je     1238 <register_tm_clones+0x38>
    1224:	mov    rax,QWORD PTR [rip+0x2dc5]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    122b:	test   rax,rax
    122e:	je     1238 <register_tm_clones+0x38>
    1230:	jmp    rax
    1232:	nop    WORD PTR [rax+rax*1+0x0]
    1238:	ret    
    1239:	nop    DWORD PTR [rax+0x0]

0000000000001240 <__do_global_dtors_aux>:
    1240:	endbr64 
    1244:	cmp    BYTE PTR [rip+0x2ddd],0x0        # 4028 <completed.0>
    124b:	jne    1278 <__do_global_dtors_aux+0x38>
    124d:	push   rbp
    124e:	cmp    QWORD PTR [rip+0x2da2],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1256:	mov    rbp,rsp
    1259:	je     1267 <__do_global_dtors_aux+0x27>
    125b:	mov    rdi,QWORD PTR [rip+0x2da6]        # 4008 <__dso_handle>
    1262:	call   10e0 <__cxa_finalize@plt>
    1267:	call   11d0 <deregister_tm_clones>
    126c:	mov    BYTE PTR [rip+0x2db5],0x1        # 4028 <completed.0>
    1273:	pop    rbp
    1274:	ret    
    1275:	nop    DWORD PTR [rax]
    1278:	ret    
    1279:	nop    DWORD PTR [rax+0x0]

0000000000001280 <frame_dummy>:
    1280:	endbr64 
    1284:	jmp    1200 <register_tm_clones>

0000000000001289 <calculate_story_score>:
    1289:	endbr64 
    128d:	test   rsi,rsi
    1290:	je     12ae <calculate_story_score+0x25>
    1292:	mov    rax,rdi
    1295:	add    rdi,rsi
    1298:	mov    edx,0x0
    129d:	movsx  ecx,BYTE PTR [rax]
    12a0:	add    edx,ecx
    12a2:	add    rax,0x1
    12a6:	cmp    rax,rdi
    12a9:	jne    129d <calculate_story_score+0x14>
    12ab:	mov    eax,edx
    12ad:	ret    
    12ae:	mov    edx,0x0
    12b3:	jmp    12ab <calculate_story_score+0x22>

00000000000012b5 <hard_checker>:
    12b5:	endbr64 
    12b9:	push   rbx
    12ba:	sub    rsp,0x50
    12be:	mov    rax,QWORD PTR fs:0x28
    12c7:	mov    QWORD PTR [rsp+0x48],rax
    12cc:	xor    eax,eax
    12ce:	call   1289 <calculate_story_score>
    12d3:	cmp    eax,0xcc07c9
    12d8:	je     130a <hard_checker+0x55>
    12da:	lea    rsi,[rip+0xd49]        # 202a <_IO_stdin_used+0x2a>
    12e1:	mov    edi,0x1
    12e6:	mov    eax,0x0
    12eb:	call   1150 <__printf_chk@plt>
    12f0:	mov    rax,QWORD PTR [rsp+0x48]
    12f5:	sub    rax,QWORD PTR fs:0x28
    12fe:	jne    13c3 <hard_checker+0x10e>
    1304:	add    rsp,0x50
    1308:	pop    rbx
    1309:	ret    
    130a:	mov    QWORD PTR [rsp],0x0
    1312:	mov    QWORD PTR [rsp+0x8],0x0
    131b:	mov    QWORD PTR [rsp+0x10],0x0
    1324:	mov    QWORD PTR [rsp+0x18],0x0
    132d:	mov    QWORD PTR [rsp+0x20],0x0
    1336:	mov    QWORD PTR [rsp+0x28],0x0
    133f:	mov    QWORD PTR [rsp+0x30],0x0
    1348:	mov    QWORD PTR [rsp+0x38],0x0
    1351:	lea    rsi,[rip+0xcac]        # 2004 <_IO_stdin_used+0x4>
    1358:	lea    rdi,[rip+0xca7]        # 2006 <_IO_stdin_used+0x6>
    135f:	call   1170 <fopen@plt>
    1364:	mov    rdx,rax
    1367:	test   rax,rax
    136a:	je     1395 <hard_checker+0xe0>
    136c:	mov    rbx,rsp
    136f:	mov    esi,0x40
    1374:	mov    rdi,rbx
    1377:	call   1130 <fgets@plt>
    137c:	lea    rdi,[rip+0xd25]        # 20a8 <_IO_stdin_used+0xa8>
    1383:	call   10f0 <puts@plt>
    1388:	mov    rdi,rbx
    138b:	call   10f0 <puts@plt>
    1390:	jmp    12f0 <hard_checker+0x3b>
    1395:	lea    rcx,[rip+0xc73]        # 200f <_IO_stdin_used+0xf>
    139c:	lea    rdx,[rip+0xccd]        # 2070 <_IO_stdin_used+0x70>
    13a3:	lea    rsi,[rip+0xc7a]        # 2024 <_IO_stdin_used+0x24>
    13aa:	mov    edi,0x1
    13af:	mov    eax,0x0
    13b4:	call   1150 <__printf_chk@plt>
    13b9:	mov    edi,0x0
    13be:	call   1190 <exit@plt>
    13c3:	call   1110 <__stack_chk_fail@plt>

00000000000013c8 <easy_checker>:
    13c8:	endbr64 
    13cc:	push   rbx
    13cd:	sub    rsp,0x50
    13d1:	mov    rax,QWORD PTR fs:0x28
    13da:	mov    QWORD PTR [rsp+0x48],rax
    13df:	xor    eax,eax
    13e1:	call   1289 <calculate_story_score>
    13e6:	cmp    eax,0x539
    13eb:	je     141d <easy_checker+0x55>
    13ed:	lea    rsi,[rip+0xc36]        # 202a <_IO_stdin_used+0x2a>
    13f4:	mov    edi,0x1
    13f9:	mov    eax,0x0
    13fe:	call   1150 <__printf_chk@plt>
    1403:	mov    rax,QWORD PTR [rsp+0x48]
    1408:	sub    rax,QWORD PTR fs:0x28
    1411:	jne    14d6 <easy_checker+0x10e>
    1417:	add    rsp,0x50
    141b:	pop    rbx
    141c:	ret    
    141d:	mov    QWORD PTR [rsp],0x0
    1425:	mov    QWORD PTR [rsp+0x8],0x0
    142e:	mov    QWORD PTR [rsp+0x10],0x0
    1437:	mov    QWORD PTR [rsp+0x18],0x0
    1440:	mov    QWORD PTR [rsp+0x20],0x0
    1449:	mov    QWORD PTR [rsp+0x28],0x0
    1452:	mov    QWORD PTR [rsp+0x30],0x0
    145b:	mov    QWORD PTR [rsp+0x38],0x0
    1464:	lea    rsi,[rip+0xb99]        # 2004 <_IO_stdin_used+0x4>
    146b:	lea    rdi,[rip+0xb94]        # 2006 <_IO_stdin_used+0x6>
    1472:	call   1170 <fopen@plt>
    1477:	mov    rdx,rax
    147a:	test   rax,rax
    147d:	je     14a8 <easy_checker+0xe0>
    147f:	mov    rbx,rsp
    1482:	mov    esi,0x40
    1487:	mov    rdi,rbx
    148a:	call   1130 <fgets@plt>
    148f:	lea    rdi,[rip+0xbae]        # 2044 <_IO_stdin_used+0x44>
    1496:	call   10f0 <puts@plt>
    149b:	mov    rdi,rbx
    149e:	call   10f0 <puts@plt>
    14a3:	jmp    1403 <easy_checker+0x3b>
    14a8:	lea    rcx,[rip+0xb60]        # 200f <_IO_stdin_used+0xf>
    14af:	lea    rdx,[rip+0xbba]        # 2070 <_IO_stdin_used+0x70>
    14b6:	lea    rsi,[rip+0xb67]        # 2024 <_IO_stdin_used+0x24>
    14bd:	mov    edi,0x1
    14c2:	mov    eax,0x0
    14c7:	call   1150 <__printf_chk@plt>
    14cc:	mov    edi,0x0
    14d1:	call   1190 <exit@plt>
    14d6:	call   1110 <__stack_chk_fail@plt>

00000000000014db <vuln>:
    14db:	endbr64 
    14df:	push   rbx
    14e0:	sub    rsp,0xa0
    14e7:	mov    rax,QWORD PTR fs:0x28
    14f0:	mov    QWORD PTR [rsp+0x98],rax
    14f8:	xor    eax,eax
    14fa:	lea    rsi,[rip+0xbcf]        # 20d0 <_IO_stdin_used+0xd0>
    1501:	mov    edi,0x1
    1506:	call   1150 <__printf_chk@plt>
    150b:	lea    rsi,[rsp+0x10]
    1510:	lea    rdi,[rip+0xb4b]        # 2062 <_IO_stdin_used+0x62>
    1517:	mov    eax,0x0
    151c:	call   1180 <__isoc99_scanf@plt>
    1521:	lea    rdi,[rip+0xbe8]        # 2110 <_IO_stdin_used+0x110>
    1528:	call   10f0 <puts@plt>
    152d:	lea    rdx,[rsp+0xc]
    1532:	lea    rsi,[rsp+0x8]
    1537:	lea    rdi,[rip+0xb2a]        # 2068 <_IO_stdin_used+0x68>
    153e:	mov    eax,0x0
    1543:	call   1180 <__isoc99_scanf@plt>
    1548:	mov    eax,DWORD PTR [rsp+0x8]
    154c:	cmp    eax,0x9
    154f:	jg     1561 <vuln+0x86>
    1551:	lea    rdx,[rip+0x2ae8]        # 4040 <fun>
    1558:	cdqe   
    155a:	mov    ecx,DWORD PTR [rsp+0xc]
    155e:	add    DWORD PTR [rdx+rax*4],ecx
    1561:	lea    rbx,[rsp+0x10]
    1566:	mov    rdi,rbx
    1569:	call   1100 <strlen@plt>
    156e:	mov    rsi,rax
    1571:	mov    rdi,rbx
    1574:	call   QWORD PTR [rip+0x2a96]        # 4010 <check>
    157a:	mov    rax,QWORD PTR [rsp+0x98]
    1582:	sub    rax,QWORD PTR fs:0x28
    158b:	jne    1596 <vuln+0xbb>
    158d:	add    rsp,0xa0
    1594:	pop    rbx
    1595:	ret    
    1596:	call   1110 <__stack_chk_fail@plt>

000000000000159b <main>:
    159b:	endbr64 
    159f:	sub    rsp,0x8
    15a3:	mov    ecx,0x0
    15a8:	mov    edx,0x2
    15ad:	mov    esi,0x0
    15b2:	mov    rdi,QWORD PTR [rip+0x2a67]        # 4020 <stdout@GLIBC_2.2.5>
    15b9:	call   1160 <setvbuf@plt>
    15be:	call   1140 <getegid@plt>
    15c3:	mov    edi,eax
    15c5:	mov    edx,eax
    15c7:	mov    esi,eax
    15c9:	mov    eax,0x0
    15ce:	call   1120 <setresgid@plt>
    15d3:	mov    eax,0x0
    15d8:	call   14db <vuln>
    15dd:	mov    eax,0x0
    15e2:	add    rsp,0x8
    15e6:	ret    

Disassembly of section .fini:

00000000000015e8 <_fini>:
    15e8:	endbr64 
    15ec:	sub    rsp,0x8
    15f0:	add    rsp,0x8
    15f4:	ret    
