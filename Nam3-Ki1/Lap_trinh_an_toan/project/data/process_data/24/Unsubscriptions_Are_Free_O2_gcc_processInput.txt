endbr64 
push   rbx
lea    rsi,[rip+0x296c]        
lea    rdi,[rip+0x985]        
xor    eax,eax
call   1220 <__isoc99_scanf@plt>
call   1150 <__ctype_toupper_loc@plt>
movsx  rdx,BYTE PTR [rip+0x2951]        
mov    rax,QWORD PTR [rax]
mov    eax,DWORD PTR [rax+rdx*4]
mov    BYTE PTR [rip+0x2945],al        
sub    eax,0x45
cmp    al,0xe
ja     17c0 <processInput+0x100>
lea    rdx,[rip+0xbaf]        
movzx  eax,al
movsxd rax,DWORD PTR [rdx+rax*4]
add    rax,rdx
notrack jmp rax
nop    WORD PTR [rax+rax*1+0x0]
xor    edi,edi
call   1230 <exit@plt>
nop
mov    rax,QWORD PTR [rip+0x2909]        
lea    rcx,[rip+0xfffffffffffffd72]        
mov    QWORD PTR [rax],rcx
pop    rbx
ret    
nop    DWORD PTR [rax+rax*1+0x0]
xor    eax,eax
pop    rbx
jmp    1610 <leaveMessage>
mov    rax,QWORD PTR [rip+0x28e9]        
lea    rbx,[rip+0xfffffffffffffd02]        
lea    rdi,[rip+0x999]        
mov    QWORD PTR [rax],rbx
call   1170 <puts@plt>
lea    rdi,[rip+0xb2c]        
call   1170 <puts@plt>
lea    rdi,[rip+0x99a]        
call   1170 <puts@plt>
mov    rbx,QWORD PTR [rip+0x28b4]        
call   1530 <getsline>
mov    QWORD PTR [rbx+0x8],rax
pop    rbx
ret    
nop    WORD PTR [rax+rax*1+0x0]
mov    rax,QWORD PTR [rip+0x2899]        
lea    rcx,[rip+0xfffffffffffffca2]        
mov    QWORD PTR [rax],rcx
pop    rbx
ret    
nop    DWORD PTR [rax+rax*1+0x0]
mov    rax,QWORD PTR [rip+0x2881]        
test   rax,rax
je     17e0 <processInput+0x120>
lea    rcx,[rip+0xfffffffffffffca5]        
mov    QWORD PTR [rax],rcx
pop    rbx
ret    
lea    rdi,[rip+0x959]        
call   1170 <puts@plt>
mov    edi,0x1
call   1230 <exit@plt>
cs nop WORD PTR [rax+rax*1+0x0]
lea    rdi,[rip+0x8f8]        
pop    rbx
jmp    1170 <puts@plt>