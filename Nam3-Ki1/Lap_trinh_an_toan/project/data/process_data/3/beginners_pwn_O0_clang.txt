
./data/process_data_1/3/beginners_pwn_O0_clang:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd1]        # 3fe0 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <strncmp@plt-0x10>:
    1020:	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	nop    DWORD PTR [rax+0x0]

0000000000001030 <strncmp@plt>:
    1030:	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <strncmp@GLIBC_2.2.5>
    1036:	push   0x0
    103b:	jmp    1020 <_init+0x20>

0000000000001040 <puts@plt>:
    1040:	jmp    QWORD PTR [rip+0x2fda]        # 4020 <puts@GLIBC_2.2.5>
    1046:	push   0x1
    104b:	jmp    1020 <_init+0x20>

0000000000001050 <fread@plt>:
    1050:	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <fread@GLIBC_2.2.5>
    1056:	push   0x2
    105b:	jmp    1020 <_init+0x20>

0000000000001060 <system@plt>:
    1060:	jmp    QWORD PTR [rip+0x2fca]        # 4030 <system@GLIBC_2.2.5>
    1066:	push   0x3
    106b:	jmp    1020 <_init+0x20>

0000000000001070 <memset@plt>:
    1070:	jmp    QWORD PTR [rip+0x2fc2]        # 4038 <memset@GLIBC_2.2.5>
    1076:	push   0x4
    107b:	jmp    1020 <_init+0x20>

0000000000001080 <alarm@plt>:
    1080:	jmp    QWORD PTR [rip+0x2fba]        # 4040 <alarm@GLIBC_2.2.5>
    1086:	push   0x5
    108b:	jmp    1020 <_init+0x20>

0000000000001090 <setvbuf@plt>:
    1090:	jmp    QWORD PTR [rip+0x2fb2]        # 4048 <setvbuf@GLIBC_2.2.5>
    1096:	push   0x6
    109b:	jmp    1020 <_init+0x20>

00000000000010a0 <fopen@plt>:
    10a0:	jmp    QWORD PTR [rip+0x2faa]        # 4050 <fopen@GLIBC_2.2.5>
    10a6:	push   0x7
    10ab:	jmp    1020 <_init+0x20>

00000000000010b0 <__isoc99_scanf@plt>:
    10b0:	jmp    QWORD PTR [rip+0x2fa2]        # 4058 <__isoc99_scanf@GLIBC_2.7>
    10b6:	push   0x8
    10bb:	jmp    1020 <_init+0x20>

00000000000010c0 <exit@plt>:
    10c0:	jmp    QWORD PTR [rip+0x2f9a]        # 4060 <exit@GLIBC_2.2.5>
    10c6:	push   0x9
    10cb:	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000010d0 <__cxa_finalize@plt>:
    10d0:	jmp    QWORD PTR [rip+0x2f1a]        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    10d6:	xchg   ax,ax

Disassembly of section .text:

00000000000010e0 <_start>:
    10e0:	endbr64 
    10e4:	xor    ebp,ebp
    10e6:	mov    r9,rdx
    10e9:	pop    rsi
    10ea:	mov    rdx,rsp
    10ed:	and    rsp,0xfffffffffffffff0
    10f1:	push   rax
    10f2:	push   rsp
    10f3:	xor    r8d,r8d
    10f6:	xor    ecx,ecx
    10f8:	lea    rdi,[rip+0x161]        # 1260 <main>
    10ff:	call   QWORD PTR [rip+0x2ebb]        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1105:	hlt    
    1106:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001110 <deregister_tm_clones>:
    1110:	lea    rdi,[rip+0x2f61]        # 4078 <__TMC_END__>
    1117:	lea    rax,[rip+0x2f5a]        # 4078 <__TMC_END__>
    111e:	cmp    rax,rdi
    1121:	je     1138 <deregister_tm_clones+0x28>
    1123:	mov    rax,QWORD PTR [rip+0x2e9e]        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    112a:	test   rax,rax
    112d:	je     1138 <deregister_tm_clones+0x28>
    112f:	jmp    rax
    1131:	nop    DWORD PTR [rax+0x0]
    1138:	ret    
    1139:	nop    DWORD PTR [rax+0x0]

0000000000001140 <register_tm_clones>:
    1140:	lea    rdi,[rip+0x2f31]        # 4078 <__TMC_END__>
    1147:	lea    rsi,[rip+0x2f2a]        # 4078 <__TMC_END__>
    114e:	sub    rsi,rdi
    1151:	mov    rax,rsi
    1154:	shr    rsi,0x3f
    1158:	sar    rax,0x3
    115c:	add    rsi,rax
    115f:	sar    rsi,1
    1162:	je     1178 <register_tm_clones+0x38>
    1164:	mov    rax,QWORD PTR [rip+0x2e7d]        # 3fe8 <_ITM_registerTMCloneTable@Base>
    116b:	test   rax,rax
    116e:	je     1178 <register_tm_clones+0x38>
    1170:	jmp    rax
    1172:	nop    WORD PTR [rax+rax*1+0x0]
    1178:	ret    
    1179:	nop    DWORD PTR [rax+0x0]

0000000000001180 <__do_global_dtors_aux>:
    1180:	endbr64 
    1184:	cmp    BYTE PTR [rip+0x2eed],0x0        # 4078 <__TMC_END__>
    118b:	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	push   rbp
    118e:	cmp    QWORD PTR [rip+0x2e5a],0x0        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    1196:	mov    rbp,rsp
    1199:	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	mov    rdi,QWORD PTR [rip+0x2ece]        # 4070 <__dso_handle>
    11a2:	call   10d0 <__cxa_finalize@plt>
    11a7:	call   1110 <deregister_tm_clones>
    11ac:	mov    BYTE PTR [rip+0x2ec5],0x1        # 4078 <__TMC_END__>
    11b3:	pop    rbp
    11b4:	ret    
    11b5:	nop    DWORD PTR [rax]
    11b8:	ret    
    11b9:	nop    DWORD PTR [rax+0x0]

00000000000011c0 <frame_dummy>:
    11c0:	endbr64 
    11c4:	jmp    1140 <register_tm_clones>
    11c9:	nop    DWORD PTR [rax+0x0]

00000000000011d0 <win>:
    11d0:	push   rbp
    11d1:	mov    rbp,rsp
    11d4:	lea    rdi,[rip+0xe29]        # 2004 <_IO_stdin_used+0x4>
    11db:	call   1060 <system@plt>
    11e0:	pop    rbp
    11e1:	ret    
    11e2:	cs nop WORD PTR [rax+rax*1+0x0]
    11ec:	nop    DWORD PTR [rax+0x0]

00000000000011f0 <init>:
    11f0:	push   rbp
    11f1:	mov    rbp,rsp
    11f4:	mov    edi,0x3c
    11f9:	call   1080 <alarm@plt>
    11fe:	mov    rax,QWORD PTR [rip+0x2dcb]        # 3fd0 <stdout@GLIBC_2.2.5>
    1205:	mov    rdi,QWORD PTR [rax]
    1208:	xor    eax,eax
    120a:	mov    ecx,eax
    120c:	mov    edx,0x2
    1211:	mov    rsi,rcx
    1214:	call   1090 <setvbuf@plt>
    1219:	mov    rax,QWORD PTR [rip+0x2db8]        # 3fd8 <stdin@GLIBC_2.2.5>
    1220:	mov    rdi,QWORD PTR [rax]
    1223:	xor    eax,eax
    1225:	mov    ecx,eax
    1227:	mov    edx,0x2
    122c:	mov    rsi,rcx
    122f:	call   1090 <setvbuf@plt>
    1234:	mov    rax,QWORD PTR [rip+0x2dbd]        # 3ff8 <stderr@GLIBC_2.2.5>
    123b:	mov    rdi,QWORD PTR [rax]
    123e:	xor    eax,eax
    1240:	mov    ecx,eax
    1242:	mov    edx,0x2
    1247:	mov    rsi,rcx
    124a:	call   1090 <setvbuf@plt>
    124f:	pop    rbp
    1250:	ret    
    1251:	cs nop WORD PTR [rax+rax*1+0x0]
    125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001260 <main>:
    1260:	push   rbp
    1261:	mov    rbp,rsp
    1264:	sub    rsp,0xa0
    126b:	mov    DWORD PTR [rbp-0x4],0x0
    1272:	lea    rdi,[rbp-0x50]
    1276:	xor    esi,esi
    1278:	mov    edx,0x40
    127d:	call   1070 <memset@plt>
    1282:	lea    rdi,[rbp-0x90]
    1289:	xor    esi,esi
    128b:	mov    edx,0x40
    1290:	call   1070 <memset@plt>
    1295:	call   11f0 <init>
    129a:	lea    rdi,[rip+0xd6b]        # 200c <_IO_stdin_used+0xc>
    12a1:	call   1040 <puts@plt>
    12a6:	lea    rdi,[rip+0xd71]        # 201e <_IO_stdin_used+0x1e>
    12ad:	lea    rsi,[rip+0xd71]        # 2025 <_IO_stdin_used+0x25>
    12b4:	call   10a0 <fopen@plt>
    12b9:	mov    QWORD PTR [rbp-0x98],rax
    12c0:	cmp    QWORD PTR [rbp-0x98],0x0
    12c8:	jne    12d8 <main+0x78>
    12ce:	mov    edi,0xffffffff
    12d3:	call   10c0 <exit@plt>
    12d8:	lea    rdi,[rbp-0x90]
    12df:	mov    rcx,QWORD PTR [rbp-0x98]
    12e6:	mov    esi,0x1
    12eb:	mov    edx,0x40
    12f0:	call   1050 <fread@plt>
    12f5:	mov    QWORD PTR [rbp-0xa0],rax
    12fc:	lea    rsi,[rbp-0x50]
    1300:	lea    rdi,[rip+0xd20]        # 2027 <_IO_stdin_used+0x27>
    1307:	mov    al,0x0
    1309:	call   10b0 <__isoc99_scanf@plt>
    130e:	lea    rdi,[rbp-0x50]
    1312:	lea    rsi,[rbp-0x90]
    1319:	mov    rdx,QWORD PTR [rbp-0xa0]
    1320:	call   1030 <strncmp@plt>
    1325:	cmp    eax,0x0
    1328:	jne    1344 <main+0xe4>
    132e:	lea    rdi,[rip+0xcf7]        # 202c <_IO_stdin_used+0x2c>
    1335:	call   1040 <puts@plt>
    133a:	call   11d0 <win>
    133f:	jmp    1350 <main+0xf0>
    1344:	lea    rdi,[rip+0xce5]        # 2030 <_IO_stdin_used+0x30>
    134b:	call   1040 <puts@plt>
    1350:	xor    eax,eax
    1352:	add    rsp,0xa0
    1359:	pop    rbp
    135a:	ret    

Disassembly of section .fini:

000000000000135c <_fini>:
    135c:	endbr64 
    1360:	sub    rsp,0x8
    1364:	add    rsp,0x8
    1368:	ret    
