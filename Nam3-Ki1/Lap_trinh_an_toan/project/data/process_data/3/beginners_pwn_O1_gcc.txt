
./data/process_data_1/3/beginners_pwn_O1_gcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f52]        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f53]        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <_init+0x20>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <_init+0x20>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <_init+0x20>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <_init+0x20>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <_init+0x20>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <_init+0x20>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <_init+0x20>
    109f:	nop
    10a0:	endbr64 
    10a4:	push   0x7
    10a9:	bnd jmp 1020 <_init+0x20>
    10af:	nop
    10b0:	endbr64 
    10b4:	push   0x8
    10b9:	bnd jmp 1020 <_init+0x20>
    10bf:	nop
    10c0:	endbr64 
    10c4:	push   0x9
    10c9:	bnd jmp 1020 <_init+0x20>
    10cf:	nop

Disassembly of section .plt.got:

00000000000010d0 <__cxa_finalize@plt>:
    10d0:	endbr64 
    10d4:	bnd jmp QWORD PTR [rip+0x2f1d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10db:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000010e0 <strncmp@plt>:
    10e0:	endbr64 
    10e4:	bnd jmp QWORD PTR [rip+0x2e9d]        # 3f88 <strncmp@GLIBC_2.2.5>
    10eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010f0 <puts@plt>:
    10f0:	endbr64 
    10f4:	bnd jmp QWORD PTR [rip+0x2e95]        # 3f90 <puts@GLIBC_2.2.5>
    10fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001100 <fread@plt>:
    1100:	endbr64 
    1104:	bnd jmp QWORD PTR [rip+0x2e8d]        # 3f98 <fread@GLIBC_2.2.5>
    110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001110 <__stack_chk_fail@plt>:
    1110:	endbr64 
    1114:	bnd jmp QWORD PTR [rip+0x2e85]        # 3fa0 <__stack_chk_fail@GLIBC_2.4>
    111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <system@plt>:
    1120:	endbr64 
    1124:	bnd jmp QWORD PTR [rip+0x2e7d]        # 3fa8 <system@GLIBC_2.2.5>
    112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001130 <alarm@plt>:
    1130:	endbr64 
    1134:	bnd jmp QWORD PTR [rip+0x2e75]        # 3fb0 <alarm@GLIBC_2.2.5>
    113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001140 <setvbuf@plt>:
    1140:	endbr64 
    1144:	bnd jmp QWORD PTR [rip+0x2e6d]        # 3fb8 <setvbuf@GLIBC_2.2.5>
    114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001150 <fopen@plt>:
    1150:	endbr64 
    1154:	bnd jmp QWORD PTR [rip+0x2e65]        # 3fc0 <fopen@GLIBC_2.2.5>
    115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001160 <__isoc99_scanf@plt>:
    1160:	endbr64 
    1164:	bnd jmp QWORD PTR [rip+0x2e5d]        # 3fc8 <__isoc99_scanf@GLIBC_2.7>
    116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001170 <exit@plt>:
    1170:	endbr64 
    1174:	bnd jmp QWORD PTR [rip+0x2e55]        # 3fd0 <exit@GLIBC_2.2.5>
    117b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001180 <_start>:
    1180:	endbr64 
    1184:	xor    ebp,ebp
    1186:	mov    r9,rdx
    1189:	pop    rsi
    118a:	mov    rdx,rsp
    118d:	and    rsp,0xfffffffffffffff0
    1191:	push   rax
    1192:	push   rsp
    1193:	xor    r8d,r8d
    1196:	xor    ecx,ecx
    1198:	lea    rdi,[rip+0x14b]        # 12ea <main>
    119f:	call   QWORD PTR [rip+0x2e33]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    11a5:	hlt    
    11a6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000011b0 <deregister_tm_clones>:
    11b0:	lea    rdi,[rip+0x2e59]        # 4010 <__TMC_END__>
    11b7:	lea    rax,[rip+0x2e52]        # 4010 <__TMC_END__>
    11be:	cmp    rax,rdi
    11c1:	je     11d8 <deregister_tm_clones+0x28>
    11c3:	mov    rax,QWORD PTR [rip+0x2e16]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    11ca:	test   rax,rax
    11cd:	je     11d8 <deregister_tm_clones+0x28>
    11cf:	jmp    rax
    11d1:	nop    DWORD PTR [rax+0x0]
    11d8:	ret    
    11d9:	nop    DWORD PTR [rax+0x0]

00000000000011e0 <register_tm_clones>:
    11e0:	lea    rdi,[rip+0x2e29]        # 4010 <__TMC_END__>
    11e7:	lea    rsi,[rip+0x2e22]        # 4010 <__TMC_END__>
    11ee:	sub    rsi,rdi
    11f1:	mov    rax,rsi
    11f4:	shr    rsi,0x3f
    11f8:	sar    rax,0x3
    11fc:	add    rsi,rax
    11ff:	sar    rsi,1
    1202:	je     1218 <register_tm_clones+0x38>
    1204:	mov    rax,QWORD PTR [rip+0x2de5]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    120b:	test   rax,rax
    120e:	je     1218 <register_tm_clones+0x38>
    1210:	jmp    rax
    1212:	nop    WORD PTR [rax+rax*1+0x0]
    1218:	ret    
    1219:	nop    DWORD PTR [rax+0x0]

0000000000001220 <__do_global_dtors_aux>:
    1220:	endbr64 
    1224:	cmp    BYTE PTR [rip+0x2e1d],0x0        # 4048 <completed.0>
    122b:	jne    1258 <__do_global_dtors_aux+0x38>
    122d:	push   rbp
    122e:	cmp    QWORD PTR [rip+0x2dc2],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1236:	mov    rbp,rsp
    1239:	je     1247 <__do_global_dtors_aux+0x27>
    123b:	mov    rdi,QWORD PTR [rip+0x2dc6]        # 4008 <__dso_handle>
    1242:	call   10d0 <__cxa_finalize@plt>
    1247:	call   11b0 <deregister_tm_clones>
    124c:	mov    BYTE PTR [rip+0x2df5],0x1        # 4048 <completed.0>
    1253:	pop    rbp
    1254:	ret    
    1255:	nop    DWORD PTR [rax]
    1258:	ret    
    1259:	nop    DWORD PTR [rax+0x0]

0000000000001260 <frame_dummy>:
    1260:	endbr64 
    1264:	jmp    11e0 <register_tm_clones>

0000000000001269 <win>:
    1269:	endbr64 
    126d:	sub    rsp,0x8
    1271:	lea    rdi,[rip+0xd8c]        # 2004 <_IO_stdin_used+0x4>
    1278:	call   1120 <system@plt>
    127d:	add    rsp,0x8
    1281:	ret    

0000000000001282 <init>:
    1282:	endbr64 
    1286:	sub    rsp,0x8
    128a:	mov    edi,0x3c
    128f:	call   1130 <alarm@plt>
    1294:	mov    ecx,0x0
    1299:	mov    edx,0x2
    129e:	mov    esi,0x0
    12a3:	mov    rdi,QWORD PTR [rip+0x2d76]        # 4020 <stdout@GLIBC_2.2.5>
    12aa:	call   1140 <setvbuf@plt>
    12af:	mov    ecx,0x0
    12b4:	mov    edx,0x2
    12b9:	mov    esi,0x0
    12be:	mov    rdi,QWORD PTR [rip+0x2d6b]        # 4030 <stdin@GLIBC_2.2.5>
    12c5:	call   1140 <setvbuf@plt>
    12ca:	mov    ecx,0x0
    12cf:	mov    edx,0x2
    12d4:	mov    esi,0x0
    12d9:	mov    rdi,QWORD PTR [rip+0x2d60]        # 4040 <stderr@GLIBC_2.2.5>
    12e0:	call   1140 <setvbuf@plt>
    12e5:	add    rsp,0x8
    12e9:	ret    

00000000000012ea <main>:
    12ea:	endbr64 
    12ee:	push   r12
    12f0:	push   rbp
    12f1:	push   rbx
    12f2:	sub    rsp,0x90
    12f9:	mov    rax,QWORD PTR fs:0x28
    1302:	mov    QWORD PTR [rsp+0x88],rax
    130a:	xor    eax,eax
    130c:	mov    QWORD PTR [rsp],0x0
    1314:	mov    QWORD PTR [rsp+0x8],0x0
    131d:	mov    QWORD PTR [rsp+0x10],0x0
    1326:	mov    QWORD PTR [rsp+0x18],0x0
    132f:	mov    QWORD PTR [rsp+0x20],0x0
    1338:	mov    QWORD PTR [rsp+0x28],0x0
    1341:	mov    QWORD PTR [rsp+0x30],0x0
    134a:	mov    QWORD PTR [rsp+0x38],0x0
    1353:	mov    QWORD PTR [rsp+0x40],0x0
    135c:	mov    QWORD PTR [rsp+0x48],0x0
    1365:	mov    QWORD PTR [rsp+0x50],0x0
    136e:	mov    QWORD PTR [rsp+0x58],0x0
    1377:	mov    QWORD PTR [rsp+0x60],0x0
    1380:	mov    QWORD PTR [rsp+0x68],0x0
    1389:	mov    QWORD PTR [rsp+0x70],0x0
    1392:	mov    QWORD PTR [rsp+0x78],0x0
    139b:	call   1282 <init>
    13a0:	lea    rdi,[rip+0xc65]        # 200c <_IO_stdin_used+0xc>
    13a7:	call   10f0 <puts@plt>
    13ac:	lea    rsi,[rip+0xc6b]        # 201e <_IO_stdin_used+0x1e>
    13b3:	lea    rdi,[rip+0xc66]        # 2020 <_IO_stdin_used+0x20>
    13ba:	call   1150 <fopen@plt>
    13bf:	test   rax,rax
    13c2:	je     1448 <main+0x15e>
    13c8:	mov    rcx,rax
    13cb:	lea    r12,[rsp+0x40]
    13d0:	mov    edx,0x40
    13d5:	mov    esi,0x1
    13da:	mov    rdi,r12
    13dd:	call   1100 <fread@plt>
    13e2:	mov    rbx,rax
    13e5:	mov    rbp,rsp
    13e8:	mov    rsi,rbp
    13eb:	lea    rdi,[rip+0xc35]        # 2027 <_IO_stdin_used+0x27>
    13f2:	mov    eax,0x0
    13f7:	call   1160 <__isoc99_scanf@plt>
    13fc:	mov    rdx,rbx
    13ff:	mov    rsi,r12
    1402:	mov    rdi,rbp
    1405:	call   10e0 <strncmp@plt>
    140a:	test   eax,eax
    140c:	jne    1452 <main+0x168>
    140e:	lea    rdi,[rip+0xc17]        # 202c <_IO_stdin_used+0x2c>
    1415:	call   10f0 <puts@plt>
    141a:	mov    eax,0x0
    141f:	call   1269 <win>
    1424:	mov    rax,QWORD PTR [rsp+0x88]
    142c:	sub    rax,QWORD PTR fs:0x28
    1435:	jne    1460 <main+0x176>
    1437:	mov    eax,0x0
    143c:	add    rsp,0x90
    1443:	pop    rbx
    1444:	pop    rbp
    1445:	pop    r12
    1447:	ret    
    1448:	mov    edi,0xffffffff
    144d:	call   1170 <exit@plt>
    1452:	lea    rdi,[rip+0xbd7]        # 2030 <_IO_stdin_used+0x30>
    1459:	call   10f0 <puts@plt>
    145e:	jmp    1424 <main+0x13a>
    1460:	call   1110 <__stack_chk_fail@plt>

Disassembly of section .fini:

0000000000001468 <_fini>:
    1468:	endbr64 
    146c:	sub    rsp,0x8
    1470:	add    rsp,0x8
    1474:	ret    
