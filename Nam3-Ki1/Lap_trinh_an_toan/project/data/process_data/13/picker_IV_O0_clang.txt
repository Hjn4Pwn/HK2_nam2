
./data/process_data_1/13/picker_IV_O0_clang:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <fclose@plt-0x10>:
    1020:	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	nop    DWORD PTR [rax+0x0]

0000000000001030 <fclose@plt>:
    1030:	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <fclose@GLIBC_2.2.5>
    1036:	push   0x0
    103b:	jmp    1020 <_init+0x20>

0000000000001040 <printf@plt>:
    1040:	jmp    QWORD PTR [rip+0x2fda]        # 4020 <printf@GLIBC_2.2.5>
    1046:	push   0x1
    104b:	jmp    1020 <_init+0x20>

0000000000001050 <fgetc@plt>:
    1050:	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <fgetc@GLIBC_2.2.5>
    1056:	push   0x2
    105b:	jmp    1020 <_init+0x20>

0000000000001060 <signal@plt>:
    1060:	jmp    QWORD PTR [rip+0x2fca]        # 4030 <signal@GLIBC_2.2.5>
    1066:	push   0x3
    106b:	jmp    1020 <_init+0x20>

0000000000001070 <setvbuf@plt>:
    1070:	jmp    QWORD PTR [rip+0x2fc2]        # 4038 <setvbuf@GLIBC_2.2.5>
    1076:	push   0x4
    107b:	jmp    1020 <_init+0x20>

0000000000001080 <fopen@plt>:
    1080:	jmp    QWORD PTR [rip+0x2fba]        # 4040 <fopen@GLIBC_2.2.5>
    1086:	push   0x5
    108b:	jmp    1020 <_init+0x20>

0000000000001090 <__isoc99_scanf@plt>:
    1090:	jmp    QWORD PTR [rip+0x2fb2]        # 4048 <__isoc99_scanf@GLIBC_2.7>
    1096:	push   0x6
    109b:	jmp    1020 <_init+0x20>

00000000000010a0 <exit@plt>:
    10a0:	jmp    QWORD PTR [rip+0x2faa]        # 4050 <exit@GLIBC_2.2.5>
    10a6:	push   0x7
    10ab:	jmp    1020 <_init+0x20>

00000000000010b0 <sleep@plt>:
    10b0:	jmp    QWORD PTR [rip+0x2fa2]        # 4058 <sleep@GLIBC_2.2.5>
    10b6:	push   0x8
    10bb:	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000010c0 <__cxa_finalize@plt>:
    10c0:	jmp    QWORD PTR [rip+0x2f32]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10c6:	xchg   ax,ax

Disassembly of section .text:

00000000000010d0 <_start>:
    10d0:	endbr64 
    10d4:	xor    ebp,ebp
    10d6:	mov    r9,rdx
    10d9:	pop    rsi
    10da:	mov    rdx,rsp
    10dd:	and    rsp,0xfffffffffffffff0
    10e1:	push   rax
    10e2:	push   rsp
    10e3:	xor    r8d,r8d
    10e6:	xor    ecx,ecx
    10e8:	lea    rdi,[rip+0x1b1]        # 12a0 <main>
    10ef:	call   QWORD PTR [rip+0x2edb]        # 3fd0 <__libc_start_main@GLIBC_2.34>
    10f5:	hlt    
    10f6:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001100 <deregister_tm_clones>:
    1100:	lea    rdi,[rip+0x2f69]        # 4070 <__TMC_END__>
    1107:	lea    rax,[rip+0x2f62]        # 4070 <__TMC_END__>
    110e:	cmp    rax,rdi
    1111:	je     1128 <deregister_tm_clones+0x28>
    1113:	mov    rax,QWORD PTR [rip+0x2ebe]        # 3fd8 <_ITM_deregisterTMCloneTable@Base>
    111a:	test   rax,rax
    111d:	je     1128 <deregister_tm_clones+0x28>
    111f:	jmp    rax
    1121:	nop    DWORD PTR [rax+0x0]
    1128:	ret    
    1129:	nop    DWORD PTR [rax+0x0]

0000000000001130 <register_tm_clones>:
    1130:	lea    rdi,[rip+0x2f39]        # 4070 <__TMC_END__>
    1137:	lea    rsi,[rip+0x2f32]        # 4070 <__TMC_END__>
    113e:	sub    rsi,rdi
    1141:	mov    rax,rsi
    1144:	shr    rsi,0x3f
    1148:	sar    rax,0x3
    114c:	add    rsi,rax
    114f:	sar    rsi,1
    1152:	je     1168 <register_tm_clones+0x38>
    1154:	mov    rax,QWORD PTR [rip+0x2e95]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    115b:	test   rax,rax
    115e:	je     1168 <register_tm_clones+0x38>
    1160:	jmp    rax
    1162:	nop    WORD PTR [rax+rax*1+0x0]
    1168:	ret    
    1169:	nop    DWORD PTR [rax+0x0]

0000000000001170 <__do_global_dtors_aux>:
    1170:	endbr64 
    1174:	cmp    BYTE PTR [rip+0x2ef5],0x0        # 4070 <__TMC_END__>
    117b:	jne    11a8 <__do_global_dtors_aux+0x38>
    117d:	push   rbp
    117e:	cmp    QWORD PTR [rip+0x2e72],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1186:	mov    rbp,rsp
    1189:	je     1197 <__do_global_dtors_aux+0x27>
    118b:	mov    rdi,QWORD PTR [rip+0x2ed6]        # 4068 <__dso_handle>
    1192:	call   10c0 <__cxa_finalize@plt>
    1197:	call   1100 <deregister_tm_clones>
    119c:	mov    BYTE PTR [rip+0x2ecd],0x1        # 4070 <__TMC_END__>
    11a3:	pop    rbp
    11a4:	ret    
    11a5:	nop    DWORD PTR [rax]
    11a8:	ret    
    11a9:	nop    DWORD PTR [rax+0x0]

00000000000011b0 <frame_dummy>:
    11b0:	endbr64 
    11b4:	jmp    1130 <register_tm_clones>
    11b9:	nop    DWORD PTR [rax+0x0]

00000000000011c0 <print_segf_message>:
    11c0:	push   rbp
    11c1:	mov    rbp,rsp
    11c4:	lea    rdi,[rip+0xe39]        # 2004 <_IO_stdin_used+0x4>
    11cb:	mov    al,0x0
    11cd:	call   1040 <printf@plt>
    11d2:	mov    edi,0xf
    11d7:	call   10b0 <sleep@plt>
    11dc:	mov    edi,0xb
    11e1:	call   10a0 <exit@plt>
    11e6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000011f0 <win_IV>:
    11f0:	push   rbp
    11f1:	mov    rbp,rsp
    11f4:	sub    rsp,0x20
    11f8:	lea    rdi,[rip+0xe23]        # 2022 <_IO_stdin_used+0x22>
    11ff:	mov    al,0x0
    1201:	call   1040 <printf@plt>
    1206:	lea    rdi,[rip+0xe1f]        # 202c <_IO_stdin_used+0x2c>
    120d:	lea    rsi,[rip+0xe21]        # 2035 <_IO_stdin_used+0x35>
    1214:	call   1080 <fopen@plt>
    1219:	mov    QWORD PTR [rbp-0x10],rax
    121d:	cmp    QWORD PTR [rbp-0x10],0x0
    1222:	jne    123d <win_IV+0x4d>
    1228:	lea    rdi,[rip+0xe08]        # 2037 <_IO_stdin_used+0x37>
    122f:	mov    al,0x0
    1231:	call   1040 <printf@plt>
    1236:	xor    edi,edi
    1238:	call   10a0 <exit@plt>
    123d:	mov    rdi,QWORD PTR [rbp-0x10]
    1241:	call   1050 <fgetc@plt>
    1246:	mov    BYTE PTR [rbp-0x11],al
    1249:	movsx  eax,BYTE PTR [rbp-0x11]
    124d:	cmp    eax,0xffffffff
    1250:	je     1279 <win_IV+0x89>
    1256:	movsx  esi,BYTE PTR [rbp-0x11]
    125a:	lea    rdi,[rip+0xde9]        # 204a <_IO_stdin_used+0x4a>
    1261:	mov    al,0x0
    1263:	call   1040 <printf@plt>
    1268:	mov    rdi,QWORD PTR [rbp-0x10]
    126c:	call   1050 <fgetc@plt>
    1271:	mov    BYTE PTR [rbp-0x11],al
    1274:	jmp    1249 <win_IV+0x59>
    1279:	lea    rdi,[rip+0xdaa]        # 202a <_IO_stdin_used+0x2a>
    1280:	mov    al,0x0
    1282:	call   1040 <printf@plt>
    1287:	mov    rdi,QWORD PTR [rbp-0x10]
    128b:	call   1030 <fclose@plt>
    1290:	mov    eax,DWORD PTR [rbp-0x4]
    1293:	add    rsp,0x20
    1297:	pop    rbp
    1298:	ret    
    1299:	nop    DWORD PTR [rax+0x0]

00000000000012a0 <main>:
    12a0:	push   rbp
    12a1:	mov    rbp,rsp
    12a4:	sub    rsp,0x10
    12a8:	mov    edi,0xb
    12ad:	lea    rsi,[rip+0xffffffffffffff0c]        # 11c0 <print_segf_message>
    12b4:	call   1060 <signal@plt>
    12b9:	mov    rax,QWORD PTR [rip+0x2d20]        # 3fe0 <stdout@GLIBC_2.2.5>
    12c0:	mov    rdi,QWORD PTR [rax]
    12c3:	xor    eax,eax
    12c5:	mov    ecx,eax
    12c7:	mov    edx,0x2
    12cc:	mov    rsi,rcx
    12cf:	call   1070 <setvbuf@plt>
    12d4:	lea    rdi,[rip+0xd72]        # 204d <_IO_stdin_used+0x4d>
    12db:	mov    al,0x0
    12dd:	call   1040 <printf@plt>
    12e2:	lea    rdi,[rip+0xd9a]        # 2083 <_IO_stdin_used+0x83>
    12e9:	lea    rsi,[rbp-0x4]
    12ed:	mov    al,0x0
    12ef:	call   1090 <__isoc99_scanf@plt>
    12f4:	mov    esi,DWORD PTR [rbp-0x4]
    12f7:	lea    rdi,[rip+0xd88]        # 2086 <_IO_stdin_used+0x86>
    12fe:	mov    al,0x0
    1300:	call   1040 <printf@plt>
    1305:	mov    eax,DWORD PTR [rbp-0x4]
    1308:	mov    QWORD PTR [rbp-0x10],rax
    130c:	call   QWORD PTR [rbp-0x10]
    130f:	xor    eax,eax
    1311:	add    rsp,0x10
    1315:	pop    rbp
    1316:	ret    

Disassembly of section .fini:

0000000000001318 <_fini>:
    1318:	endbr64 
    131c:	sub    rsp,0x8
    1320:	add    rsp,0x8
    1324:	ret    
