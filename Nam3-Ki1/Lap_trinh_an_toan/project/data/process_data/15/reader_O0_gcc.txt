
./data/process_data_1/15/reader_O0_gcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f6a]        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f6b]        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <_init+0x20>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <_init+0x20>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <_init+0x20>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <_init+0x20>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <_init+0x20>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <_init+0x20>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <_init+0x20>
    109f:	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	endbr64 
    10a4:	bnd jmp QWORD PTR [rip+0x2f4d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000010b0 <_exit@plt>:
    10b0:	endbr64 
    10b4:	bnd jmp QWORD PTR [rip+0x2ee5]        # 3fa0 <_exit@GLIBC_2.2.5>
    10bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010c0 <puts@plt>:
    10c0:	endbr64 
    10c4:	bnd jmp QWORD PTR [rip+0x2edd]        # 3fa8 <puts@GLIBC_2.2.5>
    10cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010d0 <__stack_chk_fail@plt>:
    10d0:	endbr64 
    10d4:	bnd jmp QWORD PTR [rip+0x2ed5]        # 3fb0 <__stack_chk_fail@GLIBC_2.4>
    10db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010e0 <printf@plt>:
    10e0:	endbr64 
    10e4:	bnd jmp QWORD PTR [rip+0x2ecd]        # 3fb8 <printf@GLIBC_2.2.5>
    10eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010f0 <read@plt>:
    10f0:	endbr64 
    10f4:	bnd jmp QWORD PTR [rip+0x2ec5]        # 3fc0 <read@GLIBC_2.2.5>
    10fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001100 <getchar@plt>:
    1100:	endbr64 
    1104:	bnd jmp QWORD PTR [rip+0x2ebd]        # 3fc8 <getchar@GLIBC_2.2.5>
    110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001110 <__isoc99_scanf@plt>:
    1110:	endbr64 
    1114:	bnd jmp QWORD PTR [rip+0x2eb5]        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    111b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001120 <_start>:
    1120:	endbr64 
    1124:	xor    ebp,ebp
    1126:	mov    r9,rdx
    1129:	pop    rsi
    112a:	mov    rdx,rsp
    112d:	and    rsp,0xfffffffffffffff0
    1131:	push   rax
    1132:	push   rsp
    1133:	xor    r8d,r8d
    1136:	xor    ecx,ecx
    1138:	lea    rdi,[rip+0x274]        # 13b3 <main>
    113f:	call   QWORD PTR [rip+0x2e93]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1145:	hlt    
    1146:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001150 <deregister_tm_clones>:
    1150:	lea    rdi,[rip+0x2eb9]        # 4010 <__TMC_END__>
    1157:	lea    rax,[rip+0x2eb2]        # 4010 <__TMC_END__>
    115e:	cmp    rax,rdi
    1161:	je     1178 <deregister_tm_clones+0x28>
    1163:	mov    rax,QWORD PTR [rip+0x2e76]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    116a:	test   rax,rax
    116d:	je     1178 <deregister_tm_clones+0x28>
    116f:	jmp    rax
    1171:	nop    DWORD PTR [rax+0x0]
    1178:	ret    
    1179:	nop    DWORD PTR [rax+0x0]

0000000000001180 <register_tm_clones>:
    1180:	lea    rdi,[rip+0x2e89]        # 4010 <__TMC_END__>
    1187:	lea    rsi,[rip+0x2e82]        # 4010 <__TMC_END__>
    118e:	sub    rsi,rdi
    1191:	mov    rax,rsi
    1194:	shr    rsi,0x3f
    1198:	sar    rax,0x3
    119c:	add    rsi,rax
    119f:	sar    rsi,1
    11a2:	je     11b8 <register_tm_clones+0x38>
    11a4:	mov    rax,QWORD PTR [rip+0x2e45]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    11ab:	test   rax,rax
    11ae:	je     11b8 <register_tm_clones+0x38>
    11b0:	jmp    rax
    11b2:	nop    WORD PTR [rax+rax*1+0x0]
    11b8:	ret    
    11b9:	nop    DWORD PTR [rax+0x0]

00000000000011c0 <__do_global_dtors_aux>:
    11c0:	endbr64 
    11c4:	cmp    BYTE PTR [rip+0x2e45],0x0        # 4010 <__TMC_END__>
    11cb:	jne    11f8 <__do_global_dtors_aux+0x38>
    11cd:	push   rbp
    11ce:	cmp    QWORD PTR [rip+0x2e22],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11d6:	mov    rbp,rsp
    11d9:	je     11e7 <__do_global_dtors_aux+0x27>
    11db:	mov    rdi,QWORD PTR [rip+0x2e26]        # 4008 <__dso_handle>
    11e2:	call   10a0 <__cxa_finalize@plt>
    11e7:	call   1150 <deregister_tm_clones>
    11ec:	mov    BYTE PTR [rip+0x2e1d],0x1        # 4010 <__TMC_END__>
    11f3:	pop    rbp
    11f4:	ret    
    11f5:	nop    DWORD PTR [rax]
    11f8:	ret    
    11f9:	nop    DWORD PTR [rax+0x0]

0000000000001200 <frame_dummy>:
    1200:	endbr64 
    1204:	jmp    1180 <register_tm_clones>

0000000000001209 <menu>:
    1209:	endbr64 
    120d:	push   rbp
    120e:	mov    rbp,rsp
    1211:	sub    rsp,0x10
    1215:	mov    rax,QWORD PTR fs:0x28
    121e:	mov    QWORD PTR [rbp-0x8],rax
    1222:	xor    eax,eax
    1224:	lea    rax,[rip+0xddd]        # 2008 <_IO_stdin_used+0x8>
    122b:	mov    rdi,rax
    122e:	call   10c0 <puts@plt>
    1233:	lea    rax,[rip+0xde0]        # 201a <_IO_stdin_used+0x1a>
    123a:	mov    rdi,rax
    123d:	call   10c0 <puts@plt>
    1242:	lea    rax,[rip+0xdd9]        # 2022 <_IO_stdin_used+0x22>
    1249:	mov    rdi,rax
    124c:	call   10c0 <puts@plt>
    1251:	lea    rax,[rip+0xdd2]        # 202a <_IO_stdin_used+0x2a>
    1258:	mov    rdi,rax
    125b:	call   10c0 <puts@plt>
    1260:	lea    rax,[rip+0xdcb]        # 2032 <_IO_stdin_used+0x32>
    1267:	mov    rdi,rax
    126a:	call   10c0 <puts@plt>
    126f:	lea    rax,[rbp-0xc]
    1273:	mov    rsi,rax
    1276:	lea    rax,[rip+0xdd0]        # 204d <_IO_stdin_used+0x4d>
    127d:	mov    rdi,rax
    1280:	mov    eax,0x0
    1285:	call   1110 <__isoc99_scanf@plt>
    128a:	call   1100 <getchar@plt>
    128f:	lea    rax,[rip+0xdba]        # 2050 <_IO_stdin_used+0x50>
    1296:	mov    rdi,rax
    1299:	call   10c0 <puts@plt>
    129e:	mov    eax,DWORD PTR [rbp-0xc]
    12a1:	mov    rdx,QWORD PTR [rbp-0x8]
    12a5:	sub    rdx,QWORD PTR fs:0x28
    12ae:	je     12b5 <menu+0xac>
    12b0:	call   10d0 <__stack_chk_fail@plt>
    12b5:	leave  
    12b6:	ret    

00000000000012b7 <invalid>:
    12b7:	endbr64 
    12bb:	push   rbp
    12bc:	mov    rbp,rsp
    12bf:	sub    rsp,0x10
    12c3:	mov    QWORD PTR [rbp-0x8],rdi
    12c7:	mov    rax,QWORD PTR [rbp-0x8]
    12cb:	mov    rsi,rax
    12ce:	lea    rax,[rip+0xd7c]        # 2051 <_IO_stdin_used+0x51>
    12d5:	mov    rdi,rax
    12d8:	mov    eax,0x0
    12dd:	call   10e0 <printf@plt>
    12e2:	mov    edi,0x1
    12e7:	call   10b0 <_exit@plt>

00000000000012ec <reads>:
    12ec:	endbr64 
    12f0:	push   rbp
    12f1:	mov    rbp,rsp
    12f4:	sub    rsp,0x10
    12f8:	mov    QWORD PTR [rbp-0x8],rdi
    12fc:	lea    rax,[rip+0xd5d]        # 2060 <_IO_stdin_used+0x60>
    1303:	mov    rdi,rax
    1306:	call   10c0 <puts@plt>
    130b:	lea    rax,[rip+0xd76]        # 2088 <_IO_stdin_used+0x88>
    1312:	mov    rdi,rax
    1315:	call   10c0 <puts@plt>
    131a:	mov    eax,DWORD PTR [rip+0x2cf4]        # 4014 <n>
    1320:	add    eax,0x28
    1323:	movsxd rdx,eax
    1326:	mov    rax,QWORD PTR [rbp-0x8]
    132a:	mov    rsi,rax
    132d:	mov    edi,0x0
    1332:	call   10f0 <read@plt>
    1337:	lea    rax,[rip+0xd12]        # 2050 <_IO_stdin_used+0x50>
    133e:	mov    rdi,rax
    1341:	call   10c0 <puts@plt>
    1346:	lea    rax,[rip+0xd5f]        # 20ac <_IO_stdin_used+0xac>
    134d:	mov    rdi,rax
    1350:	call   10c0 <puts@plt>
    1355:	nop
    1356:	leave  
    1357:	ret    

0000000000001358 <show>:
    1358:	endbr64 
    135c:	push   rbp
    135d:	mov    rbp,rsp
    1360:	sub    rsp,0x10
    1364:	mov    QWORD PTR [rbp-0x8],rdi
    1368:	lea    rax,[rip+0xd51]        # 20c0 <_IO_stdin_used+0xc0>
    136f:	mov    rdi,rax
    1372:	call   10c0 <puts@plt>
    1377:	lea    rax,[rip+0xd6c]        # 20ea <_IO_stdin_used+0xea>
    137e:	mov    rdi,rax
    1381:	call   10c0 <puts@plt>
    1386:	mov    rax,QWORD PTR [rbp-0x8]
    138a:	mov    rdi,rax
    138d:	call   10c0 <puts@plt>
    1392:	lea    rax,[rip+0xcb7]        # 2050 <_IO_stdin_used+0x50>
    1399:	mov    rdi,rax
    139c:	call   10c0 <puts@plt>
    13a1:	lea    rax,[rip+0xd59]        # 2101 <_IO_stdin_used+0x101>
    13a8:	mov    rdi,rax
    13ab:	call   10c0 <puts@plt>
    13b0:	nop
    13b1:	leave  
    13b2:	ret    

00000000000013b3 <main>:
    13b3:	endbr64 
    13b7:	push   rbp
    13b8:	mov    rbp,rsp
    13bb:	sub    rsp,0x20
    13bf:	mov    rax,QWORD PTR fs:0x28
    13c8:	mov    QWORD PTR [rbp-0x8],rax
    13cc:	xor    eax,eax
    13ce:	lea    rax,[rip+0xd3b]        # 2110 <_IO_stdin_used+0x110>
    13d5:	mov    rdi,rax
    13d8:	call   10c0 <puts@plt>
    13dd:	lea    rax,[rip+0xd54]        # 2138 <_IO_stdin_used+0x138>
    13e4:	mov    rdi,rax
    13e7:	call   10c0 <puts@plt>
    13ec:	lea    rax,[rip+0x2c21]        # 4014 <n>
    13f3:	mov    rsi,rax
    13f6:	lea    rax,[rip+0xc50]        # 204d <_IO_stdin_used+0x4d>
    13fd:	mov    rdi,rax
    1400:	mov    eax,0x0
    1405:	call   1110 <__isoc99_scanf@plt>
    140a:	lea    rax,[rip+0xc3f]        # 2050 <_IO_stdin_used+0x50>
    1411:	mov    rdi,rax
    1414:	call   10c0 <puts@plt>
    1419:	mov    eax,DWORD PTR [rip+0x2bf5]        # 4014 <n>
    141f:	cdqe   
    1421:	lea    rdx,[rax+0x8]
    1425:	mov    eax,0x10
    142a:	sub    rax,0x1
    142e:	add    rax,rdx
    1431:	mov    esi,0x10
    1436:	mov    edx,0x0
    143b:	div    rsi
    143e:	imul   rax,rax,0x10
    1442:	mov    rcx,rax
    1445:	and    rcx,0xfffffffffffff000
    144c:	mov    rdx,rsp
    144f:	sub    rdx,rcx
    1452:	cmp    rsp,rdx
    1455:	je     1469 <main+0xb6>
    1457:	sub    rsp,0x1000
    145e:	or     QWORD PTR [rsp+0xff8],0x0
    1467:	jmp    1452 <main+0x9f>
    1469:	mov    rdx,rax
    146c:	and    edx,0xfff
    1472:	sub    rsp,rdx
    1475:	mov    rdx,rax
    1478:	and    edx,0xfff
    147e:	test   rdx,rdx
    1481:	je     1493 <main+0xe0>
    1483:	and    eax,0xfff
    1488:	sub    rax,0x8
    148c:	add    rax,rsp
    148f:	or     QWORD PTR [rax],0x0
    1493:	mov    rax,rsp
    1496:	add    rax,0xf
    149a:	shr    rax,0x4
    149e:	shl    rax,0x4
    14a2:	mov    QWORD PTR [rbp-0x10],rax
    14a6:	lea    rax,[rip+0xcac]        # 2159 <_IO_stdin_used+0x159>
    14ad:	mov    rdi,rax
    14b0:	call   10c0 <puts@plt>
    14b5:	mov    DWORD PTR [rbp-0x14],0x0
    14bc:	jmp    1522 <main+0x16f>
    14be:	mov    eax,0x0
    14c3:	call   1209 <menu>
    14c8:	mov    DWORD PTR [rbp-0x14],eax
    14cb:	cmp    DWORD PTR [rbp-0x14],0x3
    14cf:	je     1501 <main+0x14e>
    14d1:	cmp    DWORD PTR [rbp-0x14],0x3
    14d5:	jg     1512 <main+0x15f>
    14d7:	cmp    DWORD PTR [rbp-0x14],0x1
    14db:	je     14e5 <main+0x132>
    14dd:	cmp    DWORD PTR [rbp-0x14],0x2
    14e1:	je     14f3 <main+0x140>
    14e3:	jmp    1512 <main+0x15f>
    14e5:	mov    rax,QWORD PTR [rbp-0x10]
    14e9:	mov    rdi,rax
    14ec:	call   12ec <reads>
    14f1:	jmp    1522 <main+0x16f>
    14f3:	mov    rax,QWORD PTR [rbp-0x10]
    14f7:	mov    rdi,rax
    14fa:	call   1358 <show>
    14ff:	jmp    1522 <main+0x16f>
    1501:	lea    rax,[rip+0xc56]        # 215e <_IO_stdin_used+0x15e>
    1508:	mov    rdi,rax
    150b:	call   10c0 <puts@plt>
    1510:	jmp    1522 <main+0x16f>
    1512:	lea    rax,[rip+0xc4a]        # 2163 <_IO_stdin_used+0x163>
    1519:	mov    rdi,rax
    151c:	call   12b7 <invalid>
    1521:	nop
    1522:	cmp    DWORD PTR [rbp-0x14],0x3
    1526:	jne    14be <main+0x10b>
    1528:	mov    eax,0x0
    152d:	mov    rdx,QWORD PTR [rbp-0x8]
    1531:	sub    rdx,QWORD PTR fs:0x28
    153a:	je     1541 <main+0x18e>
    153c:	call   10d0 <__stack_chk_fail@plt>
    1541:	leave  
    1542:	ret    

Disassembly of section .fini:

0000000000001544 <_fini>:
    1544:	endbr64 
    1548:	sub    rsp,0x8
    154c:	add    rsp,0x8
    1550:	ret    
