
./data/process_data_1/18/RPS_O3_gcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f4a]        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f4b]        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <_init+0x20>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <_init+0x20>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <_init+0x20>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <_init+0x20>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <_init+0x20>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <_init+0x20>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <_init+0x20>
    109f:	nop
    10a0:	endbr64 
    10a4:	push   0x7
    10a9:	bnd jmp 1020 <_init+0x20>
    10af:	nop
    10b0:	endbr64 
    10b4:	push   0x8
    10b9:	bnd jmp 1020 <_init+0x20>
    10bf:	nop
    10c0:	endbr64 
    10c4:	push   0x9
    10c9:	bnd jmp 1020 <_init+0x20>
    10cf:	nop
    10d0:	endbr64 
    10d4:	push   0xa
    10d9:	bnd jmp 1020 <_init+0x20>
    10df:	nop

Disassembly of section .plt.got:

00000000000010e0 <__cxa_finalize@plt>:
    10e0:	endbr64 
    10e4:	bnd jmp QWORD PTR [rip+0x2f0d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000010f0 <puts@plt>:
    10f0:	endbr64 
    10f4:	bnd jmp QWORD PTR [rip+0x2e85]        # 3f80 <puts@GLIBC_2.2.5>
    10fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001100 <__stack_chk_fail@plt>:
    1100:	endbr64 
    1104:	bnd jmp QWORD PTR [rip+0x2e7d]        # 3f88 <__stack_chk_fail@GLIBC_2.4>
    110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001110 <read@plt>:
    1110:	endbr64 
    1114:	bnd jmp QWORD PTR [rip+0x2e75]        # 3f90 <read@GLIBC_2.2.5>
    111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <srand@plt>:
    1120:	endbr64 
    1124:	bnd jmp QWORD PTR [rip+0x2e6d]        # 3f98 <srand@GLIBC_2.2.5>
    112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001130 <strtol@plt>:
    1130:	endbr64 
    1134:	bnd jmp QWORD PTR [rip+0x2e65]        # 3fa0 <strtol@GLIBC_2.2.5>
    113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001140 <time@plt>:
    1140:	endbr64 
    1144:	bnd jmp QWORD PTR [rip+0x2e5d]        # 3fa8 <time@GLIBC_2.2.5>
    114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001150 <select@plt>:
    1150:	endbr64 
    1154:	bnd jmp QWORD PTR [rip+0x2e55]        # 3fb0 <select@GLIBC_2.2.5>
    115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001160 <__printf_chk@plt>:
    1160:	endbr64 
    1164:	bnd jmp QWORD PTR [rip+0x2e4d]        # 3fb8 <__printf_chk@GLIBC_2.3.4>
    116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001170 <exit@plt>:
    1170:	endbr64 
    1174:	bnd jmp QWORD PTR [rip+0x2e45]        # 3fc0 <exit@GLIBC_2.2.5>
    117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001180 <strstr@plt>:
    1180:	endbr64 
    1184:	bnd jmp QWORD PTR [rip+0x2e3d]        # 3fc8 <strstr@GLIBC_2.2.5>
    118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001190 <rand@plt>:
    1190:	endbr64 
    1194:	bnd jmp QWORD PTR [rip+0x2e35]        # 3fd0 <rand@GLIBC_2.2.5>
    119b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000011a0 <main>:
    11a0:	endbr64 
    11a4:	push   r15
    11a6:	lea    rdi,[rip+0x1063]        # 2210 <_IO_stdin_used+0x210>
    11ad:	lea    r15,[rip+0xf21]        # 20d5 <_IO_stdin_used+0xd5>
    11b4:	push   r14
    11b6:	lea    r14,[rip+0xea0]        # 205d <_IO_stdin_used+0x5d>
    11bd:	push   r13
    11bf:	lea    r13,[rip+0xf35]        # 20fb <_IO_stdin_used+0xfb>
    11c6:	push   r12
    11c8:	lea    r12,[rip+0xeb4]        # 2083 <_IO_stdin_used+0x83>
    11cf:	push   rbp
    11d0:	lea    rbp,[rip+0xec4]        # 209b <_IO_stdin_used+0x9b>
    11d7:	push   rbx
    11d8:	sub    rsp,0x18
    11dc:	mov    rax,QWORD PTR fs:0x28
    11e5:	mov    QWORD PTR [rsp+0x8],rax
    11ea:	xor    eax,eax
    11ec:	xor    eax,eax
    11ee:	mov    BYTE PTR [rsp+0x7],0x0
    11f3:	lea    rbx,[rsp+0x5]
    11f8:	mov    WORD PTR [rsp+0x5],ax
    11fd:	call   10f0 <puts@plt>
    1202:	lea    rdi,[rip+0x103f]        # 2248 <_IO_stdin_used+0x248>
    1209:	call   10f0 <puts@plt>
    120e:	lea    rdi,[rip+0xe5f]        # 2074 <_IO_stdin_used+0x74>
    1215:	call   10f0 <puts@plt>
    121a:	nop    WORD PTR [rax+rax*1+0x0]
    1220:	mov    rdi,r12
    1223:	call   10f0 <puts@plt>
    1228:	mov    rdi,rbp
    122b:	call   10f0 <puts@plt>
    1230:	mov    esi,0x3
    1235:	mov    rdi,rbx
    1238:	call   1410 <tgetinput.part.0>
    123d:	cmp    eax,0xfffffffd
    1240:	je     12e7 <main+0x147>
    1246:	xor    esi,esi
    1248:	mov    edx,0xa
    124d:	mov    rdi,rbx
    1250:	call   1130 <strtol@plt>
    1255:	test   eax,eax
    1257:	je     1278 <main+0xd8>
    1259:	cmp    eax,0x1
    125c:	je     1290 <main+0xf0>
    125e:	cmp    eax,0x2
    1261:	je     12fa <main+0x15a>
    1267:	mov    rdi,r13
    126a:	call   10f0 <puts@plt>
    126f:	jmp    1220 <main+0x80>
    1271:	nop    DWORD PTR [rax+0x0]
    1278:	lea    rdi,[rip+0xe39]        # 20b8 <_IO_stdin_used+0xb8>
    127f:	call   10f0 <puts@plt>
    1284:	jmp    1220 <main+0x80>
    1286:	cs nop WORD PTR [rax+rax*1+0x0]
    1290:	mov    rdi,r14
    1293:	call   10f0 <puts@plt>
    1298:	xor    eax,eax
    129a:	call   1530 <play>
    129f:	test   al,al
    12a1:	je     12d8 <main+0x138>
    12a3:	mov    eax,DWORD PTR [rip+0x2da3]        # 404c <wins>
    12a9:	add    eax,0x1
    12ac:	mov    DWORD PTR [rip+0x2d9a],eax        # 404c <wins>
    12b2:	cmp    eax,0x4
    12b5:	jle    1220 <main+0x80>
    12bb:	mov    rdi,r15
    12be:	call   10f0 <puts@plt>
    12c3:	lea    rdi,[rip+0xe26]        # 20f0 <_IO_stdin_used+0xf0>
    12ca:	call   10f0 <puts@plt>
    12cf:	jmp    1220 <main+0x80>
    12d4:	nop    DWORD PTR [rax+0x0]
    12d8:	mov    DWORD PTR [rip+0x2d6a],0x0        # 404c <wins>
    12e2:	jmp    1220 <main+0x80>
    12e7:	lea    rdi,[rip+0xd3f]        # 202d <_IO_stdin_used+0x2d>
    12ee:	call   10f0 <puts@plt>
    12f3:	xor    edi,edi
    12f5:	call   1170 <exit@plt>
    12fa:	mov    rax,QWORD PTR [rsp+0x8]
    12ff:	sub    rax,QWORD PTR fs:0x28
    1308:	jne    131b <main+0x17b>
    130a:	add    rsp,0x18
    130e:	xor    eax,eax
    1310:	pop    rbx
    1311:	pop    rbp
    1312:	pop    r12
    1314:	pop    r13
    1316:	pop    r14
    1318:	pop    r15
    131a:	ret    
    131b:	call   1100 <__stack_chk_fail@plt>

0000000000001320 <_start>:
    1320:	endbr64 
    1324:	xor    ebp,ebp
    1326:	mov    r9,rdx
    1329:	pop    rsi
    132a:	mov    rdx,rsp
    132d:	and    rsp,0xfffffffffffffff0
    1331:	push   rax
    1332:	push   rsp
    1333:	xor    r8d,r8d
    1336:	xor    ecx,ecx
    1338:	lea    rdi,[rip+0xfffffffffffffe61]        # 11a0 <main>
    133f:	call   QWORD PTR [rip+0x2c93]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1345:	hlt    
    1346:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001350 <deregister_tm_clones>:
    1350:	lea    rdi,[rip+0x2cf1]        # 4048 <__TMC_END__>
    1357:	lea    rax,[rip+0x2cea]        # 4048 <__TMC_END__>
    135e:	cmp    rax,rdi
    1361:	je     1378 <deregister_tm_clones+0x28>
    1363:	mov    rax,QWORD PTR [rip+0x2c76]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    136a:	test   rax,rax
    136d:	je     1378 <deregister_tm_clones+0x28>
    136f:	jmp    rax
    1371:	nop    DWORD PTR [rax+0x0]
    1378:	ret    
    1379:	nop    DWORD PTR [rax+0x0]

0000000000001380 <register_tm_clones>:
    1380:	lea    rdi,[rip+0x2cc1]        # 4048 <__TMC_END__>
    1387:	lea    rsi,[rip+0x2cba]        # 4048 <__TMC_END__>
    138e:	sub    rsi,rdi
    1391:	mov    rax,rsi
    1394:	shr    rsi,0x3f
    1398:	sar    rax,0x3
    139c:	add    rsi,rax
    139f:	sar    rsi,1
    13a2:	je     13b8 <register_tm_clones+0x38>
    13a4:	mov    rax,QWORD PTR [rip+0x2c45]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    13ab:	test   rax,rax
    13ae:	je     13b8 <register_tm_clones+0x38>
    13b0:	jmp    rax
    13b2:	nop    WORD PTR [rax+rax*1+0x0]
    13b8:	ret    
    13b9:	nop    DWORD PTR [rax+0x0]

00000000000013c0 <__do_global_dtors_aux>:
    13c0:	endbr64 
    13c4:	cmp    BYTE PTR [rip+0x2c7d],0x0        # 4048 <__TMC_END__>
    13cb:	jne    13f8 <__do_global_dtors_aux+0x38>
    13cd:	push   rbp
    13ce:	cmp    QWORD PTR [rip+0x2c22],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    13d6:	mov    rbp,rsp
    13d9:	je     13e7 <__do_global_dtors_aux+0x27>
    13db:	mov    rdi,QWORD PTR [rip+0x2c26]        # 4008 <__dso_handle>
    13e2:	call   10e0 <__cxa_finalize@plt>
    13e7:	call   1350 <deregister_tm_clones>
    13ec:	mov    BYTE PTR [rip+0x2c55],0x1        # 4048 <__TMC_END__>
    13f3:	pop    rbp
    13f4:	ret    
    13f5:	nop    DWORD PTR [rax]
    13f8:	ret    
    13f9:	nop    DWORD PTR [rax+0x0]

0000000000001400 <frame_dummy>:
    1400:	endbr64 
    1404:	jmp    1380 <register_tm_clones>
    1409:	nop    DWORD PTR [rax+0x0]

0000000000001410 <tgetinput.part.0>:
    1410:	push   r12
    1412:	mov    ecx,0xf
    1417:	push   rbp
    1418:	mov    ebp,esi
    141a:	push   rbx
    141b:	mov    rbx,rdi
    141e:	sub    rsp,0xa0
    1425:	movdqa xmm0,XMMWORD PTR [rip+0xe73]        # 22a0 <_IO_stdin_used+0x2a0>
    142d:	mov    rax,QWORD PTR fs:0x28
    1436:	mov    QWORD PTR [rsp+0x98],rax
    143e:	xor    eax,eax
    1440:	lea    rdx,[rsp+0x18]
    1445:	lea    rsi,[rsp+0x10]
    144a:	mov    r8,rsp
    144d:	mov    rdi,rdx
    1450:	xor    edx,edx
    1452:	movaps XMMWORD PTR [rsp],xmm0
    1456:	mov    QWORD PTR [rsp+0x10],0x1
    145f:	rep stos QWORD PTR es:[rdi],rax
    1462:	mov    edi,0x1
    1467:	call   1150 <select@plt>
    146c:	mov    r12d,eax
    146f:	cmp    eax,0xffffffff
    1472:	je     14eb <tgetinput.part.0+0xdb>
    1474:	test   eax,eax
    1476:	je     14d7 <tgetinput.part.0+0xc7>
    1478:	lea    edx,[rbp-0x1]
    147b:	xor    edi,edi
    147d:	mov    rsi,rbx
    1480:	call   1110 <read@plt>
    1485:	movsxd rcx,eax
    1488:	mov    edx,eax
    148a:	lea    rcx,[rbx+rcx*1-0x1]
    148f:	cmp    BYTE PTR [rcx],0xa
    1492:	jne    149a <tgetinput.part.0+0x8a>
    1494:	mov    BYTE PTR [rcx],0x0
    1497:	lea    edx,[rax-0x1]
    149a:	test   edx,edx
    149c:	je     14c3 <tgetinput.part.0+0xb3>
    149e:	xor    r12d,r12d
    14a1:	mov    rax,QWORD PTR [rsp+0x98]
    14a9:	sub    rax,QWORD PTR fs:0x28
    14b2:	jne    14f9 <tgetinput.part.0+0xe9>
    14b4:	add    rsp,0xa0
    14bb:	mov    eax,r12d
    14be:	pop    rbx
    14bf:	pop    rbp
    14c0:	pop    r12
    14c2:	ret    
    14c3:	lea    rdi,[rip+0xb54]        # 201e <_IO_stdin_used+0x1e>
    14ca:	mov    r12d,0xfffffffc
    14d0:	call   10f0 <puts@plt>
    14d5:	jmp    14a1 <tgetinput.part.0+0x91>
    14d7:	lea    rdi,[rip+0xc52]        # 2130 <_IO_stdin_used+0x130>
    14de:	mov    r12d,0xfffffffd
    14e4:	call   10f0 <puts@plt>
    14e9:	jmp    14a1 <tgetinput.part.0+0x91>
    14eb:	lea    rdi,[rip+0xb12]        # 2004 <_IO_stdin_used+0x4>
    14f2:	call   10f0 <puts@plt>
    14f7:	jmp    14a1 <tgetinput.part.0+0x91>
    14f9:	call   1100 <__stack_chk_fail@plt>
    14fe:	xchg   ax,ax

0000000000001500 <tgetinput>:
    1500:	endbr64 
    1504:	test   esi,esi
    1506:	je     150d <tgetinput+0xd>
    1508:	jmp    1410 <tgetinput.part.0>
    150d:	sub    rsp,0x8
    1511:	lea    rdi,[rip+0xc58]        # 2170 <_IO_stdin_used+0x170>
    1518:	call   10f0 <puts@plt>
    151d:	mov    eax,0xfffffffe
    1522:	add    rsp,0x8
    1526:	ret    
    1527:	nop    WORD PTR [rax+rax*1+0x0]

0000000000001530 <play>:
    1530:	endbr64 
    1534:	push   rbp
    1535:	xor    edi,edi
    1537:	push   rbx
    1538:	sub    rsp,0x78
    153c:	mov    rax,QWORD PTR fs:0x28
    1545:	mov    QWORD PTR [rsp+0x68],rax
    154a:	xor    eax,eax
    154c:	mov    rbp,rsp
    154f:	call   1140 <time@plt>
    1554:	mov    edi,eax
    1556:	call   1120 <srand@plt>
    155b:	lea    rdi,[rip+0xc3e]        # 21a0 <_IO_stdin_used+0x1a0>
    1562:	call   10f0 <puts@plt>
    1567:	mov    esi,0x64
    156c:	mov    rdi,rbp
    156f:	call   1410 <tgetinput.part.0>
    1574:	cmp    eax,0xfffffffd
    1577:	je     1610 <play+0xe0>
    157d:	call   1190 <rand@plt>
    1582:	lea    rsi,[rip+0xaad]        # 2036 <_IO_stdin_used+0x36>
    1589:	mov    edi,0x1
    158e:	movsxd rbx,eax
    1591:	cdq    
    1592:	imul   rbx,rbx,0x55555556
    1599:	shr    rbx,0x20
    159d:	sub    ebx,edx
    159f:	lea    edx,[rbx+rbx*2]
    15a2:	sub    eax,edx
    15a4:	mov    rdx,rbp
    15a7:	movsxd rbx,eax
    15aa:	xor    eax,eax
    15ac:	call   1160 <__printf_chk@plt>
    15b1:	lea    rax,[rip+0x2a78]        # 4030 <hands>
    15b8:	mov    edi,0x1
    15bd:	lea    rsi,[rip+0xa82]        # 2046 <_IO_stdin_used+0x46>
    15c4:	mov    rdx,QWORD PTR [rax+rbx*8]
    15c8:	xor    eax,eax
    15ca:	call   1160 <__printf_chk@plt>
    15cf:	lea    rax,[rip+0x2a3a]        # 4010 <loses>
    15d6:	mov    rdi,rbp
    15d9:	mov    rsi,QWORD PTR [rax+rbx*8]
    15dd:	call   1180 <strstr@plt>
    15e2:	test   rax,rax
    15e5:	je     1628 <play+0xf8>
    15e7:	lea    rdi,[rip+0xa71]        # 205f <_IO_stdin_used+0x5f>
    15ee:	call   10f0 <puts@plt>
    15f3:	mov    eax,0x1
    15f8:	mov    rdx,QWORD PTR [rsp+0x68]
    15fd:	sub    rdx,QWORD PTR fs:0x28
    1606:	jne    1638 <play+0x108>
    1608:	add    rsp,0x78
    160c:	pop    rbx
    160d:	pop    rbp
    160e:	ret    
    160f:	nop
    1610:	lea    rdi,[rip+0xa16]        # 202d <_IO_stdin_used+0x2d>
    1617:	call   10f0 <puts@plt>
    161c:	xor    edi,edi
    161e:	call   1170 <exit@plt>
    1623:	nop    DWORD PTR [rax+rax*1+0x0]
    1628:	lea    rdi,[rip+0xba9]        # 21d8 <_IO_stdin_used+0x1d8>
    162f:	call   10f0 <puts@plt>
    1634:	xor    eax,eax
    1636:	jmp    15f8 <play+0xc8>
    1638:	call   1100 <__stack_chk_fail@plt>

Disassembly of section .fini:

0000000000001640 <_fini>:
    1640:	endbr64 
    1644:	sub    rsp,0x8
    1648:	add    rsp,0x8
    164c:	ret    
