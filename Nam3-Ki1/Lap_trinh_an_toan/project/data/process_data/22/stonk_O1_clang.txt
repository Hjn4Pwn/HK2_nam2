
./data/process_data_1/22/stonk_O1_clang:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <free@plt-0x10>:
    1020:	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	nop    DWORD PTR [rax+0x0]

0000000000001030 <free@plt>:
    1030:	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <free@GLIBC_2.2.5>
    1036:	push   0x0
    103b:	jmp    1020 <_init+0x20>

0000000000001040 <puts@plt>:
    1040:	jmp    QWORD PTR [rip+0x2fda]        # 4020 <puts@GLIBC_2.2.5>
    1046:	push   0x1
    104b:	jmp    1020 <_init+0x20>

0000000000001050 <setbuf@plt>:
    1050:	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <setbuf@GLIBC_2.2.5>
    1056:	push   0x2
    105b:	jmp    1020 <_init+0x20>

0000000000001060 <system@plt>:
    1060:	jmp    QWORD PTR [rip+0x2fca]        # 4030 <system@GLIBC_2.2.5>
    1066:	push   0x3
    106b:	jmp    1020 <_init+0x20>

0000000000001070 <printf@plt>:
    1070:	jmp    QWORD PTR [rip+0x2fc2]        # 4038 <printf@GLIBC_2.2.5>
    1076:	push   0x4
    107b:	jmp    1020 <_init+0x20>

0000000000001080 <srand@plt>:
    1080:	jmp    QWORD PTR [rip+0x2fba]        # 4040 <srand@GLIBC_2.2.5>
    1086:	push   0x5
    108b:	jmp    1020 <_init+0x20>

0000000000001090 <fgets@plt>:
    1090:	jmp    QWORD PTR [rip+0x2fb2]        # 4048 <fgets@GLIBC_2.2.5>
    1096:	push   0x6
    109b:	jmp    1020 <_init+0x20>

00000000000010a0 <time@plt>:
    10a0:	jmp    QWORD PTR [rip+0x2faa]        # 4050 <time@GLIBC_2.2.5>
    10a6:	push   0x7
    10ab:	jmp    1020 <_init+0x20>

00000000000010b0 <malloc@plt>:
    10b0:	jmp    QWORD PTR [rip+0x2fa2]        # 4058 <malloc@GLIBC_2.2.5>
    10b6:	push   0x8
    10bb:	jmp    1020 <_init+0x20>

00000000000010c0 <fflush@plt>:
    10c0:	jmp    QWORD PTR [rip+0x2f9a]        # 4060 <fflush@GLIBC_2.2.5>
    10c6:	push   0x9
    10cb:	jmp    1020 <_init+0x20>

00000000000010d0 <fopen@plt>:
    10d0:	jmp    QWORD PTR [rip+0x2f92]        # 4068 <fopen@GLIBC_2.2.5>
    10d6:	push   0xa
    10db:	jmp    1020 <_init+0x20>

00000000000010e0 <__isoc99_scanf@plt>:
    10e0:	jmp    QWORD PTR [rip+0x2f8a]        # 4070 <__isoc99_scanf@GLIBC_2.7>
    10e6:	push   0xb
    10eb:	jmp    1020 <_init+0x20>

00000000000010f0 <exit@plt>:
    10f0:	jmp    QWORD PTR [rip+0x2f82]        # 4078 <exit@GLIBC_2.2.5>
    10f6:	push   0xc
    10fb:	jmp    1020 <_init+0x20>

0000000000001100 <rand@plt>:
    1100:	jmp    QWORD PTR [rip+0x2f7a]        # 4080 <rand@GLIBC_2.2.5>
    1106:	push   0xd
    110b:	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001110 <__cxa_finalize@plt>:
    1110:	jmp    QWORD PTR [rip+0x2ee2]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1116:	xchg   ax,ax

Disassembly of section .text:

0000000000001120 <_start>:
    1120:	endbr64 
    1124:	xor    ebp,ebp
    1126:	mov    r9,rdx
    1129:	pop    rsi
    112a:	mov    rdx,rsp
    112d:	and    rsp,0xfffffffffffffff0
    1131:	push   rax
    1132:	push   rsp
    1133:	xor    r8d,r8d
    1136:	xor    ecx,ecx
    1138:	lea    rdi,[rip+0x441]        # 1580 <main>
    113f:	call   QWORD PTR [rip+0x2e8b]        # 3fd0 <__libc_start_main@GLIBC_2.34>
    1145:	hlt    
    1146:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001150 <deregister_tm_clones>:
    1150:	lea    rdi,[rip+0x2f41]        # 4098 <__TMC_END__>
    1157:	lea    rax,[rip+0x2f3a]        # 4098 <__TMC_END__>
    115e:	cmp    rax,rdi
    1161:	je     1178 <deregister_tm_clones+0x28>
    1163:	mov    rax,QWORD PTR [rip+0x2e6e]        # 3fd8 <_ITM_deregisterTMCloneTable@Base>
    116a:	test   rax,rax
    116d:	je     1178 <deregister_tm_clones+0x28>
    116f:	jmp    rax
    1171:	nop    DWORD PTR [rax+0x0]
    1178:	ret    
    1179:	nop    DWORD PTR [rax+0x0]

0000000000001180 <register_tm_clones>:
    1180:	lea    rdi,[rip+0x2f11]        # 4098 <__TMC_END__>
    1187:	lea    rsi,[rip+0x2f0a]        # 4098 <__TMC_END__>
    118e:	sub    rsi,rdi
    1191:	mov    rax,rsi
    1194:	shr    rsi,0x3f
    1198:	sar    rax,0x3
    119c:	add    rsi,rax
    119f:	sar    rsi,1
    11a2:	je     11b8 <register_tm_clones+0x38>
    11a4:	mov    rax,QWORD PTR [rip+0x2e45]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    11ab:	test   rax,rax
    11ae:	je     11b8 <register_tm_clones+0x38>
    11b0:	jmp    rax
    11b2:	nop    WORD PTR [rax+rax*1+0x0]
    11b8:	ret    
    11b9:	nop    DWORD PTR [rax+0x0]

00000000000011c0 <__do_global_dtors_aux>:
    11c0:	endbr64 
    11c4:	cmp    BYTE PTR [rip+0x2ecd],0x0        # 4098 <__TMC_END__>
    11cb:	jne    11f8 <__do_global_dtors_aux+0x38>
    11cd:	push   rbp
    11ce:	cmp    QWORD PTR [rip+0x2e22],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11d6:	mov    rbp,rsp
    11d9:	je     11e7 <__do_global_dtors_aux+0x27>
    11db:	mov    rdi,QWORD PTR [rip+0x2eae]        # 4090 <__dso_handle>
    11e2:	call   1110 <__cxa_finalize@plt>
    11e7:	call   1150 <deregister_tm_clones>
    11ec:	mov    BYTE PTR [rip+0x2ea5],0x1        # 4098 <__TMC_END__>
    11f3:	pop    rbp
    11f4:	ret    
    11f5:	nop    DWORD PTR [rax]
    11f8:	ret    
    11f9:	nop    DWORD PTR [rax+0x0]

0000000000001200 <frame_dummy>:
    1200:	endbr64 
    1204:	jmp    1180 <register_tm_clones>
    1209:	nop    DWORD PTR [rax+0x0]

0000000000001210 <view_portfolio>:
    1210:	push   rbp
    1211:	push   r14
    1213:	push   rbx
    1214:	test   rdi,rdi
    1217:	je     128b <view_portfolio+0x7b>
    1219:	mov    r14,rdi
    121c:	lea    rdi,[rip+0xde1]        # 2004 <_IO_stdin_used+0x4>
    1223:	xor    ebp,ebp
    1225:	xor    eax,eax
    1227:	call   1070 <printf@plt>
    122c:	mov    rbx,QWORD PTR [rip+0x2dad]        # 3fe0 <stdout@GLIBC_2.2.5>
    1233:	mov    rdi,QWORD PTR [rbx]
    1236:	call   10c0 <fflush@plt>
    123b:	lea    rdi,[rip+0xdd4]        # 2016 <_IO_stdin_used+0x16>
    1242:	call   1060 <system@plt>
    1247:	mov    rdi,QWORD PTR [rbx]
    124a:	call   10c0 <fflush@plt>
    124f:	lea    rdi,[rip+0xec0]        # 2116 <_IO_stdin_used+0x116>
    1256:	call   1040 <puts@plt>
    125b:	mov    rbx,QWORD PTR [r14+0x8]
    125f:	test   rbx,rbx
    1262:	je     1292 <view_portfolio+0x82>
    1264:	lea    r14,[rip+0xdb0]        # 201b <_IO_stdin_used+0x1b>
    126b:	xor    ebp,ebp
    126d:	nop    DWORD PTR [rax]
    1270:	mov    esi,DWORD PTR [rbx]
    1272:	lea    rdx,[rbx+0x4]
    1276:	mov    rdi,r14
    1279:	xor    eax,eax
    127b:	call   1070 <printf@plt>
    1280:	mov    rbx,QWORD PTR [rbx+0x10]
    1284:	test   rbx,rbx
    1287:	jne    1270 <view_portfolio+0x60>
    1289:	jmp    129e <view_portfolio+0x8e>
    128b:	mov    ebp,0x1
    1290:	jmp    129e <view_portfolio+0x8e>
    1292:	lea    rdi,[rip+0xda2]        # 203b <_IO_stdin_used+0x3b>
    1299:	call   1040 <puts@plt>
    129e:	mov    eax,ebp
    12a0:	pop    rbx
    12a1:	pop    r14
    12a3:	pop    rbp
    12a4:	ret    
    12a5:	cs nop WORD PTR [rax+rax*1+0x0]
    12af:	nop

00000000000012b0 <pick_symbol_with_AI>:
    12b0:	push   rbp
    12b1:	push   r14
    12b3:	push   rbx
    12b4:	test   edi,edi
    12b6:	jle    1339 <pick_symbol_with_AI+0x89>
    12bc:	mov    ebp,edi
    12be:	mov    edi,0x18
    12c3:	call   10b0 <malloc@plt>
    12c8:	mov    r14,rax
    12cb:	mov    DWORD PTR [rax],ebp
    12cd:	call   1100 <rand@plt>
    12d2:	lea    ecx,[rax+0x3]
    12d5:	test   eax,eax
    12d7:	cmovns ecx,eax
    12da:	and    ecx,0xfffffffc
    12dd:	sub    eax,ecx
    12df:	movsxd rbp,eax
    12e2:	xor    ebx,ebx
    12e4:	jmp    1326 <pick_symbol_with_AI+0x76>
    12e6:	cs nop WORD PTR [rax+rax*1+0x0]
    12f0:	call   1100 <rand@plt>
    12f5:	cdqe   
    12f7:	imul   rcx,rax,0x4ec4ec4f
    12fe:	mov    rdx,rcx
    1301:	shr    rdx,0x3f
    1305:	shr    rcx,0x23
    1309:	add    ecx,edx
    130b:	lea    edx,[rcx+rcx*4]
    130e:	lea    edx,[rdx+rdx*4]
    1311:	add    edx,ecx
    1313:	sub    eax,edx
    1315:	add    al,0x41
    1317:	mov    BYTE PTR [r14+rbx*1+0x4],al
    131c:	add    rbx,0x1
    1320:	cmp    rbx,0x5
    1324:	je     132f <pick_symbol_with_AI+0x7f>
    1326:	cmp    rbx,rbp
    1329:	jle    12f0 <pick_symbol_with_AI+0x40>
    132b:	xor    eax,eax
    132d:	jmp    1317 <pick_symbol_with_AI+0x67>
    132f:	mov    QWORD PTR [r14+0x10],0x0
    1337:	jmp    133c <pick_symbol_with_AI+0x8c>
    1339:	xor    r14d,r14d
    133c:	mov    rax,r14
    133f:	pop    rbx
    1340:	pop    r14
    1342:	pop    rbp
    1343:	ret    
    1344:	cs nop WORD PTR [rax+rax*1+0x0]
    134e:	xchg   ax,ax

0000000000001350 <buy_stonks>:
    1350:	push   rbp
    1351:	push   r15
    1353:	push   r14
    1355:	push   r13
    1357:	push   r12
    1359:	push   rbx
    135a:	sub    rsp,0x88
    1361:	test   rdi,rdi
    1364:	je     14b3 <buy_stonks+0x163>
    136a:	mov    r14,rdi
    136d:	lea    rdi,[rip+0xcb8]        # 202c <_IO_stdin_used+0x2c>
    1374:	lea    rsi,[rip+0xcb5]        # 2030 <_IO_stdin_used+0x30>
    137b:	call   10d0 <fopen@plt>
    1380:	test   rax,rax
    1383:	je     14cc <buy_stonks+0x17c>
    1389:	mov    rdi,rsp
    138c:	mov    esi,0x80
    1391:	mov    rdx,rax
    1394:	call   1090 <fgets@plt>
    1399:	mov    r12d,DWORD PTR [r14]
    139c:	lea    rdi,[rip+0xcd9]        # 207c <_IO_stdin_used+0x7c>
    13a3:	call   1040 <puts@plt>
    13a8:	test   r12d,r12d
    13ab:	jg     1429 <buy_stonks+0xd9>
    13ad:	lea    rdi,[rip+0xcf3]        # 20a7 <_IO_stdin_used+0xa7>
    13b4:	call   1040 <puts@plt>
    13b9:	mov    edi,0x12d
    13be:	call   10b0 <malloc@plt>
    13c3:	mov    rbp,rax
    13c6:	lea    rdi,[rip+0xce8]        # 20b5 <_IO_stdin_used+0xb5>
    13cd:	call   1040 <puts@plt>
    13d2:	lea    rdi,[rip+0xc59]        # 2032 <_IO_stdin_used+0x32>
    13d9:	xor    ebx,ebx
    13db:	mov    rsi,rbp
    13de:	xor    eax,eax
    13e0:	call   10e0 <__isoc99_scanf@plt>
    13e5:	lea    rdi,[rip+0xce1]        # 20cd <_IO_stdin_used+0xcd>
    13ec:	call   1040 <puts@plt>
    13f1:	mov    rdi,rbp
    13f4:	xor    eax,eax
    13f6:	call   1070 <printf@plt>
    13fb:	mov    rdi,r14
    13fe:	call   1210 <view_portfolio>
    1403:	jmp    14b8 <buy_stonks+0x168>
    1408:	nop    DWORD PTR [rax+rax*1+0x0]
    1410:	mov    QWORD PTR [r13+0x10],0x0
    1418:	mov    rax,QWORD PTR [r14+0x8]
    141c:	mov    QWORD PTR [r13+0x10],rax
    1420:	mov    QWORD PTR [r14+0x8],r13
    1424:	sub    r12d,r15d
    1427:	jle    13ad <buy_stonks+0x5d>
    1429:	call   1100 <rand@plt>
    142e:	cdq    
    142f:	idiv   r12d
    1432:	mov    r15d,edx
    1435:	add    r15d,0x1
    1439:	mov    edi,0x18
    143e:	call   10b0 <malloc@plt>
    1443:	mov    r13,rax
    1446:	mov    DWORD PTR [rax],r15d
    1449:	call   1100 <rand@plt>
    144e:	lea    ecx,[rax+0x3]
    1451:	test   eax,eax
    1453:	cmovns ecx,eax
    1456:	and    ecx,0xfffffffc
    1459:	sub    eax,ecx
    145b:	movsxd rbp,eax
    145e:	xor    ebx,ebx
    1460:	jmp    14aa <buy_stonks+0x15a>
    1462:	cs nop WORD PTR [rax+rax*1+0x0]
    146c:	nop    DWORD PTR [rax+0x0]
    1470:	call   1100 <rand@plt>
    1475:	cdqe   
    1477:	imul   rcx,rax,0x4ec4ec4f
    147e:	mov    rdx,rcx
    1481:	shr    rdx,0x3f
    1485:	shr    rcx,0x23
    1489:	add    ecx,edx
    148b:	lea    edx,[rcx+rcx*4]
    148e:	lea    edx,[rdx+rdx*4]
    1491:	add    edx,ecx
    1493:	sub    eax,edx
    1495:	add    al,0x41
    1497:	mov    BYTE PTR [r13+rbx*1+0x4],al
    149c:	add    rbx,0x1
    14a0:	cmp    rbx,0x5
    14a4:	je     1410 <buy_stonks+0xc0>
    14aa:	cmp    rbx,rbp
    14ad:	jle    1470 <buy_stonks+0x120>
    14af:	xor    eax,eax
    14b1:	jmp    1497 <buy_stonks+0x147>
    14b3:	mov    ebx,0x1
    14b8:	mov    eax,ebx
    14ba:	add    rsp,0x88
    14c1:	pop    rbx
    14c2:	pop    r12
    14c4:	pop    r13
    14c6:	pop    r14
    14c8:	pop    r15
    14ca:	pop    rbp
    14cb:	ret    
    14cc:	lea    rdi,[rip+0xb82]        # 2055 <_IO_stdin_used+0x55>
    14d3:	call   1040 <puts@plt>
    14d8:	mov    edi,0x1
    14dd:	call   10f0 <exit@plt>
    14e2:	cs nop WORD PTR [rax+rax*1+0x0]
    14ec:	nop    DWORD PTR [rax+0x0]

00000000000014f0 <initialize_portfolio>:
    14f0:	push   rbx
    14f1:	mov    edi,0x10
    14f6:	call   10b0 <malloc@plt>
    14fb:	mov    rbx,rax
    14fe:	call   1100 <rand@plt>
    1503:	cdqe   
    1505:	imul   rcx,rax,0xffffffff81e722c3
    150c:	shr    rcx,0x20
    1510:	add    ecx,eax
    1512:	mov    edx,ecx
    1514:	shr    edx,0x1f
    1517:	sar    ecx,0xa
    151a:	add    ecx,edx
    151c:	imul   ecx,ecx,0x7e2
    1522:	neg    ecx
    1524:	add    eax,ecx
    1526:	add    eax,0x1
    1529:	mov    DWORD PTR [rbx],eax
    152b:	mov    QWORD PTR [rbx+0x8],0x0
    1533:	mov    rax,rbx
    1536:	pop    rbx
    1537:	ret    
    1538:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001540 <free_portfolio>:
    1540:	push   r14
    1542:	push   rbx
    1543:	push   rax
    1544:	mov    r14,rdi
    1547:	mov    rdi,QWORD PTR [rdi+0x8]
    154b:	test   rdi,rdi
    154e:	je     1561 <free_portfolio+0x21>
    1550:	mov    rbx,QWORD PTR [rdi+0x10]
    1554:	call   1030 <free@plt>
    1559:	mov    rdi,rbx
    155c:	test   rbx,rbx
    155f:	jne    1550 <free_portfolio+0x10>
    1561:	mov    rdi,r14
    1564:	call   1030 <free@plt>
    1569:	add    rsp,0x8
    156d:	pop    rbx
    156e:	pop    r14
    1570:	ret    
    1571:	cs nop WORD PTR [rax+rax*1+0x0]
    157b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001580 <main>:
    1580:	push   rbx
    1581:	sub    rsp,0x10
    1585:	mov    rax,QWORD PTR [rip+0x2a54]        # 3fe0 <stdout@GLIBC_2.2.5>
    158c:	mov    rdi,QWORD PTR [rax]
    158f:	xor    esi,esi
    1591:	call   1050 <setbuf@plt>
    1596:	xor    edi,edi
    1598:	call   10a0 <time@plt>
    159d:	mov    edi,eax
    159f:	call   1080 <srand@plt>
    15a4:	mov    edi,0x10
    15a9:	call   10b0 <malloc@plt>
    15ae:	mov    rbx,rax
    15b1:	call   1100 <rand@plt>
    15b6:	cdqe   
    15b8:	imul   rcx,rax,0xffffffff81e722c3
    15bf:	shr    rcx,0x20
    15c3:	add    ecx,eax
    15c5:	mov    edx,ecx
    15c7:	shr    edx,0x1f
    15ca:	sar    ecx,0xa
    15cd:	add    ecx,edx
    15cf:	imul   ecx,ecx,0x7e2
    15d5:	neg    ecx
    15d7:	add    eax,ecx
    15d9:	add    eax,0x1
    15dc:	mov    DWORD PTR [rbx],eax
    15de:	mov    QWORD PTR [rbx+0x8],0x0
    15e6:	test   rbx,rbx
    15e9:	jne    1601 <main+0x81>
    15eb:	lea    rdi,[rip+0xaf5]        # 20e7 <_IO_stdin_used+0xe7>
    15f2:	call   1040 <puts@plt>
    15f7:	mov    edi,0x1
    15fc:	call   10f0 <exit@plt>
    1601:	mov    DWORD PTR [rsp+0xc],0x0
    1609:	lea    rdi,[rip+0xae6]        # 20f6 <_IO_stdin_used+0xf6>
    1610:	call   1040 <puts@plt>
    1615:	lea    rdi,[rip+0xafc]        # 2118 <_IO_stdin_used+0x118>
    161c:	call   1040 <puts@plt>
    1621:	lea    rdi,[rip+0xb0b]        # 2133 <_IO_stdin_used+0x133>
    1628:	call   1040 <puts@plt>
    162d:	lea    rdi,[rip+0xb13]        # 2147 <_IO_stdin_used+0x147>
    1634:	call   1040 <puts@plt>
    1639:	lea    rdi,[rip+0x9f8]        # 2038 <_IO_stdin_used+0x38>
    1640:	lea    rsi,[rsp+0xc]
    1645:	xor    eax,eax
    1647:	call   10e0 <__isoc99_scanf@plt>
    164c:	mov    eax,DWORD PTR [rsp+0xc]
    1650:	cmp    eax,0x2
    1653:	je     1664 <main+0xe4>
    1655:	cmp    eax,0x1
    1658:	jne    166c <main+0xec>
    165a:	mov    rdi,rbx
    165d:	call   1350 <buy_stonks>
    1662:	jmp    166c <main+0xec>
    1664:	mov    rdi,rbx
    1667:	call   1210 <view_portfolio>
    166c:	mov    rdi,rbx
    166f:	call   1540 <free_portfolio>
    1674:	lea    rdi,[rip+0xae1]        # 215c <_IO_stdin_used+0x15c>
    167b:	call   1040 <puts@plt>
    1680:	xor    edi,edi
    1682:	call   10f0 <exit@plt>

Disassembly of section .fini:

0000000000001688 <_fini>:
    1688:	endbr64 
    168c:	sub    rsp,0x8
    1690:	add    rsp,0x8
    1694:	ret    
