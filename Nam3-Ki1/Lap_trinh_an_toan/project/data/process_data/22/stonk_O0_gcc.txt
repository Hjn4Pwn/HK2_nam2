
./data/process_data_1/22/stonk_O0_gcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f2a]        # 3f50 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f2b]        # 3f58 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <_init+0x20>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <_init+0x20>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <_init+0x20>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <_init+0x20>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <_init+0x20>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <_init+0x20>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <_init+0x20>
    109f:	nop
    10a0:	endbr64 
    10a4:	push   0x7
    10a9:	bnd jmp 1020 <_init+0x20>
    10af:	nop
    10b0:	endbr64 
    10b4:	push   0x8
    10b9:	bnd jmp 1020 <_init+0x20>
    10bf:	nop
    10c0:	endbr64 
    10c4:	push   0x9
    10c9:	bnd jmp 1020 <_init+0x20>
    10cf:	nop
    10d0:	endbr64 
    10d4:	push   0xa
    10d9:	bnd jmp 1020 <_init+0x20>
    10df:	nop
    10e0:	endbr64 
    10e4:	push   0xb
    10e9:	bnd jmp 1020 <_init+0x20>
    10ef:	nop
    10f0:	endbr64 
    10f4:	push   0xc
    10f9:	bnd jmp 1020 <_init+0x20>
    10ff:	nop
    1100:	endbr64 
    1104:	push   0xd
    1109:	bnd jmp 1020 <_init+0x20>
    110f:	nop
    1110:	endbr64 
    1114:	push   0xe
    1119:	bnd jmp 1020 <_init+0x20>
    111f:	nop

Disassembly of section .plt.got:

0000000000001120 <__cxa_finalize@plt>:
    1120:	endbr64 
    1124:	bnd jmp QWORD PTR [rip+0x2ecd]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    112b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001130 <free@plt>:
    1130:	endbr64 
    1134:	bnd jmp QWORD PTR [rip+0x2e25]        # 3f60 <free@GLIBC_2.2.5>
    113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001140 <puts@plt>:
    1140:	endbr64 
    1144:	bnd jmp QWORD PTR [rip+0x2e1d]        # 3f68 <puts@GLIBC_2.2.5>
    114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001150 <__stack_chk_fail@plt>:
    1150:	endbr64 
    1154:	bnd jmp QWORD PTR [rip+0x2e15]        # 3f70 <__stack_chk_fail@GLIBC_2.4>
    115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001160 <setbuf@plt>:
    1160:	endbr64 
    1164:	bnd jmp QWORD PTR [rip+0x2e0d]        # 3f78 <setbuf@GLIBC_2.2.5>
    116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001170 <system@plt>:
    1170:	endbr64 
    1174:	bnd jmp QWORD PTR [rip+0x2e05]        # 3f80 <system@GLIBC_2.2.5>
    117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001180 <printf@plt>:
    1180:	endbr64 
    1184:	bnd jmp QWORD PTR [rip+0x2dfd]        # 3f88 <printf@GLIBC_2.2.5>
    118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001190 <srand@plt>:
    1190:	endbr64 
    1194:	bnd jmp QWORD PTR [rip+0x2df5]        # 3f90 <srand@GLIBC_2.2.5>
    119b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011a0 <fgets@plt>:
    11a0:	endbr64 
    11a4:	bnd jmp QWORD PTR [rip+0x2ded]        # 3f98 <fgets@GLIBC_2.2.5>
    11ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011b0 <time@plt>:
    11b0:	endbr64 
    11b4:	bnd jmp QWORD PTR [rip+0x2de5]        # 3fa0 <time@GLIBC_2.2.5>
    11bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011c0 <malloc@plt>:
    11c0:	endbr64 
    11c4:	bnd jmp QWORD PTR [rip+0x2ddd]        # 3fa8 <malloc@GLIBC_2.2.5>
    11cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011d0 <fflush@plt>:
    11d0:	endbr64 
    11d4:	bnd jmp QWORD PTR [rip+0x2dd5]        # 3fb0 <fflush@GLIBC_2.2.5>
    11db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011e0 <fopen@plt>:
    11e0:	endbr64 
    11e4:	bnd jmp QWORD PTR [rip+0x2dcd]        # 3fb8 <fopen@GLIBC_2.2.5>
    11eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011f0 <__isoc99_scanf@plt>:
    11f0:	endbr64 
    11f4:	bnd jmp QWORD PTR [rip+0x2dc5]        # 3fc0 <__isoc99_scanf@GLIBC_2.7>
    11fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001200 <exit@plt>:
    1200:	endbr64 
    1204:	bnd jmp QWORD PTR [rip+0x2dbd]        # 3fc8 <exit@GLIBC_2.2.5>
    120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001210 <rand@plt>:
    1210:	endbr64 
    1214:	bnd jmp QWORD PTR [rip+0x2db5]        # 3fd0 <rand@GLIBC_2.2.5>
    121b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001220 <_start>:
    1220:	endbr64 
    1224:	xor    ebp,ebp
    1226:	mov    r9,rdx
    1229:	pop    rsi
    122a:	mov    rdx,rsp
    122d:	and    rsp,0xfffffffffffffff0
    1231:	push   rax
    1232:	push   rsp
    1233:	xor    r8d,r8d
    1236:	xor    ecx,ecx
    1238:	lea    rdi,[rip+0x4e6]        # 1725 <main>
    123f:	call   QWORD PTR [rip+0x2d93]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1245:	hlt    
    1246:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001250 <deregister_tm_clones>:
    1250:	lea    rdi,[rip+0x2db9]        # 4010 <stdout@GLIBC_2.2.5>
    1257:	lea    rax,[rip+0x2db2]        # 4010 <stdout@GLIBC_2.2.5>
    125e:	cmp    rax,rdi
    1261:	je     1278 <deregister_tm_clones+0x28>
    1263:	mov    rax,QWORD PTR [rip+0x2d76]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    126a:	test   rax,rax
    126d:	je     1278 <deregister_tm_clones+0x28>
    126f:	jmp    rax
    1271:	nop    DWORD PTR [rax+0x0]
    1278:	ret    
    1279:	nop    DWORD PTR [rax+0x0]

0000000000001280 <register_tm_clones>:
    1280:	lea    rdi,[rip+0x2d89]        # 4010 <stdout@GLIBC_2.2.5>
    1287:	lea    rsi,[rip+0x2d82]        # 4010 <stdout@GLIBC_2.2.5>
    128e:	sub    rsi,rdi
    1291:	mov    rax,rsi
    1294:	shr    rsi,0x3f
    1298:	sar    rax,0x3
    129c:	add    rsi,rax
    129f:	sar    rsi,1
    12a2:	je     12b8 <register_tm_clones+0x38>
    12a4:	mov    rax,QWORD PTR [rip+0x2d45]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    12ab:	test   rax,rax
    12ae:	je     12b8 <register_tm_clones+0x38>
    12b0:	jmp    rax
    12b2:	nop    WORD PTR [rax+rax*1+0x0]
    12b8:	ret    
    12b9:	nop    DWORD PTR [rax+0x0]

00000000000012c0 <__do_global_dtors_aux>:
    12c0:	endbr64 
    12c4:	cmp    BYTE PTR [rip+0x2d4d],0x0        # 4018 <completed.0>
    12cb:	jne    12f8 <__do_global_dtors_aux+0x38>
    12cd:	push   rbp
    12ce:	cmp    QWORD PTR [rip+0x2d22],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    12d6:	mov    rbp,rsp
    12d9:	je     12e7 <__do_global_dtors_aux+0x27>
    12db:	mov    rdi,QWORD PTR [rip+0x2d26]        # 4008 <__dso_handle>
    12e2:	call   1120 <__cxa_finalize@plt>
    12e7:	call   1250 <deregister_tm_clones>
    12ec:	mov    BYTE PTR [rip+0x2d25],0x1        # 4018 <completed.0>
    12f3:	pop    rbp
    12f4:	ret    
    12f5:	nop    DWORD PTR [rax]
    12f8:	ret    
    12f9:	nop    DWORD PTR [rax+0x0]

0000000000001300 <frame_dummy>:
    1300:	endbr64 
    1304:	jmp    1280 <register_tm_clones>

0000000000001309 <view_portfolio>:
    1309:	endbr64 
    130d:	push   rbp
    130e:	mov    rbp,rsp
    1311:	sub    rsp,0x20
    1315:	mov    QWORD PTR [rbp-0x18],rdi
    1319:	cmp    QWORD PTR [rbp-0x18],0x0
    131e:	jne    132a <view_portfolio+0x21>
    1320:	mov    eax,0x1
    1325:	jmp    13da <view_portfolio+0xd1>
    132a:	lea    rax,[rip+0xcd7]        # 2008 <_IO_stdin_used+0x8>
    1331:	mov    rdi,rax
    1334:	mov    eax,0x0
    1339:	call   1180 <printf@plt>
    133e:	mov    rax,QWORD PTR [rip+0x2ccb]        # 4010 <stdout@GLIBC_2.2.5>
    1345:	mov    rdi,rax
    1348:	call   11d0 <fflush@plt>
    134d:	lea    rax,[rip+0xcc6]        # 201a <_IO_stdin_used+0x1a>
    1354:	mov    rdi,rax
    1357:	call   1170 <system@plt>
    135c:	mov    rax,QWORD PTR [rip+0x2cad]        # 4010 <stdout@GLIBC_2.2.5>
    1363:	mov    rdi,rax
    1366:	call   11d0 <fflush@plt>
    136b:	lea    rax,[rip+0xcad]        # 201f <_IO_stdin_used+0x1f>
    1372:	mov    rdi,rax
    1375:	call   1140 <puts@plt>
    137a:	mov    rax,QWORD PTR [rbp-0x18]
    137e:	mov    rax,QWORD PTR [rax+0x8]
    1382:	mov    QWORD PTR [rbp-0x8],rax
    1386:	cmp    QWORD PTR [rbp-0x8],0x0
    138b:	jne    13ce <view_portfolio+0xc5>
    138d:	lea    rax,[rip+0xc8d]        # 2021 <_IO_stdin_used+0x21>
    1394:	mov    rdi,rax
    1397:	call   1140 <puts@plt>
    139c:	jmp    13ce <view_portfolio+0xc5>
    139e:	mov    rax,QWORD PTR [rbp-0x8]
    13a2:	lea    rdx,[rax+0x4]
    13a6:	mov    rax,QWORD PTR [rbp-0x8]
    13aa:	mov    eax,DWORD PTR [rax]
    13ac:	mov    esi,eax
    13ae:	lea    rax,[rip+0xc86]        # 203b <_IO_stdin_used+0x3b>
    13b5:	mov    rdi,rax
    13b8:	mov    eax,0x0
    13bd:	call   1180 <printf@plt>
    13c2:	mov    rax,QWORD PTR [rbp-0x8]
    13c6:	mov    rax,QWORD PTR [rax+0x10]
    13ca:	mov    QWORD PTR [rbp-0x8],rax
    13ce:	cmp    QWORD PTR [rbp-0x8],0x0
    13d3:	jne    139e <view_portfolio+0x95>
    13d5:	mov    eax,0x0
    13da:	leave  
    13db:	ret    

00000000000013dc <pick_symbol_with_AI>:
    13dc:	endbr64 
    13e0:	push   rbp
    13e1:	mov    rbp,rsp
    13e4:	sub    rsp,0x20
    13e8:	mov    DWORD PTR [rbp-0x14],edi
    13eb:	cmp    DWORD PTR [rbp-0x14],0x0
    13ef:	jg     13fb <pick_symbol_with_AI+0x1f>
    13f1:	mov    eax,0x0
    13f6:	jmp    149b <pick_symbol_with_AI+0xbf>
    13fb:	mov    edi,0x18
    1400:	call   11c0 <malloc@plt>
    1405:	mov    QWORD PTR [rbp-0x8],rax
    1409:	mov    rax,QWORD PTR [rbp-0x8]
    140d:	mov    edx,DWORD PTR [rbp-0x14]
    1410:	mov    DWORD PTR [rax],edx
    1412:	call   1210 <rand@plt>
    1417:	cdq    
    1418:	shr    edx,0x1e
    141b:	add    eax,edx
    141d:	and    eax,0x3
    1420:	sub    eax,edx
    1422:	add    eax,0x1
    1425:	mov    DWORD PTR [rbp-0xc],eax
    1428:	mov    DWORD PTR [rbp-0x10],0x0
    142f:	jmp    1485 <pick_symbol_with_AI+0xa9>
    1431:	mov    eax,DWORD PTR [rbp-0x10]
    1434:	cmp    eax,DWORD PTR [rbp-0xc]
    1437:	jge    1473 <pick_symbol_with_AI+0x97>
    1439:	call   1210 <rand@plt>
    143e:	movsxd rdx,eax
    1441:	imul   rdx,rdx,0x4ec4ec4f
    1448:	shr    rdx,0x20
    144c:	sar    edx,0x3
    144f:	mov    ecx,eax
    1451:	sar    ecx,0x1f
    1454:	sub    edx,ecx
    1456:	imul   ecx,edx,0x1a
    1459:	sub    eax,ecx
    145b:	mov    edx,eax
    145d:	mov    eax,edx
    145f:	add    eax,0x41
    1462:	mov    ecx,eax
    1464:	mov    rdx,QWORD PTR [rbp-0x8]
    1468:	mov    eax,DWORD PTR [rbp-0x10]
    146b:	cdqe   
    146d:	mov    BYTE PTR [rdx+rax*1+0x4],cl
    1471:	jmp    1481 <pick_symbol_with_AI+0xa5>
    1473:	mov    rdx,QWORD PTR [rbp-0x8]
    1477:	mov    eax,DWORD PTR [rbp-0x10]
    147a:	cdqe   
    147c:	mov    BYTE PTR [rdx+rax*1+0x4],0x0
    1481:	add    DWORD PTR [rbp-0x10],0x1
    1485:	cmp    DWORD PTR [rbp-0x10],0x4
    1489:	jle    1431 <pick_symbol_with_AI+0x55>
    148b:	mov    rax,QWORD PTR [rbp-0x8]
    148f:	mov    QWORD PTR [rax+0x10],0x0
    1497:	mov    rax,QWORD PTR [rbp-0x8]
    149b:	leave  
    149c:	ret    

000000000000149d <buy_stonks>:
    149d:	endbr64 
    14a1:	push   rbp
    14a2:	mov    rbp,rsp
    14a5:	sub    rsp,0xc0
    14ac:	mov    QWORD PTR [rbp-0xb8],rdi
    14b3:	mov    rax,QWORD PTR fs:0x28
    14bc:	mov    QWORD PTR [rbp-0x8],rax
    14c0:	xor    eax,eax
    14c2:	cmp    QWORD PTR [rbp-0xb8],0x0
    14ca:	jne    14d6 <buy_stonks+0x39>
    14cc:	mov    eax,0x1
    14d1:	jmp    1655 <buy_stonks+0x1b8>
    14d6:	lea    rax,[rip+0xb6f]        # 204c <_IO_stdin_used+0x4c>
    14dd:	mov    rsi,rax
    14e0:	lea    rax,[rip+0xb67]        # 204e <_IO_stdin_used+0x4e>
    14e7:	mov    rdi,rax
    14ea:	call   11e0 <fopen@plt>
    14ef:	mov    QWORD PTR [rbp-0xa8],rax
    14f6:	cmp    QWORD PTR [rbp-0xa8],0x0
    14fe:	jne    1519 <buy_stonks+0x7c>
    1500:	lea    rax,[rip+0xb51]        # 2058 <_IO_stdin_used+0x58>
    1507:	mov    rdi,rax
    150a:	call   1140 <puts@plt>
    150f:	mov    edi,0x1
    1514:	call   1200 <exit@plt>
    1519:	mov    rdx,QWORD PTR [rbp-0xa8]
    1520:	lea    rax,[rbp-0x90]
    1527:	mov    esi,0x80
    152c:	mov    rdi,rax
    152f:	call   11a0 <fgets@plt>
    1534:	mov    rax,QWORD PTR [rbp-0xb8]
    153b:	mov    eax,DWORD PTR [rax]
    153d:	mov    DWORD PTR [rbp-0xb0],eax
    1543:	mov    DWORD PTR [rbp-0xac],0x0
    154d:	mov    QWORD PTR [rbp-0xa0],0x0
    1558:	lea    rax,[rip+0xb21]        # 2080 <_IO_stdin_used+0x80>
    155f:	mov    rdi,rax
    1562:	call   1140 <puts@plt>
    1567:	jmp    15c8 <buy_stonks+0x12b>
    1569:	call   1210 <rand@plt>
    156e:	cdq    
    156f:	idiv   DWORD PTR [rbp-0xb0]
    1575:	mov    eax,edx
    1577:	add    eax,0x1
    157a:	mov    DWORD PTR [rbp-0xac],eax
    1580:	mov    eax,DWORD PTR [rbp-0xac]
    1586:	mov    edi,eax
    1588:	call   13dc <pick_symbol_with_AI>
    158d:	mov    QWORD PTR [rbp-0xa0],rax
    1594:	mov    rax,QWORD PTR [rbp-0xb8]
    159b:	mov    rdx,QWORD PTR [rax+0x8]
    159f:	mov    rax,QWORD PTR [rbp-0xa0]
    15a6:	mov    QWORD PTR [rax+0x10],rdx
    15aa:	mov    rax,QWORD PTR [rbp-0xb8]
    15b1:	mov    rdx,QWORD PTR [rbp-0xa0]
    15b8:	mov    QWORD PTR [rax+0x8],rdx
    15bc:	mov    eax,DWORD PTR [rbp-0xac]
    15c2:	sub    DWORD PTR [rbp-0xb0],eax
    15c8:	cmp    DWORD PTR [rbp-0xb0],0x0
    15cf:	jg     1569 <buy_stonks+0xcc>
    15d1:	lea    rax,[rip+0xad3]        # 20ab <_IO_stdin_used+0xab>
    15d8:	mov    rdi,rax
    15db:	call   1140 <puts@plt>
    15e0:	mov    edi,0x12d
    15e5:	call   11c0 <malloc@plt>
    15ea:	mov    QWORD PTR [rbp-0x98],rax
    15f1:	lea    rax,[rip+0xac1]        # 20b9 <_IO_stdin_used+0xb9>
    15f8:	mov    rdi,rax
    15fb:	call   1140 <puts@plt>
    1600:	mov    rax,QWORD PTR [rbp-0x98]
    1607:	mov    rsi,rax
    160a:	lea    rax,[rip+0xac0]        # 20d1 <_IO_stdin_used+0xd1>
    1611:	mov    rdi,rax
    1614:	mov    eax,0x0
    1619:	call   11f0 <__isoc99_scanf@plt>
    161e:	lea    rax,[rip+0xab2]        # 20d7 <_IO_stdin_used+0xd7>
    1625:	mov    rdi,rax
    1628:	call   1140 <puts@plt>
    162d:	mov    rax,QWORD PTR [rbp-0x98]
    1634:	mov    rdi,rax
    1637:	mov    eax,0x0
    163c:	call   1180 <printf@plt>
    1641:	mov    rax,QWORD PTR [rbp-0xb8]
    1648:	mov    rdi,rax
    164b:	call   1309 <view_portfolio>
    1650:	mov    eax,0x0
    1655:	mov    rdx,QWORD PTR [rbp-0x8]
    1659:	sub    rdx,QWORD PTR fs:0x28
    1662:	je     1669 <buy_stonks+0x1cc>
    1664:	call   1150 <__stack_chk_fail@plt>
    1669:	leave  
    166a:	ret    

000000000000166b <initialize_portfolio>:
    166b:	endbr64 
    166f:	push   rbp
    1670:	mov    rbp,rsp
    1673:	sub    rsp,0x10
    1677:	mov    edi,0x10
    167c:	call   11c0 <malloc@plt>
    1681:	mov    QWORD PTR [rbp-0x8],rax
    1685:	call   1210 <rand@plt>
    168a:	movsxd rdx,eax
    168d:	imul   rdx,rdx,0xffffffff81e722c3
    1694:	shr    rdx,0x20
    1698:	add    edx,eax
    169a:	sar    edx,0xa
    169d:	mov    ecx,eax
    169f:	sar    ecx,0x1f
    16a2:	sub    edx,ecx
    16a4:	imul   ecx,edx,0x7e2
    16aa:	sub    eax,ecx
    16ac:	mov    edx,eax
    16ae:	add    edx,0x1
    16b1:	mov    rax,QWORD PTR [rbp-0x8]
    16b5:	mov    DWORD PTR [rax],edx
    16b7:	mov    rax,QWORD PTR [rbp-0x8]
    16bb:	mov    QWORD PTR [rax+0x8],0x0
    16c3:	mov    rax,QWORD PTR [rbp-0x8]
    16c7:	leave  
    16c8:	ret    

00000000000016c9 <free_portfolio>:
    16c9:	endbr64 
    16cd:	push   rbp
    16ce:	mov    rbp,rsp
    16d1:	sub    rsp,0x20
    16d5:	mov    QWORD PTR [rbp-0x18],rdi
    16d9:	mov    rax,QWORD PTR [rbp-0x18]
    16dd:	mov    rax,QWORD PTR [rax+0x8]
    16e1:	mov    QWORD PTR [rbp-0x10],rax
    16e5:	mov    QWORD PTR [rbp-0x8],0x0
    16ed:	jmp    170f <free_portfolio+0x46>
    16ef:	mov    rax,QWORD PTR [rbp-0x10]
    16f3:	mov    rax,QWORD PTR [rax+0x10]
    16f7:	mov    QWORD PTR [rbp-0x8],rax
    16fb:	mov    rax,QWORD PTR [rbp-0x10]
    16ff:	mov    rdi,rax
    1702:	call   1130 <free@plt>
    1707:	mov    rax,QWORD PTR [rbp-0x8]
    170b:	mov    QWORD PTR [rbp-0x10],rax
    170f:	cmp    QWORD PTR [rbp-0x10],0x0
    1714:	jne    16ef <free_portfolio+0x26>
    1716:	mov    rax,QWORD PTR [rbp-0x18]
    171a:	mov    rdi,rax
    171d:	call   1130 <free@plt>
    1722:	nop
    1723:	leave  
    1724:	ret    

0000000000001725 <main>:
    1725:	endbr64 
    1729:	push   rbp
    172a:	mov    rbp,rsp
    172d:	sub    rsp,0x30
    1731:	mov    DWORD PTR [rbp-0x24],edi
    1734:	mov    QWORD PTR [rbp-0x30],rsi
    1738:	mov    rax,QWORD PTR fs:0x28
    1741:	mov    QWORD PTR [rbp-0x8],rax
    1745:	xor    eax,eax
    1747:	mov    rax,QWORD PTR [rip+0x28c2]        # 4010 <stdout@GLIBC_2.2.5>
    174e:	mov    esi,0x0
    1753:	mov    rdi,rax
    1756:	call   1160 <setbuf@plt>
    175b:	mov    edi,0x0
    1760:	call   11b0 <time@plt>
    1765:	mov    edi,eax
    1767:	call   1190 <srand@plt>
    176c:	mov    eax,0x0
    1771:	call   166b <initialize_portfolio>
    1776:	mov    QWORD PTR [rbp-0x10],rax
    177a:	cmp    QWORD PTR [rbp-0x10],0x0
    177f:	jne    179a <main+0x75>
    1781:	lea    rax,[rip+0x969]        # 20f1 <_IO_stdin_used+0xf1>
    1788:	mov    rdi,rax
    178b:	call   1140 <puts@plt>
    1790:	mov    edi,0x1
    1795:	call   1200 <exit@plt>
    179a:	mov    DWORD PTR [rbp-0x14],0x0
    17a1:	lea    rax,[rip+0x958]        # 2100 <_IO_stdin_used+0x100>
    17a8:	mov    rdi,rax
    17ab:	call   1140 <puts@plt>
    17b0:	lea    rax,[rip+0x96b]        # 2122 <_IO_stdin_used+0x122>
    17b7:	mov    rdi,rax
    17ba:	call   1140 <puts@plt>
    17bf:	lea    rax,[rip+0x977]        # 213d <_IO_stdin_used+0x13d>
    17c6:	mov    rdi,rax
    17c9:	call   1140 <puts@plt>
    17ce:	lea    rax,[rip+0x97c]        # 2151 <_IO_stdin_used+0x151>
    17d5:	mov    rdi,rax
    17d8:	call   1140 <puts@plt>
    17dd:	lea    rax,[rbp-0x14]
    17e1:	mov    rsi,rax
    17e4:	lea    rax,[rip+0x97b]        # 2166 <_IO_stdin_used+0x166>
    17eb:	mov    rdi,rax
    17ee:	mov    eax,0x0
    17f3:	call   11f0 <__isoc99_scanf@plt>
    17f8:	mov    eax,DWORD PTR [rbp-0x14]
    17fb:	cmp    eax,0x1
    17fe:	jne    180e <main+0xe9>
    1800:	mov    rax,QWORD PTR [rbp-0x10]
    1804:	mov    rdi,rax
    1807:	call   149d <buy_stonks>
    180c:	jmp    1822 <main+0xfd>
    180e:	mov    eax,DWORD PTR [rbp-0x14]
    1811:	cmp    eax,0x2
    1814:	jne    1822 <main+0xfd>
    1816:	mov    rax,QWORD PTR [rbp-0x10]
    181a:	mov    rdi,rax
    181d:	call   1309 <view_portfolio>
    1822:	mov    rax,QWORD PTR [rbp-0x10]
    1826:	mov    rdi,rax
    1829:	call   16c9 <free_portfolio>
    182e:	lea    rax,[rip+0x934]        # 2169 <_IO_stdin_used+0x169>
    1835:	mov    rdi,rax
    1838:	call   1140 <puts@plt>
    183d:	mov    edi,0x0
    1842:	call   1200 <exit@plt>

Disassembly of section .fini:

0000000000001848 <_fini>:
    1848:	endbr64 
    184c:	sub    rsp,0x8
    1850:	add    rsp,0x8
    1854:	ret    
