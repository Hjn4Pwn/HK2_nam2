
./data/process_data_1/9/Guest_game_2_O1_clang:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd1]        # 3fe0 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	nop    DWORD PTR [rax+0x0]

0000000000001030 <puts@plt>:
    1030:	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <puts@GLIBC_2.2.5>
    1036:	push   0x0
    103b:	jmp    1020 <_init+0x20>

0000000000001040 <setresgid@plt>:
    1040:	jmp    QWORD PTR [rip+0x2fda]        # 4020 <setresgid@GLIBC_2.2.5>
    1046:	push   0x1
    104b:	jmp    1020 <_init+0x20>

0000000000001050 <printf@plt>:
    1050:	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <printf@GLIBC_2.2.5>
    1056:	push   0x2
    105b:	jmp    1020 <_init+0x20>

0000000000001060 <fgets@plt>:
    1060:	jmp    QWORD PTR [rip+0x2fca]        # 4030 <fgets@GLIBC_2.2.5>
    1066:	push   0x3
    106b:	jmp    1020 <_init+0x20>

0000000000001070 <strtol@plt>:
    1070:	jmp    QWORD PTR [rip+0x2fc2]        # 4038 <strtol@GLIBC_2.2.5>
    1076:	push   0x4
    107b:	jmp    1020 <_init+0x20>

0000000000001080 <gets@plt>:
    1080:	jmp    QWORD PTR [rip+0x2fba]        # 4040 <gets@GLIBC_2.2.5>
    1086:	push   0x5
    108b:	jmp    1020 <_init+0x20>

0000000000001090 <getegid@plt>:
    1090:	jmp    QWORD PTR [rip+0x2fb2]        # 4048 <getegid@GLIBC_2.2.5>
    1096:	push   0x6
    109b:	jmp    1020 <_init+0x20>

00000000000010a0 <setvbuf@plt>:
    10a0:	jmp    QWORD PTR [rip+0x2faa]        # 4050 <setvbuf@GLIBC_2.2.5>
    10a6:	push   0x7
    10ab:	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000010b0 <__cxa_finalize@plt>:
    10b0:	jmp    QWORD PTR [rip+0x2f3a]        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    10b6:	xchg   ax,ax

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	endbr64 
    10c4:	xor    ebp,ebp
    10c6:	mov    r9,rdx
    10c9:	pop    rsi
    10ca:	mov    rdx,rsp
    10cd:	and    rsp,0xfffffffffffffff0
    10d1:	push   rax
    10d2:	push   rsp
    10d3:	xor    r8d,r8d
    10d6:	xor    ecx,ecx
    10d8:	lea    rdi,[rip+0x1f1]        # 12d0 <main>
    10df:	call   QWORD PTR [rip+0x2edb]        # 3fc0 <__libc_start_main@GLIBC_2.34>
    10e5:	hlt    
    10e6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000010f0 <deregister_tm_clones>:
    10f0:	lea    rdi,[rip+0x2f71]        # 4068 <__TMC_END__>
    10f7:	lea    rax,[rip+0x2f6a]        # 4068 <__TMC_END__>
    10fe:	cmp    rax,rdi
    1101:	je     1118 <deregister_tm_clones+0x28>
    1103:	mov    rax,QWORD PTR [rip+0x2ebe]        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    110a:	test   rax,rax
    110d:	je     1118 <deregister_tm_clones+0x28>
    110f:	jmp    rax
    1111:	nop    DWORD PTR [rax+0x0]
    1118:	ret    
    1119:	nop    DWORD PTR [rax+0x0]

0000000000001120 <register_tm_clones>:
    1120:	lea    rdi,[rip+0x2f41]        # 4068 <__TMC_END__>
    1127:	lea    rsi,[rip+0x2f3a]        # 4068 <__TMC_END__>
    112e:	sub    rsi,rdi
    1131:	mov    rax,rsi
    1134:	shr    rsi,0x3f
    1138:	sar    rax,0x3
    113c:	add    rsi,rax
    113f:	sar    rsi,1
    1142:	je     1158 <register_tm_clones+0x38>
    1144:	mov    rax,QWORD PTR [rip+0x2e9d]        # 3fe8 <_ITM_registerTMCloneTable@Base>
    114b:	test   rax,rax
    114e:	je     1158 <register_tm_clones+0x38>
    1150:	jmp    rax
    1152:	nop    WORD PTR [rax+rax*1+0x0]
    1158:	ret    
    1159:	nop    DWORD PTR [rax+0x0]

0000000000001160 <__do_global_dtors_aux>:
    1160:	endbr64 
    1164:	cmp    BYTE PTR [rip+0x2efd],0x0        # 4068 <__TMC_END__>
    116b:	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	push   rbp
    116e:	cmp    QWORD PTR [rip+0x2e7a],0x0        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    1176:	mov    rbp,rsp
    1179:	je     1187 <__do_global_dtors_aux+0x27>
    117b:	mov    rdi,QWORD PTR [rip+0x2ede]        # 4060 <__dso_handle>
    1182:	call   10b0 <__cxa_finalize@plt>
    1187:	call   10f0 <deregister_tm_clones>
    118c:	mov    BYTE PTR [rip+0x2ed5],0x1        # 4068 <__TMC_END__>
    1193:	pop    rbp
    1194:	ret    
    1195:	nop    DWORD PTR [rax]
    1198:	ret    
    1199:	nop    DWORD PTR [rax+0x0]

00000000000011a0 <frame_dummy>:
    11a0:	endbr64 
    11a4:	jmp    1120 <register_tm_clones>
    11a9:	nop    DWORD PTR [rax+0x0]

00000000000011b0 <get_random>:
    11b0:	mov    rax,QWORD PTR [rip+0x2e41]        # 3ff8 <rand@GLIBC_2.2.5>
    11b7:	ret    
    11b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011c0 <get_version>:
    11c0:	mov    eax,0x2
    11c5:	ret    
    11c6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000011d0 <do_stuff>:
    11d0:	push   rbx
    11d1:	sub    rsp,0x200
    11d8:	lea    rdi,[rip+0xe51]        # 2030 <_IO_stdin_used+0x30>
    11df:	call   1030 <puts@plt>
    11e4:	mov    rax,QWORD PTR [rip+0x2ded]        # 3fd8 <stdin@GLIBC_2.2.5>
    11eb:	mov    rdx,QWORD PTR [rax]
    11ee:	mov    rbx,rsp
    11f1:	mov    rdi,rbx
    11f4:	mov    esi,0x200
    11f9:	call   1060 <fgets@plt>
    11fe:	mov    rdi,rbx
    1201:	xor    esi,esi
    1203:	mov    edx,0xa
    1208:	call   1070 <strtol@plt>
    120d:	mov    rcx,QWORD PTR [rip+0x2de4]        # 3ff8 <rand@GLIBC_2.2.5>
    1214:	lea    rdx,[rcx+0xfff]
    121b:	test   rcx,rcx
    121e:	cmovns rdx,rcx
    1222:	and    rdx,0xfffffffffffff000
    1229:	neg    rdx
    122c:	add    rcx,rdx
    122f:	add    rcx,0x1
    1233:	cmp    rax,rcx
    1236:	lea    rcx,[rip+0xe3a]        # 2077 <_IO_stdin_used+0x77>
    123d:	lea    rdx,[rip+0xe2c]        # 2070 <_IO_stdin_used+0x70>
    1244:	cmove  rdx,rcx
    1248:	sete   cl
    124b:	test   rax,rax
    124e:	setne  al
    1251:	lea    rdi,[rip+0xdfd]        # 2055 <_IO_stdin_used+0x55>
    1258:	cmovne rdi,rdx
    125c:	and    al,cl
    125e:	movzx  ebx,al
    1261:	call   1030 <puts@plt>
    1266:	mov    eax,ebx
    1268:	add    rsp,0x200
    126f:	pop    rbx
    1270:	ret    
    1271:	cs nop WORD PTR [rax+rax*1+0x0]
    127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001280 <win>:
    1280:	push   rbx
    1281:	sub    rsp,0x200
    1288:	lea    rdi,[rip+0xd75]        # 2004 <_IO_stdin_used+0x4>
    128f:	xor    eax,eax
    1291:	call   1050 <printf@plt>
    1296:	mov    rbx,rsp
    1299:	mov    rdi,rbx
    129c:	xor    eax,eax
    129e:	call   1080 <gets@plt>
    12a3:	lea    rdi,[rip+0xd6d]        # 2017 <_IO_stdin_used+0x17>
    12aa:	xor    eax,eax
    12ac:	call   1050 <printf@plt>
    12b1:	mov    rdi,rbx
    12b4:	xor    eax,eax
    12b6:	call   1050 <printf@plt>
    12bb:	lea    rdi,[rip+0xd6c]        # 202e <_IO_stdin_used+0x2e>
    12c2:	call   1030 <puts@plt>
    12c7:	add    rsp,0x200
    12ce:	pop    rbx
    12cf:	ret    

00000000000012d0 <main>:
    12d0:	push   r15
    12d2:	push   r14
    12d4:	push   r12
    12d6:	push   rbx
    12d7:	sub    rsp,0x208
    12de:	mov    rax,QWORD PTR [rip+0x2ceb]        # 3fd0 <stdout@GLIBC_2.2.5>
    12e5:	mov    rdi,QWORD PTR [rax]
    12e8:	xor    esi,esi
    12ea:	mov    edx,0x2
    12ef:	xor    ecx,ecx
    12f1:	call   10a0 <setvbuf@plt>
    12f6:	call   1090 <getegid@plt>
    12fb:	mov    edi,eax
    12fd:	mov    esi,eax
    12ff:	mov    edx,eax
    1301:	xor    eax,eax
    1303:	call   1040 <setresgid@plt>
    1308:	lea    rdi,[rip+0xda0]        # 20af <_IO_stdin_used+0xaf>
    130f:	call   1030 <puts@plt>
    1314:	lea    rdi,[rip+0xd07]        # 2022 <_IO_stdin_used+0x22>
    131b:	mov    esi,0x2
    1320:	xor    eax,eax
    1322:	call   1050 <printf@plt>
    1327:	lea    r14,[rip+0xcd6]        # 2004 <_IO_stdin_used+0x4>
    132e:	mov    rbx,rsp
    1331:	lea    r15,[rip+0xcdf]        # 2017 <_IO_stdin_used+0x17>
    1338:	lea    r12,[rip+0xcef]        # 202e <_IO_stdin_used+0x2e>
    133f:	nop
    1340:	call   11d0 <do_stuff>
    1345:	test   eax,eax
    1347:	je     1340 <main+0x70>
    1349:	mov    rdi,r14
    134c:	xor    eax,eax
    134e:	call   1050 <printf@plt>
    1353:	mov    rdi,rbx
    1356:	xor    eax,eax
    1358:	call   1080 <gets@plt>
    135d:	mov    rdi,r15
    1360:	xor    eax,eax
    1362:	call   1050 <printf@plt>
    1367:	mov    rdi,rbx
    136a:	xor    eax,eax
    136c:	call   1050 <printf@plt>
    1371:	mov    rdi,r12
    1374:	call   1030 <puts@plt>
    1379:	jmp    1340 <main+0x70>

Disassembly of section .fini:

000000000000137c <_fini>:
    137c:	endbr64 
    1380:	sub    rsp,0x8
    1384:	add    rsp,0x8
    1388:	ret    
