
./data/process_data_1/9/Guest_game_2_O1_gcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd1]        # 3fe0 <__gmon_start__@Base>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f52]        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f53]        # 3f80 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <_init+0x20>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <_init+0x20>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <_init+0x20>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <_init+0x20>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <_init+0x20>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <_init+0x20>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <_init+0x20>
    109f:	nop
    10a0:	endbr64 
    10a4:	push   0x7
    10a9:	bnd jmp 1020 <_init+0x20>
    10af:	nop
    10b0:	endbr64 
    10b4:	push   0x8
    10b9:	bnd jmp 1020 <_init+0x20>
    10bf:	nop

Disassembly of section .plt.got:

00000000000010c0 <__cxa_finalize@plt>:
    10c0:	endbr64 
    10c4:	bnd jmp QWORD PTR [rip+0x2f25]        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    10cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000010d0 <puts@plt>:
    10d0:	endbr64 
    10d4:	bnd jmp QWORD PTR [rip+0x2ead]        # 3f88 <puts@GLIBC_2.2.5>
    10db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010e0 <__stack_chk_fail@plt>:
    10e0:	endbr64 
    10e4:	bnd jmp QWORD PTR [rip+0x2ea5]        # 3f90 <__stack_chk_fail@GLIBC_2.4>
    10eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010f0 <setresgid@plt>:
    10f0:	endbr64 
    10f4:	bnd jmp QWORD PTR [rip+0x2e9d]        # 3f98 <setresgid@GLIBC_2.2.5>
    10fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001100 <fgets@plt>:
    1100:	endbr64 
    1104:	bnd jmp QWORD PTR [rip+0x2e95]        # 3fa0 <fgets@GLIBC_2.2.5>
    110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001110 <strtol@plt>:
    1110:	endbr64 
    1114:	bnd jmp QWORD PTR [rip+0x2e8d]        # 3fa8 <strtol@GLIBC_2.2.5>
    111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <gets@plt>:
    1120:	endbr64 
    1124:	bnd jmp QWORD PTR [rip+0x2e85]        # 3fb0 <gets@GLIBC_2.2.5>
    112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001130 <getegid@plt>:
    1130:	endbr64 
    1134:	bnd jmp QWORD PTR [rip+0x2e7d]        # 3fb8 <getegid@GLIBC_2.2.5>
    113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001140 <__printf_chk@plt>:
    1140:	endbr64 
    1144:	bnd jmp QWORD PTR [rip+0x2e75]        # 3fc0 <__printf_chk@GLIBC_2.3.4>
    114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001150 <setvbuf@plt>:
    1150:	endbr64 
    1154:	bnd jmp QWORD PTR [rip+0x2e6d]        # 3fc8 <setvbuf@GLIBC_2.2.5>
    115b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001160 <_start>:
    1160:	endbr64 
    1164:	xor    ebp,ebp
    1166:	mov    r9,rdx
    1169:	pop    rsi
    116a:	mov    rdx,rsp
    116d:	and    rsp,0xfffffffffffffff0
    1171:	push   rax
    1172:	push   rsp
    1173:	xor    r8d,r8d
    1176:	xor    ecx,ecx
    1178:	lea    rdi,[rip+0x24d]        # 13cc <main>
    117f:	call   QWORD PTR [rip+0x2e4b]        # 3fd0 <__libc_start_main@GLIBC_2.34>
    1185:	hlt    
    1186:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000001190 <deregister_tm_clones>:
    1190:	lea    rdi,[rip+0x2e79]        # 4010 <stdout@GLIBC_2.2.5>
    1197:	lea    rax,[rip+0x2e72]        # 4010 <stdout@GLIBC_2.2.5>
    119e:	cmp    rax,rdi
    11a1:	je     11b8 <deregister_tm_clones+0x28>
    11a3:	mov    rax,QWORD PTR [rip+0x2e2e]        # 3fd8 <_ITM_deregisterTMCloneTable@Base>
    11aa:	test   rax,rax
    11ad:	je     11b8 <deregister_tm_clones+0x28>
    11af:	jmp    rax
    11b1:	nop    DWORD PTR [rax+0x0]
    11b8:	ret    
    11b9:	nop    DWORD PTR [rax+0x0]

00000000000011c0 <register_tm_clones>:
    11c0:	lea    rdi,[rip+0x2e49]        # 4010 <stdout@GLIBC_2.2.5>
    11c7:	lea    rsi,[rip+0x2e42]        # 4010 <stdout@GLIBC_2.2.5>
    11ce:	sub    rsi,rdi
    11d1:	mov    rax,rsi
    11d4:	shr    rsi,0x3f
    11d8:	sar    rax,0x3
    11dc:	add    rsi,rax
    11df:	sar    rsi,1
    11e2:	je     11f8 <register_tm_clones+0x38>
    11e4:	mov    rax,QWORD PTR [rip+0x2dfd]        # 3fe8 <_ITM_registerTMCloneTable@Base>
    11eb:	test   rax,rax
    11ee:	je     11f8 <register_tm_clones+0x38>
    11f0:	jmp    rax
    11f2:	nop    WORD PTR [rax+rax*1+0x0]
    11f8:	ret    
    11f9:	nop    DWORD PTR [rax+0x0]

0000000000001200 <__do_global_dtors_aux>:
    1200:	endbr64 
    1204:	cmp    BYTE PTR [rip+0x2e1d],0x0        # 4028 <completed.0>
    120b:	jne    1238 <__do_global_dtors_aux+0x38>
    120d:	push   rbp
    120e:	cmp    QWORD PTR [rip+0x2dda],0x0        # 3ff0 <__cxa_finalize@GLIBC_2.2.5>
    1216:	mov    rbp,rsp
    1219:	je     1227 <__do_global_dtors_aux+0x27>
    121b:	mov    rdi,QWORD PTR [rip+0x2de6]        # 4008 <__dso_handle>
    1222:	call   10c0 <__cxa_finalize@plt>
    1227:	call   1190 <deregister_tm_clones>
    122c:	mov    BYTE PTR [rip+0x2df5],0x1        # 4028 <completed.0>
    1233:	pop    rbp
    1234:	ret    
    1235:	nop    DWORD PTR [rax]
    1238:	ret    
    1239:	nop    DWORD PTR [rax+0x0]

0000000000001240 <frame_dummy>:
    1240:	endbr64 
    1244:	jmp    11c0 <register_tm_clones>

0000000000001249 <get_random>:
    1249:	endbr64 
    124d:	mov    rax,QWORD PTR [rip+0x2da4]        # 3ff8 <rand@GLIBC_2.2.5>
    1254:	ret    

0000000000001255 <get_version>:
    1255:	endbr64 
    1259:	mov    eax,0x2
    125e:	ret    

000000000000125f <do_stuff>:
    125f:	endbr64 
    1263:	push   rbx
    1264:	sub    rsp,0x210
    126b:	mov    rax,QWORD PTR fs:0x28
    1274:	mov    QWORD PTR [rsp+0x208],rax
    127c:	xor    eax,eax
    127e:	lea    rdi,[rip+0xd83]        # 2008 <_IO_stdin_used+0x8>
    1285:	call   10d0 <puts@plt>
    128a:	mov    rbx,rsp
    128d:	mov    rdx,QWORD PTR [rip+0x2d8c]        # 4020 <stdin@GLIBC_2.2.5>
    1294:	mov    esi,0x200
    1299:	mov    rdi,rbx
    129c:	call   1100 <fgets@plt>
    12a1:	mov    edx,0xa
    12a6:	mov    esi,0x0
    12ab:	mov    rdi,rbx
    12ae:	call   1110 <strtol@plt>
    12b3:	test   rax,rax
    12b6:	je     130c <do_stuff+0xad>
    12b8:	mov    rdx,QWORD PTR [rip+0x2d39]        # 3ff8 <rand@GLIBC_2.2.5>
    12bf:	mov    rcx,rdx
    12c2:	sar    rcx,0x3f
    12c6:	shr    rcx,0x34
    12ca:	add    rdx,rcx
    12cd:	and    edx,0xfff
    12d3:	sub    rdx,rcx
    12d6:	add    rdx,0x1
    12da:	cmp    rax,rdx
    12dd:	je     131f <do_stuff+0xc0>
    12df:	lea    rdi,[rip+0xd9d]        # 2083 <_IO_stdin_used+0x83>
    12e6:	call   10d0 <puts@plt>
    12eb:	mov    eax,0x0
    12f0:	mov    rdx,QWORD PTR [rsp+0x208]
    12f8:	sub    rdx,QWORD PTR fs:0x28
    1301:	jne    1332 <do_stuff+0xd3>
    1303:	add    rsp,0x210
    130a:	pop    rbx
    130b:	ret    
    130c:	lea    rdi,[rip+0xd55]        # 2068 <_IO_stdin_used+0x68>
    1313:	call   10d0 <puts@plt>
    1318:	mov    eax,0x0
    131d:	jmp    12f0 <do_stuff+0x91>
    131f:	lea    rdi,[rip+0xd0a]        # 2030 <_IO_stdin_used+0x30>
    1326:	call   10d0 <puts@plt>
    132b:	mov    eax,0x1
    1330:	jmp    12f0 <do_stuff+0x91>
    1332:	call   10e0 <__stack_chk_fail@plt>

0000000000001337 <win>:
    1337:	endbr64 
    133b:	push   rbx
    133c:	sub    rsp,0x210
    1343:	mov    rax,QWORD PTR fs:0x28
    134c:	mov    QWORD PTR [rsp+0x208],rax
    1354:	xor    eax,eax
    1356:	lea    rsi,[rip+0xd2d]        # 208a <_IO_stdin_used+0x8a>
    135d:	mov    edi,0x1
    1362:	call   1140 <__printf_chk@plt>
    1367:	mov    rbx,rsp
    136a:	mov    rdi,rbx
    136d:	mov    eax,0x0
    1372:	call   1120 <gets@plt>
    1377:	lea    rsi,[rip+0xd1f]        # 209d <_IO_stdin_used+0x9d>
    137e:	mov    edi,0x1
    1383:	mov    eax,0x0
    1388:	call   1140 <__printf_chk@plt>
    138d:	mov    rsi,rbx
    1390:	mov    edi,0x1
    1395:	mov    eax,0x0
    139a:	call   1140 <__printf_chk@plt>
    139f:	lea    rdi,[rip+0xd2b]        # 20d1 <_IO_stdin_used+0xd1>
    13a6:	call   10d0 <puts@plt>
    13ab:	mov    rax,QWORD PTR [rsp+0x208]
    13b3:	sub    rax,QWORD PTR fs:0x28
    13bc:	jne    13c7 <win+0x90>
    13be:	add    rsp,0x210
    13c5:	pop    rbx
    13c6:	ret    
    13c7:	call   10e0 <__stack_chk_fail@plt>

00000000000013cc <main>:
    13cc:	endbr64 
    13d0:	push   rax
    13d1:	pop    rax
    13d2:	sub    rsp,0x8
    13d6:	mov    ecx,0x0
    13db:	mov    edx,0x2
    13e0:	mov    esi,0x0
    13e5:	mov    rdi,QWORD PTR [rip+0x2c24]        # 4010 <stdout@GLIBC_2.2.5>
    13ec:	call   1150 <setvbuf@plt>
    13f1:	call   1130 <getegid@plt>
    13f6:	mov    edi,eax
    13f8:	mov    edx,eax
    13fa:	mov    esi,eax
    13fc:	mov    eax,0x0
    1401:	call   10f0 <setresgid@plt>
    1406:	lea    rdi,[rip+0xc9b]        # 20a8 <_IO_stdin_used+0xa8>
    140d:	call   10d0 <puts@plt>
    1412:	mov    edx,0x2
    1417:	lea    rsi,[rip+0xca7]        # 20c5 <_IO_stdin_used+0xc5>
    141e:	mov    edi,0x1
    1423:	mov    eax,0x0
    1428:	call   1140 <__printf_chk@plt>
    142d:	mov    eax,0x0
    1432:	call   125f <do_stuff>
    1437:	test   eax,eax
    1439:	je     142d <main+0x61>
    143b:	mov    eax,0x0
    1440:	call   1337 <win>
    1445:	jmp    142d <main+0x61>

Disassembly of section .fini:

0000000000001448 <_fini>:
    1448:	endbr64 
    144c:	sub    rsp,0x8
    1450:	add    rsp,0x8
    1454:	ret    
